{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\n// Use a default URL for build-time schema generation if DATABASE_URL is not available\nconst databaseUrl = process.env.DATABASE_URL || \"postgresql://placeholder:placeholder@localhost:5432/placeholder\";\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: databaseUrl,\n  },\n});\n","size_bytes":408},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Heaven of Munroe - Tourism Website\n\n## Overview\n\nHeaven of Munroe is a tourism website for a kayaking and homestay service located on Munroe Island, Kerala. The platform focuses on promoting authentic backwater experiences including kayaking adventures, traditional homestay accommodations, canal boating, houseboat rides, and local cuisine. The website is designed to be conversion-focused and SEO-optimized to attract both domestic and international tourists.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript using Vite as the build tool\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack React Query for server state management and caching\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n- **UI Components**: Radix UI primitives for accessible component foundation\n\n### Backend Architecture\n- **Server**: Express.js with TypeScript for API endpoints\n- **Database ORM**: Drizzle ORM with PostgreSQL dialect for type-safe database operations\n- **Schema Validation**: Zod schemas shared between frontend and backend\n- **Storage**: PostgreSQL database with Drizzle migrations\n- **Session Management**: Connect-pg-simple for PostgreSQL session storage\n\n### Data Storage Solutions\n- **Primary Database**: PostgreSQL (Neon Database serverless)\n- **Database Configuration**: Neon Database serverless for production deployment\n- **Schema Management**: Drizzle migrations with schema definition in shared directory\n- **Data Models**: Booking inquiries and contact messages with proper validation\n\n### Authentication and Authorization\n- **Session-based**: Express sessions with PostgreSQL store\n- **No user authentication**: Public-facing tourism website with inquiry forms only\n- **Rate Limiting**: Not implemented but can be added for form submissions\n\n### API Design\n- **RESTful Endpoints**: \n  - POST `/api/booking-inquiry` for tourism booking requests\n  - POST `/api/contact-message` for general contact forms\n- **Error Handling**: Centralized error middleware with proper HTTP status codes\n- **Validation**: Server-side validation using Zod schemas\n- **Response Format**: Consistent JSON responses with success/error indicators\n\n### SEO and Performance Optimizations\n- **Meta Tags**: Comprehensive SEO meta tags focused on Munroe Island keywords\n- **Font Optimization**: Google Fonts with preconnect for performance\n- **Image Optimization**: Unsplash images with responsive sizing and alt text\n- **Code Splitting**: Vite's automatic code splitting for optimal loading\n\n## External Dependencies\n\n### Core Technologies\n- **React 18**: Frontend framework with TypeScript support\n- **Express.js**: Backend server framework\n- **Drizzle ORM**: Type-safe database ORM with PostgreSQL support\n- **Neon Database**: Serverless PostgreSQL database provider\n\n### UI and Styling\n- **Tailwind CSS**: Utility-first CSS framework\n- **shadcn/ui**: Component library built on Radix UI\n- **Radix UI**: Accessible component primitives\n- **Lucide React**: Icon library for consistent iconography\n\n### Form and Validation\n- **React Hook Form**: Form state management and validation\n- **Zod**: Schema validation for type safety\n- **@hookform/resolvers**: Integration between React Hook Form and Zod\n\n### Development Tools\n- **Vite**: Build tool and development server\n- **TypeScript**: Type safety across the application\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **PostCSS**: CSS processing with Autoprefixer\n\n### Third-party Services\n- **SendGrid**: Email service for contact form notifications (configured but not implemented)\n- **WhatsApp Business API**: Direct booking integration via WhatsApp links\n- **Google Maps**: Location services for directions and mapping\n- **Font Awesome**: Icon library for UI elements\n\n### Deployment and Hosting\n- **Replit**: Development and hosting platform\n- **Node.js**: Runtime environment for server-side execution\n- **Environment Variables**: Configuration management for database and API keys","size_bytes":4203},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2138},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\n// Fix for import.meta.dirname compatibility\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\nexport default defineConfig({\n  plugins: [\n    react(),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(__dirname, \"shared\"),\n      \"@assets\": path.resolve(__dirname, \"attached_assets\"),\n      \"react\": path.resolve(__dirname, \"node_modules\", \"react\"),\n      \"react-dom\": path.resolve(__dirname, \"node_modules\", \"react-dom\"),\n    },\n  },\n  root: path.resolve(__dirname, \"client\"),\n  build: {\n    outDir: path.resolve(__dirname, \"dist/public\"),\n    emptyOutDir: true,\n    rollupOptions: {\n      output: {\n        manualChunks: undefined,\n      },\n    },\n    target: 'esnext',\n    minify: 'esbuild',\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1001},"server/index.ts":{"content":"import express from \"express\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { registerRoutes } from \"./routes\";\n\n// Fix for import.meta.dirname compatibility\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\nconst app = express();\nconst PORT = parseInt(process.env.PORT || \"5000\", 10);\n\n// Middleware\napp.use(express.json({ limit: \"10mb\" }));\napp.use(express.urlencoded({ extended: true, limit: \"10mb\" }));\n\n// CORS middleware for development\napp.use((req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept, Authorization\");\n  \n  if (req.method === \"OPTIONS\") {\n    res.sendStatus(200);\n  } else {\n    next();\n  }\n});\n\n// Request logging middleware\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      console.log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Serve static files from the dist directory\nconst staticPath = path.resolve(__dirname, \"../dist/public\");\napp.use(express.static(staticPath));\n\n// Register API routes\nregisterRoutes(app);\n\n// Global error handler\napp.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {\n  console.error(\"Global error:\", err);\n  const status = err.status || err.statusCode || 500;\n  const message = err.message || \"Internal Server Error\";\n  res.status(status).json({ success: false, message });\n});\n\n// Start server\nif (import.meta.url === `file://${process.argv[1]}`) {\n  app.listen(PORT, \"0.0.0.0\", () => {\n    console.log(`🚀 Server running on http://0.0.0.0:${PORT}`);\n    console.log(`📁 Static files served from: ${staticPath}`);\n    console.log(`🏠 Environment: ${process.env.NODE_ENV || \"development\"}`);\n  });\n}\n\nexport default app;","size_bytes":2558},"server/routes.ts":{"content":"import express, { type Request, Response } from \"express\";\nimport { eq, and } from \"drizzle-orm\";\nimport { db } from \"./db\";\nimport {\n  bookingInquiries,\n  contactMessages,\n  heroContent,\n  aboutContent,\n  galleryImages,\n  boatingPackages,\n  testimonials,\n  contentSections,\n  insertBookingInquirySchema,\n  insertContactMessageSchema,\n  insertHeroContentSchema,\n  insertAboutContentSchema,\n  insertGalleryImageSchema,\n  insertBoatingPackageSchema,\n  insertTestimonialSchema,\n  insertContentSectionSchema,\n} from \"../shared/schema\";\nimport { z } from \"zod\";\nimport { sendEmail, formatBookingNotification, formatContactNotification } from \"./email\";\n\nexport function registerRoutes(app: express.Express) {\n  // Booking inquiry endpoint\n  app.post(\"/api/booking-inquiry\", async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertBookingInquirySchema.parse(req.body);\n      \n      const result = await db\n        .insert(bookingInquiries)\n        .values({\n          ...validatedData,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n        })\n        .returning();\n\n      // Send email notification if configured\n      if (process.env.SENDGRID_FROM_EMAIL) {\n        const emailContent = formatBookingNotification(validatedData);\n        await sendEmail({\n          to: process.env.SENDGRID_FROM_EMAIL,\n          from: process.env.SENDGRID_FROM_EMAIL,\n          subject: emailContent.subject,\n          text: emailContent.text,\n          html: emailContent.html\n        });\n      }\n\n      res.json({ success: true, data: result[0] });\n    } catch (error) {\n      console.error(\"Booking inquiry error:\", error);\n      \n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\",\n          errors: error.errors \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to submit booking inquiry\" \n        });\n      }\n    }\n  });\n\n  // Contact message endpoint\n  app.post(\"/api/contact-message\", async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertContactMessageSchema.parse(req.body);\n      \n      const result = await db\n        .insert(contactMessages)\n        .values({\n          ...validatedData,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n        })\n        .returning();\n\n      // Send email notification if configured\n      if (process.env.SENDGRID_FROM_EMAIL) {\n        const emailContent = formatContactNotification(validatedData);\n        await sendEmail({\n          to: process.env.SENDGRID_FROM_EMAIL,\n          from: process.env.SENDGRID_FROM_EMAIL,\n          subject: emailContent.subject,\n          text: emailContent.text,\n          html: emailContent.html\n        });\n      }\n\n      res.json({ success: true, data: result[0] });\n    } catch (error) {\n      console.error(\"Contact message error:\", error);\n      \n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\",\n          errors: error.errors \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to submit contact message\" \n        });\n      }\n    }\n  });\n\n  // Get hero content (frontend expects /api/hero-content)\n  app.get(\"/api/hero-content\", async (req: Request, res: Response) => {\n    try {\n      const result = await db\n        .select()\n        .from(heroContent)\n        .where(eq(heroContent.isActive, true))\n        .limit(1);\n\n      res.json(result[0] || null);\n    } catch (error) {\n      console.error(\"Hero content error:\", error);\n      // Return null to let frontend use static fallback data\n      res.json(null);\n    }\n  });\n\n  // Get about content (frontend expects /api/about-content)\n  app.get(\"/api/about-content\", async (req: Request, res: Response) => {\n    try {\n      const result = await db\n        .select()\n        .from(aboutContent)\n        .where(eq(aboutContent.isActive, true))\n        .limit(1);\n\n      res.json(result[0] || null);\n    } catch (error) {\n      console.error(\"About content error:\", error);\n      // Return null to let frontend use static fallback data\n      res.json(null);\n    }\n  });\n\n  // Get gallery images (frontend expects /api/gallery-images)\n  app.get(\"/api/gallery-images\", async (req: Request, res: Response) => {\n    try {\n      const result = await db\n        .select()\n        .from(galleryImages)\n        .where(eq(galleryImages.isActive, true))\n        .orderBy(galleryImages.sortOrder);\n\n      res.json(result);\n    } catch (error) {\n      console.error(\"Gallery images error:\", error);\n      // Return empty array to let frontend use static fallback data\n      res.json([]);\n    }\n  });\n\n  // Get boating packages (new endpoint)\n  app.get(\"/api/boating-packages\", async (req: Request, res: Response) => {\n    try {\n      const result = await db\n        .select()\n        .from(boatingPackages)\n        .where(eq(boatingPackages.isActive, true))\n        .orderBy(boatingPackages.sortOrder);\n\n      res.json(result);\n    } catch (error) {\n      console.error(\"Boating packages error:\", error);\n      // Return empty array to let frontend use static fallback data\n      res.json([]);\n    }\n  });\n\n  // Get testimonials (new endpoint)\n  app.get(\"/api/testimonials\", async (req: Request, res: Response) => {\n    try {\n      const result = await db\n        .select()\n        .from(testimonials)\n        .where(eq(testimonials.isActive, true))\n        .orderBy(testimonials.sortOrder);\n\n      res.json(result);\n    } catch (error) {\n      console.error(\"Testimonials error:\", error);\n      // Return empty array to let frontend use static fallback data\n      res.json([]);\n    }\n  });\n\n  // Get content sections (new endpoint)\n  app.get(\"/api/content-sections/:sectionKey\", async (req: Request, res: Response) => {\n    try {\n      const { sectionKey } = req.params;\n      const result = await db\n        .select()\n        .from(contentSections)\n        .where(and(eq(contentSections.sectionKey, sectionKey), eq(contentSections.isActive, true)))\n        .limit(1);\n\n      res.json(result[0] || null);\n    } catch (error) {\n      console.error(\"Content sections error:\", error);\n      // Return null to let frontend use static fallback data\n      res.json(null);\n    }\n  });\n\n  // Admin endpoints for content management\n  app.post(\"/api/admin/hero\", async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertHeroContentSchema.parse(req.body);\n      \n      // Deactivate existing hero content\n      await db\n        .update(heroContent)\n        .set({ isActive: false })\n        .where(eq(heroContent.isActive, true));\n\n      const result = await db\n        .insert(heroContent)\n        .values({\n          ...validatedData,\n          isActive: true,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n        })\n        .returning();\n\n      res.json({ success: true, data: result[0] });\n    } catch (error) {\n      console.error(\"Admin hero content error:\", error);\n      \n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\",\n          errors: error.errors \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to update hero content\" \n        });\n      }\n    }\n  });\n\n  app.post(\"/api/admin/gallery\", async (req: Request, res: Response) => {\n    try {\n      const validatedData = insertGalleryImageSchema.parse(req.body);\n      \n      const result = await db\n        .insert(galleryImages)\n        .values({\n          ...validatedData,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n        })\n        .returning();\n\n      res.json({ success: true, data: result[0] });\n    } catch (error) {\n      console.error(\"Admin gallery error:\", error);\n      \n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\",\n          errors: error.errors \n        });\n      } else {\n        res.status(500).json({ \n          success: false, \n          message: \"Failed to add gallery image\" \n        });\n      }\n    }\n  });\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req: Request, res: Response) => {\n    res.json({ success: true, message: \"API is running\" });\n  });\n\n  // Catch-all for client-side routing - serve index.html for non-API routes\n  app.get(\"*\", (req: Request, res: Response) => {\n    // Only serve static files for non-API routes\n    if (!req.path.startsWith(\"/api\")) {\n      res.sendFile(\"index.html\", { root: \"dist/public\" });\n    } else {\n      res.status(404).json({ success: false, message: \"API endpoint not found\" });\n    }\n  });\n}","size_bytes":8845},"server/storage.ts":{"content":"import { \n  type BookingInquiry, type InsertBookingInquiry, \n  type ContactMessage, type InsertContactMessage,\n  type HeroContent, type InsertHeroContent,\n  type AboutContent, type InsertAboutContent,\n  type BoatingPackage, type InsertBoatingPackage,\n  type Testimonial, type InsertTestimonial,\n  type GalleryImage, type InsertGalleryImage,\n  type ContactInfo, type InsertContactInfo,\n  type ContentSection, type InsertContentSection,\n  bookingInquiries, contactMessages, heroContent, aboutContent,\n  boatingPackages, testimonials, galleryImages, contactInfo, contentSections\n} from \"@shared/schema\";\n// Database imports - conditionally available based on DATABASE_URL\nimport { db } from \"./db\";\nimport { eq, desc } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // Existing booking and contact methods\n  createBookingInquiry(inquiry: InsertBookingInquiry): Promise<BookingInquiry>;\n  createContactMessage(message: InsertContactMessage): Promise<ContactMessage>;\n  getBookingInquiries(): Promise<BookingInquiry[]>;\n  getContactMessages(): Promise<ContactMessage[]>;\n  \n  // Content management methods\n  getHeroContent(): Promise<HeroContent | null>;\n  updateHeroContent(content: InsertHeroContent): Promise<HeroContent>;\n  \n  getAboutContent(): Promise<AboutContent | null>;\n  updateAboutContent(content: InsertAboutContent): Promise<AboutContent>;\n  \n  getBoatingPackages(): Promise<BoatingPackage[]>;\n  createBoatingPackage(packageData: InsertBoatingPackage): Promise<BoatingPackage>;\n  updateBoatingPackage(id: string, packageData: Partial<InsertBoatingPackage>): Promise<BoatingPackage>;\n  deleteBoatingPackage(id: string): Promise<void>;\n  \n  getTestimonials(): Promise<Testimonial[]>;\n  createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial>;\n  updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial>;\n  deleteTestimonial(id: string): Promise<void>;\n  \n  getGalleryImages(): Promise<GalleryImage[]>;\n  createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage>;\n  updateGalleryImage(id: string, image: Partial<InsertGalleryImage>): Promise<GalleryImage>;\n  deleteGalleryImage(id: string): Promise<void>;\n  \n  getContactInfo(): Promise<ContactInfo | null>;\n  updateContactInfo(info: InsertContactInfo): Promise<ContactInfo>;\n  \n  getContentSection(sectionKey: string): Promise<ContentSection | null>;\n  updateContentSection(sectionKey: string, content: InsertContentSection): Promise<ContentSection>;\n}\n\n// In-memory storage fallback for when database is not available\nexport class MemStorage implements IStorage {\n  private mockBookingInquiries: BookingInquiry[] = [];\n  private mockContactMessages: ContactMessage[] = [];\n  private mockHeroContent: HeroContent | null = {\n    id: \"hero-1\",\n    title: \"Experience the Magic of Munroe Island\",\n    subtitle: \"Backwater Boating Paradise\",\n    description: \"Discover hidden lagoons, diverse bird species, and traditional country boat experiences\",\n    backgroundImage: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80\",\n    primaryButtonText: \"Book Experience\",\n    secondaryButtonText: \"Learn More\", \n    scrollHintText: \"Scroll to explore\",\n    isActive: true,\n    updatedAt: new Date()\n  };\n  \n  private mockAboutContent: AboutContent | null = {\n    id: \"about-1\",\n    title: \"About Heaven of Munroe\",\n    hostName: \"Local Guides\",\n    hostImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\",\n    introText: \"Your gateway to authentic Kerala backwater experiences\",\n    description1: \"Heaven of Munroe offers traditional boating experiences in the pristine backwaters of Munroe Island. Our expert local guides share fascinating stories about the region's rich history and culture.\",\n    description2: \"Perfect for all ages and skill levels, we provide a peaceful journey through nature's paradise with authentic Kerala hospitality.\",\n    expandedText1: null,\n    expandedText2: null,\n    languages: \"Malayalam, Tamil, English, Hindi\",\n    certifications: \"Tourism Department Certified\",\n    isActive: true,\n    updatedAt: new Date()\n  };\n\n  private mockPackages: BoatingPackage[] = [\n    {\n      id: \"sunrise-special\",\n      packageId: \"sunrise-special\",\n      title: \"Sunrise Special\",\n      duration: \"2 Hours\",\n      price: \"₹800\",\n      originalPrice: \"₹1000\",\n      description: \"Experience the magical sunrise over Munroe Island backwaters with traditional breakfast\",\n      image: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\",\n      features: [\"Early morning boat ride (5:30 AM - 7:30 AM)\", \"Traditional Kerala breakfast on boat\", \"Bird watching opportunities\", \"Photography sessions\", \"Local guide and stories\"],\n      isPopular: true,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Sunrise Special package\",\n      sortOrder: 1,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"family-adventure\",\n      packageId: \"family-adventure\", \n      title: \"Family Adventure\",\n      duration: \"4 Hours\",\n      price: \"₹1200\",\n      originalPrice: \"₹1500\",\n      description: \"Perfect family experience with lunch, activities, and comfortable boat exploration\",\n      image: \"https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\",\n      features: [\"4-hour guided boat tour\", \"Traditional Kerala lunch\", \"Fishing experience for kids\", \"Island hopping\", \"Cultural village visit\", \"Swimming opportunities\"],\n      isPopular: false,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Family Adventure package\",\n      sortOrder: 2,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n  ];\n\n  private mockTestimonials: Testimonial[] = [\n    {\n      id: \"test-1\",\n      name: \"Sarah Johnson\", \n      platform: \"Google Maps\",\n      rating: 5,\n      review: \"Absolutely magical experience! The sunrise boat tour was breathtaking. The traditional breakfast on the boat was delicious and the hospitality was exceptional. Highly recommended!\",\n      userImage: \"\",\n      reviewDate: \"2 weeks ago\",\n      sortOrder: 1,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"test-2\", \n      name: \"Rajesh Kumar\",\n      platform: \"TripAdvisor\",\n      rating: 5,\n      review: \"Best boating experience in Kerala! The family adventure package was perfect for our group. Kids loved the fishing experience and the traditional lunch was amazing.\",\n      userImage: \"\",\n      reviewDate: \"1 month ago\",\n      sortOrder: 2,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n  ];\n\n  private mockGalleryImages: GalleryImage[] = [\n    {\n      id: \"gallery-1\",\n      title: \"Sunrise Boat Ride\",\n      description: \"Beautiful sunrise over backwaters\",\n      imageUrl: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\",\n      altText: \"Sunrise boat ride\",\n      category: \"boat-tours\",\n      sortOrder: 1,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n  ];\n\n  private mockContactInfo: ContactInfo | null = {\n    id: \"contact-1\",\n    businessName: \"Heaven of Munroe\",\n    description: \"Your gateway to authentic Kerala backwater experiences\",\n    email: \"info@heavenofmunroe.com\",\n    phone: \"+91 9633836839\",\n    whatsappNumber: \"919633836839\",\n    address: \"Munroe Island, Kollam, Kerala\",\n    businessHours: \"6:00 AM - 8:00 PM\",\n    facebook: null,\n    instagram: null,\n    googleMaps: null,\n    isActive: true,\n    updatedAt: new Date()\n  };\n\n  private mockContentSections: Map<string, ContentSection> = new Map([\n    [\"munroe-island-main\", {\n      id: \"content-1\",\n      sectionKey: \"munroe-island-main\",\n      title: \"Discover Munroe Island\",\n      content: \"Experience the pristine beauty of Kerala's backwaters through our authentic boating adventures.\",\n      imageUrl: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\",\n      isActive: true,\n      updatedAt: new Date()\n    }]\n  ]);\n\n  async createBookingInquiry(insertInquiry: InsertBookingInquiry): Promise<BookingInquiry> {\n    const inquiry: BookingInquiry = {\n      id: `inquiry-${Date.now()}`,\n      ...insertInquiry,\n      createdAt: new Date()\n    };\n    this.mockBookingInquiries.push(inquiry);\n    return inquiry;\n  }\n\n  async createContactMessage(insertMessage: InsertContactMessage): Promise<ContactMessage> {\n    const message: ContactMessage = {\n      id: `message-${Date.now()}`,\n      ...insertMessage,\n      createdAt: new Date()\n    };\n    this.mockContactMessages.push(message);\n    return message;\n  }\n\n  async getBookingInquiries(): Promise<BookingInquiry[]> {\n    return this.mockBookingInquiries.slice().reverse();\n  }\n\n  async getContactMessages(): Promise<ContactMessage[]> {\n    return this.mockContactMessages.slice().reverse();\n  }\n\n  async getHeroContent(): Promise<HeroContent | null> {\n    return this.mockHeroContent;\n  }\n\n  async updateHeroContent(content: InsertHeroContent): Promise<HeroContent> {\n    this.mockHeroContent = {\n      id: this.mockHeroContent?.id || \"hero-1\",\n      ...content,\n      updatedAt: new Date()\n    };\n    return this.mockHeroContent;\n  }\n\n  async getAboutContent(): Promise<AboutContent | null> {\n    return this.mockAboutContent;\n  }\n\n  async updateAboutContent(content: InsertAboutContent): Promise<AboutContent> {\n    this.mockAboutContent = {\n      id: this.mockAboutContent?.id || \"about-1\",\n      ...content,\n      updatedAt: new Date()\n    };\n    return this.mockAboutContent;\n  }\n\n  async getBoatingPackages(): Promise<BoatingPackage[]> {\n    return this.mockPackages;\n  }\n\n  async createBoatingPackage(packageData: InsertBoatingPackage): Promise<BoatingPackage> {\n    const newPackage: BoatingPackage = {\n      id: `package-${Date.now()}`,\n      ...packageData,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.mockPackages.push(newPackage);\n    return newPackage;\n  }\n\n  async updateBoatingPackage(id: string, packageData: Partial<InsertBoatingPackage>): Promise<BoatingPackage> {\n    const index = this.mockPackages.findIndex(p => p.id === id);\n    if (index === -1) throw new Error(\"Package not found\");\n    \n    this.mockPackages[index] = {\n      ...this.mockPackages[index],\n      ...packageData,\n      updatedAt: new Date()\n    };\n    return this.mockPackages[index];\n  }\n\n  async deleteBoatingPackage(id: string): Promise<void> {\n    const index = this.mockPackages.findIndex(p => p.id === id);\n    if (index !== -1) {\n      this.mockPackages.splice(index, 1);\n    }\n  }\n\n  async getTestimonials(): Promise<Testimonial[]> {\n    return this.mockTestimonials;\n  }\n\n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const newTestimonial: Testimonial = {\n      id: `testimonial-${Date.now()}`,\n      ...testimonial,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.mockTestimonials.push(newTestimonial);\n    return newTestimonial;\n  }\n\n  async updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial> {\n    const index = this.mockTestimonials.findIndex(t => t.id === id);\n    if (index === -1) throw new Error(\"Testimonial not found\");\n    \n    this.mockTestimonials[index] = {\n      ...this.mockTestimonials[index],\n      ...testimonial,\n      updatedAt: new Date()\n    };\n    return this.mockTestimonials[index];\n  }\n\n  async deleteTestimonial(id: string): Promise<void> {\n    const index = this.mockTestimonials.findIndex(t => t.id === id);\n    if (index !== -1) {\n      this.mockTestimonials.splice(index, 1);\n    }\n  }\n\n  async getGalleryImages(): Promise<GalleryImage[]> {\n    return this.mockGalleryImages;\n  }\n\n  async createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage> {\n    const newImage: GalleryImage = {\n      id: `gallery-${Date.now()}`,\n      ...image,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.mockGalleryImages.push(newImage);\n    return newImage;\n  }\n\n  async updateGalleryImage(id: string, image: Partial<InsertGalleryImage>): Promise<GalleryImage> {\n    const index = this.mockGalleryImages.findIndex(g => g.id === id);\n    if (index === -1) throw new Error(\"Gallery image not found\");\n    \n    this.mockGalleryImages[index] = {\n      ...this.mockGalleryImages[index],\n      ...image,\n      updatedAt: new Date()\n    };\n    return this.mockGalleryImages[index];\n  }\n\n  async deleteGalleryImage(id: string): Promise<void> {\n    const index = this.mockGalleryImages.findIndex(g => g.id === id);\n    if (index !== -1) {\n      this.mockGalleryImages.splice(index, 1);\n    }\n  }\n\n  async getContactInfo(): Promise<ContactInfo | null> {\n    return this.mockContactInfo;\n  }\n\n  async updateContactInfo(info: InsertContactInfo): Promise<ContactInfo> {\n    this.mockContactInfo = {\n      id: this.mockContactInfo?.id || \"contact-1\",\n      ...info,\n      updatedAt: new Date()\n    };\n    return this.mockContactInfo;\n  }\n\n  async getContentSection(sectionKey: string): Promise<ContentSection | null> {\n    return this.mockContentSections.get(sectionKey) || null;\n  }\n\n  async updateContentSection(sectionKey: string, content: InsertContentSection): Promise<ContentSection> {\n    const section: ContentSection = {\n      id: `section-${Date.now()}`,\n      sectionKey,\n      ...content,\n      updatedAt: new Date()\n    };\n    this.mockContentSections.set(sectionKey, section);\n    return section;\n  }\n}\n\nexport class DatabaseStorage implements IStorage {\n  // Existing booking and contact methods\n  async createBookingInquiry(insertInquiry: InsertBookingInquiry): Promise<BookingInquiry> {\n    if (!db) {\n      throw new Error('Database not available. Please check your database configuration.');\n    }\n    const [inquiry] = await db\n      .insert(bookingInquiries)\n      .values(insertInquiry)\n      .returning();\n    return inquiry;\n  }\n\n  async createContactMessage(insertMessage: InsertContactMessage): Promise<ContactMessage> {\n    const [message] = await db\n      .insert(contactMessages)\n      .values(insertMessage)\n      .returning();\n    return message;\n  }\n\n  async getBookingInquiries(): Promise<BookingInquiry[]> {\n    return await db.select().from(bookingInquiries).orderBy(desc(bookingInquiries.createdAt));\n  }\n\n  async getContactMessages(): Promise<ContactMessage[]> {\n    return await db.select().from(contactMessages).orderBy(desc(contactMessages.createdAt));\n  }\n\n  // Hero Content\n  async getHeroContent(): Promise<HeroContent | null> {\n    const [content] = await db.select().from(heroContent).where(eq(heroContent.isActive, true)).limit(1);\n    return content || null;\n  }\n\n  async updateHeroContent(content: InsertHeroContent): Promise<HeroContent> {\n    // First, get existing record\n    const existing = await this.getHeroContent();\n    \n    if (existing) {\n      // Update existing\n      const [updated] = await db\n        .update(heroContent)\n        .set({ ...content, updatedAt: new Date() })\n        .where(eq(heroContent.id, existing.id))\n        .returning();\n      return updated;\n    } else {\n      // Create new\n      const [newContent] = await db\n        .insert(heroContent)\n        .values(content)\n        .returning();\n      return newContent;\n    }\n  }\n\n  // About Content\n  async getAboutContent(): Promise<AboutContent | null> {\n    const [content] = await db.select().from(aboutContent).where(eq(aboutContent.isActive, true)).limit(1);\n    return content || null;\n  }\n\n  async updateAboutContent(content: InsertAboutContent): Promise<AboutContent> {\n    const existing = await this.getAboutContent();\n    \n    if (existing) {\n      const [updated] = await db\n        .update(aboutContent)\n        .set({ ...content, updatedAt: new Date() })\n        .where(eq(aboutContent.id, existing.id))\n        .returning();\n      return updated;\n    } else {\n      const [newContent] = await db\n        .insert(aboutContent)\n        .values(content)\n        .returning();\n      return newContent;\n    }\n  }\n\n  // Boating Packages\n  async getBoatingPackages(): Promise<BoatingPackage[]> {\n    return await db\n      .select()\n      .from(boatingPackages)\n      .where(eq(boatingPackages.isActive, true))\n      .orderBy(boatingPackages.sortOrder);\n  }\n\n  async createBoatingPackage(packageData: InsertBoatingPackage): Promise<BoatingPackage> {\n    const [newPackage] = await db\n      .insert(boatingPackages)\n      .values(packageData)\n      .returning();\n    return newPackage;\n  }\n\n  async updateBoatingPackage(id: string, packageData: Partial<InsertBoatingPackage>): Promise<BoatingPackage> {\n    const [updated] = await db\n      .update(boatingPackages)\n      .set({ ...packageData, updatedAt: new Date() })\n      .where(eq(boatingPackages.id, id))\n      .returning();\n    return updated;\n  }\n\n  async deleteBoatingPackage(id: string): Promise<void> {\n    await db\n      .update(boatingPackages)\n      .set({ isActive: false, updatedAt: new Date() })\n      .where(eq(boatingPackages.id, id));\n  }\n\n  // Testimonials\n  async getTestimonials(): Promise<Testimonial[]> {\n    return await db\n      .select()\n      .from(testimonials)\n      .where(eq(testimonials.isActive, true))\n      .orderBy(testimonials.sortOrder);\n  }\n\n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const [newTestimonial] = await db\n      .insert(testimonials)\n      .values(testimonial)\n      .returning();\n    return newTestimonial;\n  }\n\n  async updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial> {\n    const [updated] = await db\n      .update(testimonials)\n      .set({ ...testimonial, updatedAt: new Date() })\n      .where(eq(testimonials.id, id))\n      .returning();\n    return updated;\n  }\n\n  async deleteTestimonial(id: string): Promise<void> {\n    await db\n      .update(testimonials)\n      .set({ isActive: false, updatedAt: new Date() })\n      .where(eq(testimonials.id, id));\n  }\n\n  // Gallery Images\n  async getGalleryImages(): Promise<GalleryImage[]> {\n    return await db\n      .select()\n      .from(galleryImages)\n      .where(eq(galleryImages.isActive, true))\n      .orderBy(galleryImages.sortOrder);\n  }\n\n  async createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage> {\n    const [newImage] = await db\n      .insert(galleryImages)\n      .values(image)\n      .returning();\n    return newImage;\n  }\n\n  async updateGalleryImage(id: string, image: Partial<InsertGalleryImage>): Promise<GalleryImage> {\n    const [updated] = await db\n      .update(galleryImages)\n      .set({ ...image, updatedAt: new Date() })\n      .where(eq(galleryImages.id, id))\n      .returning();\n    return updated;\n  }\n\n  async deleteGalleryImage(id: string): Promise<void> {\n    await db\n      .update(galleryImages)\n      .set({ isActive: false, updatedAt: new Date() })\n      .where(eq(galleryImages.id, id));\n  }\n\n  // Contact Info\n  async getContactInfo(): Promise<ContactInfo | null> {\n    const [info] = await db.select().from(contactInfo).where(eq(contactInfo.isActive, true)).limit(1);\n    return info || null;\n  }\n\n  async updateContactInfo(info: InsertContactInfo): Promise<ContactInfo> {\n    const existing = await this.getContactInfo();\n    \n    if (existing) {\n      const [updated] = await db\n        .update(contactInfo)\n        .set({ ...info, updatedAt: new Date() })\n        .where(eq(contactInfo.id, existing.id))\n        .returning();\n      return updated;\n    } else {\n      const [newInfo] = await db\n        .insert(contactInfo)\n        .values(info)\n        .returning();\n      return newInfo;\n    }\n  }\n\n  // Content Sections\n  async getContentSection(sectionKey: string): Promise<ContentSection | null> {\n    const [section] = await db\n      .select()\n      .from(contentSections)\n      .where(eq(contentSections.sectionKey, sectionKey))\n      .limit(1);\n    return section || null;\n  }\n\n  async updateContentSection(sectionKey: string, content: InsertContentSection): Promise<ContentSection> {\n    const existing = await this.getContentSection(sectionKey);\n    \n    if (existing) {\n      const [updated] = await db\n        .update(contentSections)\n        .set({ ...content, updatedAt: new Date() })\n        .where(eq(contentSections.id, existing.id))\n        .returning();\n      return updated;\n    } else {\n      const [newSection] = await db\n        .insert(contentSections)\n        .values({ ...content, sectionKey })\n        .returning();\n      return newSection;\n    }\n  }\n}\n\n// In-memory storage implementation for development without database\nclass InMemoryStorage implements IStorage {\n  private bookingInquiries: BookingInquiry[] = [];\n  private contactMessages: ContactMessage[] = [];\n  private heroContentData: HeroContent | null = null;\n  private aboutContentData: AboutContent | null = null;\n  private boatingPackagesData: BoatingPackage[] = [];\n  private testimonialsData: Testimonial[] = [];\n  private galleryImagesData: GalleryImage[] = [];\n  private contactInfoData: ContactInfo | null = null;\n  private contentSectionsData: Map<string, ContentSection> = new Map();\n\n  async createBookingInquiry(inquiry: InsertBookingInquiry): Promise<BookingInquiry> {\n    const newInquiry: BookingInquiry = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...inquiry,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.bookingInquiries.push(newInquiry);\n    return newInquiry;\n  }\n\n  async createContactMessage(message: InsertContactMessage): Promise<ContactMessage> {\n    const newMessage: ContactMessage = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...message,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.contactMessages.push(newMessage);\n    return newMessage;\n  }\n\n  async getBookingInquiries(): Promise<BookingInquiry[]> {\n    return [...this.bookingInquiries].sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  }\n\n  async getContactMessages(): Promise<ContactMessage[]> {\n    return [...this.contactMessages].sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\n  }\n\n  async getHeroContent(): Promise<HeroContent | null> {\n    return this.heroContentData;\n  }\n\n  async updateHeroContent(content: InsertHeroContent): Promise<HeroContent> {\n    this.heroContentData = {\n      id: this.heroContentData?.id || Math.random().toString(36).substr(2, 9),\n      ...content,\n      isActive: true,\n      createdAt: this.heroContentData?.createdAt || new Date(),\n      updatedAt: new Date()\n    };\n    return this.heroContentData;\n  }\n\n  async getAboutContent(): Promise<AboutContent | null> {\n    return this.aboutContentData;\n  }\n\n  async updateAboutContent(content: InsertAboutContent): Promise<AboutContent> {\n    this.aboutContentData = {\n      id: this.aboutContentData?.id || Math.random().toString(36).substr(2, 9),\n      ...content,\n      isActive: true,\n      createdAt: this.aboutContentData?.createdAt || new Date(),\n      updatedAt: new Date()\n    };\n    return this.aboutContentData;\n  }\n\n  async getBoatingPackages(): Promise<BoatingPackage[]> {\n    return [...this.boatingPackagesData];\n  }\n\n  async createBoatingPackage(packageData: InsertBoatingPackage): Promise<BoatingPackage> {\n    const newPackage: BoatingPackage = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...packageData,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.boatingPackagesData.push(newPackage);\n    return newPackage;\n  }\n\n  async updateBoatingPackage(id: string, packageData: Partial<InsertBoatingPackage>): Promise<BoatingPackage> {\n    const index = this.boatingPackagesData.findIndex(p => p.id === id);\n    if (index === -1) throw new Error('Package not found');\n    \n    this.boatingPackagesData[index] = {\n      ...this.boatingPackagesData[index],\n      ...packageData,\n      updatedAt: new Date()\n    };\n    return this.boatingPackagesData[index];\n  }\n\n  async deleteBoatingPackage(id: string): Promise<void> {\n    const index = this.boatingPackagesData.findIndex(p => p.id === id);\n    if (index === -1) throw new Error('Package not found');\n    this.boatingPackagesData.splice(index, 1);\n  }\n\n  async getTestimonials(): Promise<Testimonial[]> {\n    return [...this.testimonialsData];\n  }\n\n  async createTestimonial(testimonial: InsertTestimonial): Promise<Testimonial> {\n    const newTestimonial: Testimonial = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...testimonial,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.testimonialsData.push(newTestimonial);\n    return newTestimonial;\n  }\n\n  async updateTestimonial(id: string, testimonial: Partial<InsertTestimonial>): Promise<Testimonial> {\n    const index = this.testimonialsData.findIndex(t => t.id === id);\n    if (index === -1) throw new Error('Testimonial not found');\n    \n    this.testimonialsData[index] = {\n      ...this.testimonialsData[index],\n      ...testimonial,\n      updatedAt: new Date()\n    };\n    return this.testimonialsData[index];\n  }\n\n  async deleteTestimonial(id: string): Promise<void> {\n    const index = this.testimonialsData.findIndex(t => t.id === id);\n    if (index === -1) throw new Error('Testimonial not found');\n    this.testimonialsData.splice(index, 1);\n  }\n\n  async getGalleryImages(): Promise<GalleryImage[]> {\n    return [...this.galleryImagesData];\n  }\n\n  async createGalleryImage(image: InsertGalleryImage): Promise<GalleryImage> {\n    const newImage: GalleryImage = {\n      id: Math.random().toString(36).substr(2, 9),\n      ...image,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.galleryImagesData.push(newImage);\n    return newImage;\n  }\n\n  async updateGalleryImage(id: string, image: Partial<InsertGalleryImage>): Promise<GalleryImage> {\n    const index = this.galleryImagesData.findIndex(i => i.id === id);\n    if (index === -1) throw new Error('Image not found');\n    \n    this.galleryImagesData[index] = {\n      ...this.galleryImagesData[index],\n      ...image,\n      updatedAt: new Date()\n    };\n    return this.galleryImagesData[index];\n  }\n\n  async deleteGalleryImage(id: string): Promise<void> {\n    const index = this.galleryImagesData.findIndex(i => i.id === id);\n    if (index === -1) throw new Error('Image not found');\n    this.galleryImagesData.splice(index, 1);\n  }\n\n  async getContactInfo(): Promise<ContactInfo | null> {\n    return this.contactInfoData;\n  }\n\n  async updateContactInfo(info: InsertContactInfo): Promise<ContactInfo> {\n    this.contactInfoData = {\n      id: this.contactInfoData?.id || Math.random().toString(36).substr(2, 9),\n      ...info,\n      createdAt: this.contactInfoData?.createdAt || new Date(),\n      updatedAt: new Date()\n    };\n    return this.contactInfoData;\n  }\n\n  async getContentSection(sectionKey: string): Promise<ContentSection | null> {\n    return this.contentSectionsData.get(sectionKey) || null;\n  }\n\n  async updateContentSection(sectionKey: string, content: InsertContentSection): Promise<ContentSection> {\n    const existing = this.contentSectionsData.get(sectionKey);\n    const section: ContentSection = {\n      id: existing?.id || Math.random().toString(36).substr(2, 9),\n      sectionKey,\n      ...content,\n      createdAt: existing?.createdAt || new Date(),\n      updatedAt: new Date()\n    };\n    this.contentSectionsData.set(sectionKey, section);\n    return section;\n  }\n}\n\n// Choose storage based on database availability\nexport const storage = db ? new DatabaseStorage() : new MemStorage();\n\nconsole.log(db ? \"Using Database storage\" : \"Using In-memory storage fallback\");\n","size_bytes":27824},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { pgTable, serial, text, timestamp, boolean, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema, createSelectSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Booking Inquiries Table\nexport const bookingInquiries = pgTable(\"booking_inquiries\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  checkInDate: text(\"check_in_date\"),\n  checkOutDate: text(\"check_out_date\"),\n  numberOfGuests: text(\"number_of_guests\"),\n  packageType: text(\"package_type\"),\n  specialRequests: text(\"special_requests\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Contact Messages Table\nexport const contactMessages = pgTable(\"contact_messages\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  subject: text(\"subject\"),\n  message: text(\"message\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Content Management Tables\nexport const heroContent = pgTable(\"hero_content\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  subtitle: text(\"subtitle\"),\n  description: text(\"description\"),\n  backgroundImage: text(\"background_image\"),\n  primaryButtonText: text(\"primary_button_text\"),\n  secondaryButtonText: text(\"secondary_button_text\"),\n  scrollHintText: text(\"scroll_hint_text\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const aboutContent = pgTable(\"about_content\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  highlights: jsonb(\"highlights\").$type<string[]>(),\n  image: text(\"image\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const galleryImages = pgTable(\"gallery_images\", {\n  id: serial(\"id\").primaryKey(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  imageUrl: text(\"image_url\").notNull(),\n  category: text(\"category\"),\n  isActive: boolean(\"is_active\").default(true),\n  sortOrder: serial(\"sort_order\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Boating Packages Table\nexport const boatingPackages = pgTable(\"boating_packages\", {\n  id: serial(\"id\").primaryKey(),\n  packageId: text(\"package_id\").notNull(),\n  title: text(\"title\").notNull(),\n  duration: text(\"duration\"),\n  price: text(\"price\").notNull(),\n  originalPrice: text(\"original_price\"),\n  description: text(\"description\").notNull(),\n  features: jsonb(\"features\").$type<string[]>(),\n  image: text(\"image\").notNull(),\n  isPopular: boolean(\"is_popular\").default(false),\n  whatsappLink: text(\"whatsapp_link\"),\n  sortOrder: serial(\"sort_order\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Testimonials Table\nexport const testimonials = pgTable(\"testimonials\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  platform: text(\"platform\").notNull(),\n  rating: serial(\"rating\").notNull(),\n  review: text(\"review\").notNull(),\n  reviewDate: text(\"review_date\"),\n  isActive: boolean(\"is_active\").default(true),\n  sortOrder: serial(\"sort_order\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Content Sections Table\nexport const contentSections = pgTable(\"content_sections\", {\n  id: serial(\"id\").primaryKey(),\n  sectionKey: text(\"section_key\").notNull(),\n  title: text(\"title\").notNull(),\n  content: text(\"content\"),\n  imageUrl: text(\"image_url\"),\n  metadata: jsonb(\"metadata\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\n// Zod Schemas for validation\nexport const insertBookingInquirySchema = createInsertSchema(bookingInquiries);\nexport const selectBookingInquirySchema = createSelectSchema(bookingInquiries);\nexport const insertContactMessageSchema = createInsertSchema(contactMessages);\nexport const selectContactMessageSchema = createSelectSchema(contactMessages);\nexport const insertHeroContentSchema = createInsertSchema(heroContent);\nexport const selectHeroContentSchema = createSelectSchema(heroContent);\nexport const insertAboutContentSchema = createInsertSchema(aboutContent);\nexport const selectAboutContentSchema = createSelectSchema(aboutContent);\nexport const insertGalleryImageSchema = createInsertSchema(galleryImages);\nexport const selectGalleryImageSchema = createSelectSchema(galleryImages);\nexport const insertBoatingPackageSchema = createInsertSchema(boatingPackages);\nexport const selectBoatingPackageSchema = createSelectSchema(boatingPackages);\nexport const insertTestimonialSchema = createInsertSchema(testimonials);\nexport const selectTestimonialSchema = createSelectSchema(testimonials);\nexport const insertContentSectionSchema = createInsertSchema(contentSections);\nexport const selectContentSectionSchema = createSelectSchema(contentSections);\n\n// Type exports\nexport type BookingInquiry = typeof bookingInquiries.$inferSelect;\nexport type InsertBookingInquiry = typeof bookingInquiries.$inferInsert;\nexport type ContactMessage = typeof contactMessages.$inferSelect;\nexport type InsertContactMessage = typeof contactMessages.$inferInsert;\nexport type HeroContent = typeof heroContent.$inferSelect;\nexport type InsertHeroContent = typeof heroContent.$inferInsert;\nexport type AboutContent = typeof aboutContent.$inferSelect;\nexport type InsertAboutContent = typeof aboutContent.$inferInsert;\nexport type GalleryImage = typeof galleryImages.$inferSelect;\nexport type InsertGalleryImage = typeof galleryImages.$inferInsert;\nexport type BoatingPackage = typeof boatingPackages.$inferSelect;\nexport type InsertBoatingPackage = typeof boatingPackages.$inferInsert;\nexport type Testimonial = typeof testimonials.$inferSelect;\nexport type InsertTestimonial = typeof testimonials.$inferInsert;\nexport type ContentSection = typeof contentSections.$inferSelect;\nexport type InsertContentSection = typeof contentSections.$inferInsert;","size_bytes":6600},"client/src/App.tsx":{"content":"import React from \"react\";\nimport { Router, Switch, Route } from \"wouter\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport Home from \"@/pages/home\";\nimport InquiryPage from \"@/pages/inquiry\";\nimport NotFound from \"@/pages/not-found\";\nimport ErrorBoundary from \"@/components/ErrorBoundary\";\nimport PWAInstallPrompt from \"@/components/PWAInstallPrompt\";\nimport { InstallBannerProvider } from \"@/contexts/InstallBannerContext\";\n\nfunction AppRouter() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/inquiry\" component={InquiryPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <QueryClientProvider client={queryClient}>\n        <InstallBannerProvider>\n          <Router>\n            <PWAInstallPrompt />\n            <AppRouter />\n          </Router>\n        </InstallBannerProvider>\n      </QueryClientProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","size_bytes":1037},"client/src/index.css":{"content":"@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap\");\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(210, 40%, 96%);\n  --foreground: hsl(222, 47%, 11%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222, 47%, 11%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222, 47%, 11%);\n  --primary: hsl(217, 91%, 39%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(158, 64%, 52%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215, 16%, 47%);\n  --accent: hsl(38, 92%, 50%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(214, 32%, 91%);\n  --input: hsl(214, 32%, 91%);\n  --ring: hsl(217, 91%, 39%);\n  --radius: 0.75rem;\n  --font-sans: \"Inter\", system-ui, sans-serif;\n  --font-serif: \"Playfair Display\", serif;\n  --font-mono: \"Fira Code\", monospace;\n}\n\n.dark {\n  --background: hsl(222, 47%, 11%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(217, 91%, 59%);\n  --primary-foreground: hsl(222, 47%, 11%);\n  --secondary: hsl(158, 64%, 52%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(217, 32%, 17%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --accent: hsl(38, 92%, 50%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 62%, 30%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217, 32%, 17%);\n  --input: hsl(217, 32%, 17%);\n  --ring: hsl(217, 91%, 59%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer components {\n  .hero-bg {\n    background-image: linear-gradient(to bottom right, hsl(217, 91%, 39% / 0.2), hsl(158, 64%, 52% / 0.3)), \n                      url('https://images.unsplash.com/photo-1602216056096-3b40cc0c9944?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80');\n    background-size: cover;\n    background-position: center;\n  }\n}\n\n@layer utilities {\n  .animate-fade-in-up {\n    animation: fadeInUp 0.8s ease-out forwards;\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  \n  .animate-slide-in-left {\n    animation: slideInLeft 0.9s ease-out forwards;\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  \n  .animate-slide-in-right {\n    animation: slideInRight 0.9s ease-out forwards;\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  \n  .animate-zoom-in {\n    animation: zoomIn 0.7s ease-out forwards;\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  \n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulseGlow 2s ease-in-out infinite;\n  }\n  \n  .animate-bounce-gentle {\n    animation: bounceGentle 2s ease-in-out infinite;\n  }\n  \n  .animate-rotate-slow {\n    animation: rotateSlow 8s linear infinite;\n  }\n  \n  .delay-100 {\n    animation-delay: 0.1s;\n  }\n  \n  .delay-200 {\n    animation-delay: 0.2s;\n  }\n  \n  .delay-300 {\n    animation-delay: 0.3s;\n  }\n  \n  .delay-400 {\n    animation-delay: 0.4s;\n  }\n  \n  .delay-500 {\n    animation-delay: 0.5s;\n  }\n  \n  .delay-600 {\n    animation-delay: 0.6s;\n  }\n  \n  .delay-700 {\n    animation-delay: 0.7s;\n  }\n  \n  .hover-lift {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  \n  .hover-lift:hover {\n    transform: translateY(-8px) scale(1.02);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n  }\n  \n  .gradient-text {\n    background: linear-gradient(135deg, #2563eb, #10b981, #f59e0b);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .glass-effect {\n    backdrop-filter: blur(20px);\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n\n  .animate-slide-up {\n    animation: slideUp 0.6s ease-out forwards;\n    opacity: 0;\n    transform: translateY(40px);\n  }\n\n  .animate-scale-in {\n    animation: scaleIn 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n    opacity: 0;\n    transform: scale(0.9);\n  }\n\n  .animate-wiggle {\n    animation: wiggle 1s ease-in-out;\n  }\n\n  .animate-spin-slow {\n    animation: spin 3s linear infinite;\n  }\n\n  .hover-glow {\n    transition: all 0.3s ease;\n  }\n\n  .hover-glow:hover {\n    box-shadow: 0 0 30px rgba(59, 130, 246, 0.3);\n    transform: translateY(-2px);\n  }\n\n  .hover-bounce {\n    transition: transform 0.2s ease;\n  }\n\n  .hover-bounce:hover {\n    transform: scale(1.05) translateY(-5px);\n  }\n\n  .hover-slide {\n    transition: transform 0.3s ease;\n    overflow: hidden;\n  }\n\n  .hover-slide:hover {\n    transform: translateX(5px);\n  }\n\n  .loading-dots {\n    animation: loadingDots 1.5s infinite;\n  }\n\n  .fade-in-stagger {\n    animation: fadeInStagger 0.8s ease-out forwards;\n    opacity: 0;\n  }\n\n  /* Water-themed premium animations */\n  .water-ripple {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .water-ripple::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);\n    border-radius: 50%;\n    transform: translate(-50%, -50%);\n    transition: all 0.6s ease-out;\n    pointer-events: none;\n  }\n\n  .water-ripple:hover::before {\n    width: 300%;\n    height: 300%;\n  }\n\n  .floating-particles {\n    position: relative;\n    overflow: hidden;\n  }\n\n  .floating-particles::after {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"rgba(59,130,246,0.3)\"><animate attributeName=\"cy\" values=\"20;80;20\" dur=\"4s\" repeatCount=\"indefinite\"/></circle><circle cx=\"60\" cy=\"60\" r=\"1.5\" fill=\"rgba(16,185,129,0.4)\"><animate attributeName=\"cy\" values=\"60;10;60\" dur=\"3s\" repeatCount=\"indefinite\"/></circle><circle cx=\"80\" cy=\"30\" r=\"1\" fill=\"rgba(245,158,11,0.3)\"><animate attributeName=\"cy\" values=\"30;90;30\" dur=\"5s\" repeatCount=\"indefinite\"/></circle></svg>') repeat;\n    animation: particleFloat 20s linear infinite;\n    opacity: 0;\n    transition: opacity 0.5s ease;\n  }\n\n  .floating-particles:hover::after {\n    opacity: 1;\n  }\n\n  .text-reveal {\n    display: inline-block;\n    overflow: hidden;\n  }\n\n  .text-reveal-inner {\n    display: inline-block;\n    animation: textReveal 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;\n    transform: translateY(100%);\n  }\n\n  .gradient-shift {\n    background: linear-gradient(45deg, #2563eb, #10b981, #f59e0b, #06b6d4);\n    background-size: 400% 400%;\n    animation: gradientShift 8s ease infinite;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .card-3d {\n    transform-style: preserve-3d;\n    transition: transform 0.6s cubic-bezier(0.23, 1, 0.320, 1);\n    perspective: 1000px;\n  }\n\n  .card-3d:hover {\n    transform: rotateY(15deg) rotateX(5deg) translateZ(20px);\n  }\n\n  .card-3d::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, transparent, rgba(59, 130, 246, 0.1), transparent);\n    transform: translateX(-100%);\n    transition: transform 0.6s ease;\n  }\n\n  .card-3d:hover::before {\n    transform: translateX(100%);\n  }\n\n  .morphing-shadow {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n    transition: box-shadow 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  }\n\n  .morphing-shadow:hover {\n    box-shadow: \n      0 20px 60px rgba(59, 130, 246, 0.2),\n      0 8px 30px rgba(16, 185, 129, 0.15),\n      0 4px 15px rgba(0, 0, 0, 0.1);\n  }\n\n  .wave-background {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    position: relative;\n    overflow: hidden;\n  }\n\n  .wave-background::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\"><path d=\"M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z\" fill=\"rgba(255,255,255,0.1)\"></path></svg>') repeat-x;\n    animation: waveAnimation 15s ease-in-out infinite;\n  }\n\n  .breathing-scale {\n    animation: breathingScale 4s ease-in-out infinite;\n  }\n\n  .cursor-glow {\n    position: relative;\n  }\n\n  .cursor-glow::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    background: radial-gradient(circle, rgba(59, 130, 246, 0.4), transparent);\n    border-radius: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: all 0.3s ease;\n    pointer-events: none;\n  }\n\n  .cursor-glow:hover::after {\n    width: 100px;\n    height: 100px;\n    opacity: 1;\n  }\n\n  .parallax-element {\n    transition: transform 0.1s ease-out;\n  }\n\n  .typing-effect {\n    border-right: 2px solid #2563eb;\n    animation: typing 3s steps(40) 1s 1 normal both, blinkCursor 0.8s infinite;\n  }\n\n  /* Staggered animation for service cards */\n  .fade-in-stagger {\n    animation: fadeInStagger 0.8s ease-out forwards;\n    opacity: 0;\n    transform: translateY(30px);\n  }\n\n  /* 3D card effect with proper depth */\n  .card-3d {\n    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);\n  }\n\n  .card-3d:hover {\n    transform: perspective(1000px) rotateY(-8deg) rotateX(3deg) translateY(-10px);\n  }\n\n  /* Mobile-friendly hover states */\n  @media (hover: none) and (pointer: coarse) {\n    .card-3d:hover {\n      transform: none;\n    }\n    .group:hover .opacity-0 {\n      opacity: 1;\n    }\n    .group:hover .translate-y-4 {\n      transform: translateY(0);\n    }\n  }\n\n  /* Performance optimization classes */\n  .transform-gpu {\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    will-change: transform;\n  }\n\n  /* Accessibility: Reduced motion preferences */\n  @media (prefers-reduced-motion: reduce) {\n    .fade-in-stagger,\n    .animate-fade-in-up,\n    .animate-slide-in-left,\n    .animate-slide-in-right,\n    .animate-zoom-in,\n    .animate-float,\n    .animate-pulse-slow,\n    .animate-bounce-gentle,\n    .animate-rotate-slow,\n    .breathing-scale,\n    .gradient-shift,\n    .floating-particles::after {\n      animation: none !important;\n      opacity: 1 !important;\n      transform: none !important;\n    }\n    \n    .card-3d:hover {\n      transform: translateY(-5px);\n    }\n    \n    .hover-lift:hover {\n      transform: translateY(-3px);\n    }\n  }\n}\n\n@keyframes fadeInUp {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideInLeft {\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes zoomIn {\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-20px);\n  }\n}\n\n@keyframes pulseGlow {\n  0%, 100% {\n    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);\n  }\n  50% {\n    box-shadow: 0 0 40px rgba(59, 130, 246, 0.8);\n  }\n}\n\n@keyframes bounceGentle {\n  0%, 100% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes rotateSlow {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes slideUp {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes scaleIn {\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes wiggle {\n  0%, 7% {\n    transform: rotateZ(0);\n  }\n  15% {\n    transform: rotateZ(-15deg);\n  }\n  20% {\n    transform: rotateZ(10deg);\n  }\n  25% {\n    transform: rotateZ(-10deg);\n  }\n  30% {\n    transform: rotateZ(6deg);\n  }\n  35% {\n    transform: rotateZ(-4deg);\n  }\n  40%, 100% {\n    transform: rotateZ(0);\n  }\n}\n\n@keyframes loadingDots {\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n}\n\n@keyframes fadeInStagger {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes textReveal {\n  to {\n    transform: translateY(0);\n  }\n}\n\n@keyframes gradientShift {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n@keyframes particleFloat {\n  0% {\n    transform: translateX(-100%) translateY(0) rotate(0deg);\n  }\n  100% {\n    transform: translateX(100%) translateY(-20px) rotate(360deg);\n  }\n}\n\n@keyframes waveAnimation {\n  0% {\n    transform: translateX(0) translateY(0);\n  }\n  50% {\n    transform: translateX(-25%) translateY(-10px);\n  }\n  100% {\n    transform: translateX(-50%) translateY(0);\n  }\n}\n\n@keyframes breathingScale {\n  0%, 100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n}\n\n@keyframes typing {\n  0% {\n    width: 0;\n  }\n  100% {\n    width: 100%;\n  }\n}\n\n@keyframes blinkCursor {\n  0%, 50% {\n    border-color: transparent;\n  }\n  51%, 100% {\n    border-color: #2563eb;\n  }\n}\n","size_bytes":13268},"client/src/main.tsx":{"content":"import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <App />\n);\n","size_bytes":188},"client/src/components/AboutEvan.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport type { AboutContent } from \"@shared/schema\";\n\nexport default function AboutEvan() {\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // Fetch about content from database\n  const { data: aboutContent, isLoading } = useQuery<AboutContent | null>({\n    queryKey: ['/api/about-content'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n    retry: 1\n  });\n\n  // Use database content or fallbacks\n  const title = aboutContent?.title || \"Meet Evan - Your Local Host\";\n  const hostName = aboutContent?.hostName || \"Evan\";\n  const hostImage = aboutContent?.hostImage || \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\";\n  const introText = aboutContent?.introText || \"Born and raised on the pristine waters of Munroe Island, Evan has spent over two decades mastering the art of backwater navigation and hospitality.\";\n  const description1 = aboutContent?.description1 || \"His deep connection with the local ecosystem and authentic Kerala culture makes every journey a unique experience filled with stories, local wisdom, and genuine warmth.\";\n  const description2 = aboutContent?.description2 || \"When you book with Heaven of Munroe, you're not just getting a service - you're becoming part of Evan's extended family.\";\n  const expandedText1 = aboutContent?.expandedText1 || \"Evan's expertise extends beyond boating - he's also a certified local guide, traditional chef, and cultural ambassador for Munroe Island. His multilingual abilities ensure comfortable communication with guests from around the world.\";\n  const expandedText2 = aboutContent?.expandedText2 || \"The business started as a family tradition, passed down through generations of fishermen and boat builders. Today, Evan combines this heritage with modern hospitality standards to create unforgettable experiences.\";\n  const languages = aboutContent?.languages || \"English, Hindi, Malayalam\";\n  const certifications = aboutContent?.certifications || \"Tourism Board Approved\";\n\n  return (\n    <section className=\"py-16 bg-gradient-to-r from-blue-50 via-white to-green-50\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center mb-8 animate-fade-in-up\">\n            <h2 className=\"font-serif text-3xl md:text-4xl font-bold text-gray-800 mb-4 gradient-text\">\n              {title}\n            </h2>\n          </div>\n          \n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"animate-slide-in-left\">\n              <div className=\"relative\">\n                <div className=\"w-full h-80 rounded-2xl overflow-hidden shadow-2xl hover-lift\">\n                  <img \n                    src={hostImage}\n                    alt={`${hostName} - Local Host and Guide`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <div className=\"absolute -bottom-4 -right-4 w-24 h-24 bg-blue-600 rounded-full flex items-center justify-center glass-effect animate-float\">\n                  <i className=\"fas fa-anchor text-white text-2xl\"></i>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"animate-slide-in-right\">\n              <div className=\"space-y-4\">\n                <p className=\"text-lg text-gray-700 leading-relaxed animate-fade-in-up delay-200\">\n                  {introText}\n                </p>\n                \n                <p className=\"text-lg text-gray-700 leading-relaxed animate-fade-in-up delay-300\">\n                  {description1}\n                </p>\n                \n                <p className=\"text-lg text-gray-700 leading-relaxed animate-fade-in-up delay-400\">\n                  {description2}\n                </p>\n                \n                {isExpanded && (\n                  <div className=\"mt-6 space-y-4 animate-fade-in-up\">\n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {expandedText1}\n                    </p>\n                    \n                    <p className=\"text-gray-700 leading-relaxed\">\n                      {expandedText2}\n                    </p>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 mt-6\">\n                      <div className=\"bg-blue-50 p-4 rounded-lg text-center hover-lift\">\n                        <i className=\"fas fa-language text-blue-600 text-2xl mb-2\"></i>\n                        <p className=\"font-medium text-gray-800\">Multilingual Guide</p>\n                        <p className=\"text-sm text-gray-600\">{languages}</p>\n                      </div>\n                      <div className=\"bg-green-50 p-4 rounded-lg text-center hover-lift\">\n                        <i className=\"fas fa-certificate text-green-600 text-2xl mb-2\"></i>\n                        <p className=\"font-medium text-gray-800\">Certified Host</p>\n                        <p className=\"text-sm text-gray-600\">{certifications}</p>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"pt-4\">\n                  <button \n                    onClick={() => setIsExpanded(!isExpanded)}\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg\"\n                    data-testid=\"button-read-more\"\n                  >\n                    <i className={`fas ${isExpanded ? 'fa-chevron-up' : 'fa-chevron-down'} mr-2`}></i>\n                    {isExpanded ? 'Read Less' : 'Read More'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5965},"client/src/components/BoatingPackages.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport type { BoatingPackage } from \"@shared/schema\";\n\nexport default function BoatingPackages() {\n  const [selectedPackage, setSelectedPackage] = useState<string | null>(null);\n  const [, setLocation] = useLocation();\n\n  // Fetch boating packages from database\n  const { data: packages, isLoading } = useQuery<BoatingPackage[]>({\n    queryKey: ['/api/boating-packages'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n    retry: 1\n  });\n\n  const openDirectBooking = (packageId: string) => {\n    setLocation(`/inquiry?package=${packageId}`);\n  };\n\n  const staticPackages = [\n    {\n      id: \"boat-tours\",\n      packageId: \"boat-tours\",\n      title: \"Shikara boat tours\",\n      duration: \"\",\n      price: \"₹1200 - 3000\",\n      originalPrice: \"\",\n      description: \"Authentic Kerala boathouse experience through pristine backwaters with expert local guides astamidi river\",\n      features: [\n        \"Traditional Kerala boathouse ride\",\n        \"Experienced local boat captain\",\n        \"Scenic backwater exploration\", \n        \"Bird watching opportunities\",\n        \"7 people to 14 people based on boat\"\n      ],\n      image: \"/images/boathouse.jpg\",\n      isPopular: true,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Traditional Boat Tours package\",\n      sortOrder: 1,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"lake-foods\",\n      packageId: \"lake-foods\",\n      title: \"Lake Foods Experience\",\n      duration: \"\",\n      price: \"₹600 - 1500\",\n      originalPrice: \"\",\n      description: \"Savor authentic Kerala cuisine freshly prepared on the lake with traditional cooking methods\",\n      features: [\n        \"Freshly prepared Kerala meals\",\n        \"Traditional cooking demonstration\",\n        \"Local spices and ingredients\",\n        \"Waterfront dining experience\",\n        \"Cultural food stories\",\n        \"Vegetarian and non-veg options\"\n      ],\n      image: \"/images/food.jpg\",\n      isPopular: true,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Lake Foods Experience package\",\n      sortOrder: 3,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"canal-boating\",\n      packageId: \"canal-boating\",\n      title: \"Canal Boating Adventure\",\n      duration: \"1 hour\",\n      price: \"₹600 - 1200\",\n      originalPrice: \"\",\n      description: \"Navigate through narrow canals and hidden waterways discovering untouched natural beauty\",\n      features: [\n        \"Narrow canal exploration\",\n        \"Hidden waterway discovery\",\n        \"Traditional rowing boat\",\n        \"Local village glimpses\",\n        \"Peaceful nature experience\"\n      ],\n      image: \"/images/canal.jpg\",\n      isPopular: false,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Canal Boating Adventure package\",\n      sortOrder: 2,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"kayaking-adventure\",\n      packageId: \"kayaking-adventure\",\n      title: \"Kayaking Adventure\",\n      duration: \"1 hour\",\n      price: \"₹250\",\n      originalPrice: \"\",\n      description: \"Paddle through serene waters at your own pace, perfect for adventure enthusiasts and nature lovers\",\n      features: [\n        \"Single or double kayaks available\",\n        \"Safety equipment provided\",\n        \"Basic paddling instruction\",\n        \"Rest stops at scenic points\",\n        \"Photography opportunities\"\n      ],\n      image: \"/images/kayak.jpg\",\n      isPopular: false,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Kayaking Adventure package\",\n      sortOrder: 4,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    },\n    {\n      id: \"homestay-rooms\",\n      packageId: \"homestay-rooms\",\n      title: \"Homestay Rooms\",\n      duration: \"Per Night\",\n      price: \"₹1800 - 3000\",\n      originalPrice: \"\",\n      description: \"Comfortable overnight stay in traditional Kerala homes with warm hospitality and authentic experiences\",\n      features: [\n        \"Clean, comfortable rooms\",\n        \"Traditional Kerala architecture\",\n        \"Cultural interaction with hosts\",\n        \"Wi-Fi and basic amenities\"\n      ],\n      image: \"/images/stay.jpg\",\n      isPopular: true,\n      whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Homestay Rooms package\",\n      sortOrder: 5,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    }\n  ];\n\n  // Always use the new local image packages as requested\n  const packagesData = staticPackages;\n\n  // If loading, show loading state\n  if (isLoading) {\n    return (\n      <section id=\"packages\" className=\"py-16 bg-white/70 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-300 rounded w-1/2 mx-auto mb-4\"></div>\n              <div className=\"h-4 bg-gray-300 rounded w-3/4 mx-auto\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (packagesData.length === 0) {\n    return (\n      <section id=\"packages\" className=\"py-16 bg-gradient-to-b from-green-50 to-blue-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center\">\n            <h2 className=\"font-serif text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n              Premium Boating Packages\n            </h2>\n            <p className=\"text-lg text-gray-600\">No packages available at the moment.</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n\n  return (\n    <section id=\"packages\" className=\"py-16 bg-white/70 backdrop-blur-sm\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12 animate-fade-in-up\">\n          <h2 className=\"font-serif text-3xl md:text-4xl font-bold text-gray-800 mb-4 gradient-text\">\n            Premium Boating Packages\n          </h2>\n          <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n            Choose from our carefully crafted experiences designed to showcase the best of Munroe Island\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {packagesData.map((pkg, index) => (\n            <div \n              key={pkg.id}\n              className={`bg-white rounded-3xl overflow-hidden shadow-xl hover:shadow-2xl transition-all duration-700 transform hover-lift hover:scale-105 hover:-translate-y-4 hover:rotate-1 animate-fade-in-up group relative ${\n                selectedPackage === pkg.id ? 'ring-4 ring-blue-400' : ''\n              }`}\n              style={{ animationDelay: `${index * 200}ms` }}\n            >\n              {/* Glow effect on hover */}\n              <div className=\"absolute inset-0 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-700 bg-gradient-to-r from-blue-400/20 to-green-400/20 blur-xl -z-10\"></div>\n              <div className=\"relative\">\n                {pkg.isPopular && (\n                  <div className=\"absolute top-4 left-4 z-10\">\n                    <span className=\"bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-semibold animate-pulse-slow\">\n                      🔥 Most Popular\n                    </span>\n                  </div>\n                )}\n                \n                <div className=\"relative overflow-hidden group\">\n                  <div \n                    className=\"h-80 bg-cover bg-center transition-all duration-1000 ease-in-out transform group-hover:scale-125 group-hover:rotate-2 filter brightness-100 contrast-100 saturate-100 group-hover:brightness-110 group-hover:contrast-125 group-hover:saturate-125\"\n                    style={{ backgroundImage: `url(${pkg.image})` }}\n                  ></div>\n                  \n                  {/* Animated overlay effects */}\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent transition-all duration-700 group-hover:from-black/40 group-hover:via-blue-500/10 group-hover:to-transparent\"></div>\n                  \n                  {/* Shimmer effect */}\n                  <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-1000\">\n                    <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent via-white/20 to-transparent transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1500 ease-out\"></div>\n                  </div>\n                  \n                  {/* Floating particles effect */}\n                  <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-700\">\n                    <div className=\"absolute top-1/4 left-1/4 w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-100\"></div>\n                    <div className=\"absolute top-3/4 right-1/4 w-1 h-1 bg-green-400 rounded-full animate-bounce delay-300\"></div>\n                    <div className=\"absolute top-1/2 right-1/3 w-1.5 h-1.5 bg-yellow-400 rounded-full animate-bounce delay-500\"></div>\n                  </div>\n                  \n                  {/* Color tint overlay */}\n                  <div className=\"absolute inset-0 bg-blue-500/0 group-hover:bg-blue-500/10 transition-all duration-700\"></div>\n                  \n                  <div className=\"absolute bottom-4 left-4 text-white\">\n                    {pkg.duration && (\n                      <div className=\"flex items-center space-x-2 mb-2\">\n                        <i className=\"fas fa-clock text-blue-300\"></i>\n                        <span className=\"text-sm font-medium\">{pkg.duration}</span>\n                      </div>\n                    )}\n                    <h3 className=\"font-serif text-2xl font-bold\">{pkg.title}</h3>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-6\">\n                <p className=\"text-gray-600 mb-4 leading-relaxed\">{pkg.description}</p>\n                \n                <div className=\"mb-6\">\n                  <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                    <i className=\"fas fa-star text-yellow-500 mr-2\"></i>\n                    What's Included:\n                  </h4>\n                  <ul className=\"space-y-2\">\n                    {pkg.features.map((feature, idx) => (\n                      <li key={idx} className=\"flex items-start text-sm text-gray-600\">\n                        <i className=\"fas fa-check text-green-500 mt-1 mr-2 flex-shrink-0\"></i>\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                \n                <div className=\"flex justify-between items-center pt-4 border-t border-gray-100\">\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-3xl font-bold text-green-600\">{pkg.price}</span>\n                      {pkg.originalPrice && <span className=\"text-lg text-gray-400 line-through\">{pkg.originalPrice}</span>}\n                    </div>\n                    <p className=\"text-sm text-gray-500\">per person</p>\n                  </div>\n                  \n                  <div className=\"flex flex-col space-y-2\">\n                    <button \n                      onClick={() => setSelectedPackage(selectedPackage === pkg.id ? null : pkg.id)}\n                      className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300 transform hover:scale-105\"\n                      data-testid={`button-details-${pkg.id}`}\n                    >\n                      <i className=\"fas fa-info-circle mr-1\"></i>\n                      {selectedPackage === pkg.id ? 'Hide Details' : 'View Details'}\n                    </button>\n                    \n                    <div className=\"flex space-x-2\">\n                      <button \n                        onClick={() => openDirectBooking(pkg.id)}\n                        className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-lg text-sm font-semibold transition-all duration-500 transform hover:scale-105 hover:shadow-lg hover:-translate-y-1\"\n                        data-testid={`button-book-direct-${pkg.id}`}\n                      >\n                        <i className=\"fas fa-calendar-plus mr-1\"></i>\n                        Book Direct\n                      </button>\n                      \n                      <button \n                        onClick={() => window.open(pkg.whatsappLink, '_blank', 'noopener,noreferrer')}\n                        className=\"flex-1 bg-green-600 hover:bg-green-700 text-white px-3 py-2 rounded-lg text-sm font-semibold transition-all duration-500 transform hover:scale-105 hover:shadow-lg hover:-translate-y-1\"\n                        data-testid={`button-whatsapp-${pkg.id}`}\n                      >\n                        <i className=\"fab fa-whatsapp mr-1\"></i>\n                        WhatsApp\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12 animate-fade-in-up delay-500\">\n          <div className=\"bg-white rounded-2xl p-8 shadow-lg hover-lift max-w-2xl mx-auto\">\n            <h3 className=\"font-serif text-2xl font-bold text-gray-800 mb-4\">\n              Need a Custom Package?\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              We can create personalized experiences based on your preferences, group size, and special requirements.\n            </p>\n            <button \n              onClick={() => window.open(\"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I need a custom boating package\", '_blank', 'noopener,noreferrer')}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-8 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg\"\n              data-testid=\"button-custom-package\"\n            >\n              <i className=\"fas fa-magic mr-2\"></i>\n              Create Custom Package\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":14730},"client/src/components/BookingForm.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { insertBookingInquirySchema, type InsertBookingInquiry } from \"@shared/schema\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function BookingForm() {\n  const { toast } = useToast();\n  const [selectedExperiences, setSelectedExperiences] = useState<string[]>([]);\n\n  const form = useForm<InsertBookingInquiry>({\n    resolver: zodResolver(insertBookingInquirySchema),\n    defaultValues: {\n      fullName: \"\",\n      email: \"\",\n      phone: \"\",\n      numberOfGuests: 1,\n      checkInDate: \"\",\n      checkOutDate: \"\",\n      experiences: [],\n      specialRequests: \"\",\n    },\n  });\n\n  const bookingMutation = useMutation({\n    mutationFn: async (data: InsertBookingInquiry) => {\n      const response = await apiRequest(\"POST\", \"/api/booking-inquiry\", data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Booking Inquiry Sent!\",\n        description: data.message,\n      });\n      form.reset();\n      setSelectedExperiences([]);\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send booking inquiry. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: InsertBookingInquiry) => {\n    bookingMutation.mutate({\n      ...data,\n      experiences: selectedExperiences,\n    });\n  };\n\n  const handleExperienceChange = (experience: string, checked: boolean) => {\n    if (checked) {\n      setSelectedExperiences([...selectedExperiences, experience]);\n    } else {\n      setSelectedExperiences(selectedExperiences.filter(exp => exp !== experience));\n    }\n  };\n\n  const experiences = [\n    { id: \"kayaking\", label: \"Kayaking\" },\n    { id: \"homestay\", label: \"Homestay\" },\n    { id: \"houseboat\", label: \"Houseboat\" },\n    { id: \"canal-tours\", label: \"Canal Tours\" }\n  ];\n\n  return (\n    <section id=\"booking\" className=\"py-20 bg-primary relative overflow-hidden\">\n      <div className=\"absolute inset-0 opacity-10\" style={{\n        backgroundImage: 'url(\"https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80\")',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      }}></div>\n      \n      <div className=\"container mx-auto px-4 relative z-10\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h3 className=\"font-serif text-4xl md:text-5xl font-bold text-primary-foreground mb-4\">\n              Plan Your Perfect Getaway\n            </h3>\n            <p className=\"text-xl text-primary-foreground/80\">\n              Let us create a personalized itinerary for your Munroe Island experience\n            </p>\n          </div>\n          \n          <div className=\"bg-card rounded-3xl p-8 shadow-2xl\">\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"grid md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"fullName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-user mr-2 text-primary\"></i>\n                        Full Name *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          placeholder=\"Enter your full name\" \n                          {...field} \n                          data-testid=\"input-full-name\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-envelope mr-2 text-primary\"></i>\n                        Email Address *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          type=\"email\" \n                          placeholder=\"your@email.com\" \n                          {...field} \n                          data-testid=\"input-email\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"phone\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-phone mr-2 text-primary\"></i>\n                        Phone Number *\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          type=\"tel\" \n                          placeholder=\"+91 98XXX XXXXX\" \n                          {...field} \n                          data-testid=\"input-phone\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"numberOfGuests\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-users mr-2 text-primary\"></i>\n                        Number of Guests\n                      </FormLabel>\n                      <Select \n                        onValueChange={(value) => field.onChange(parseInt(value))} \n                        value={field.value?.toString()}\n                      >\n                        <FormControl>\n                          <SelectTrigger data-testid=\"select-guests\">\n                            <SelectValue placeholder=\"Select number of guests\" />\n                          </SelectTrigger>\n                        </FormControl>\n                        <SelectContent>\n                          <SelectItem value=\"1\">1 Guest</SelectItem>\n                          <SelectItem value=\"2\">2 Guests</SelectItem>\n                          <SelectItem value=\"3\">3-4 Guests</SelectItem>\n                          <SelectItem value=\"5\">5+ Guests</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"checkInDate\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-calendar mr-2 text-primary\"></i>\n                        Check-in Date\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          type=\"date\" \n                          {...field}\n                          value={field.value || \"\"}\n                          data-testid=\"input-checkin-date\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"checkOutDate\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-calendar-alt mr-2 text-primary\"></i>\n                        Check-out Date\n                      </FormLabel>\n                      <FormControl>\n                        <Input \n                          type=\"date\" \n                          {...field}\n                          value={field.value || \"\"}\n                          data-testid=\"input-checkout-date\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"md:col-span-2\">\n                  <FormLabel className=\"flex items-center mb-4\">\n                    <i className=\"fas fa-heart mr-2 text-primary\"></i>\n                    Preferred Experiences\n                  </FormLabel>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                    {experiences.map((exp) => (\n                      <div key={exp.id} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={exp.id}\n                          checked={selectedExperiences.includes(exp.id)}\n                          onCheckedChange={(checked) => handleExperienceChange(exp.id, checked as boolean)}\n                          data-testid={`checkbox-${exp.id}`}\n                        />\n                        <label htmlFor={exp.id} className=\"text-sm font-medium\">\n                          {exp.label}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <FormField\n                  control={form.control}\n                  name=\"specialRequests\"\n                  render={({ field }) => (\n                    <FormItem className=\"md:col-span-2\">\n                      <FormLabel className=\"flex items-center\">\n                        <i className=\"fas fa-comment mr-2 text-primary\"></i>\n                        Special Requests or Questions\n                      </FormLabel>\n                      <FormControl>\n                        <Textarea \n                          rows={4} \n                          placeholder=\"Tell us about any special requirements, dietary preferences, or questions you have...\"\n                          {...field}\n                          value={field.value || \"\"}\n                          data-testid=\"textarea-special-requests\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <div className=\"md:col-span-2\">\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full bg-primary text-primary-foreground py-4 text-lg font-semibold hover:bg-primary/90 transition-all transform hover:scale-105 shadow-lg\"\n                    disabled={bookingMutation.isPending}\n                    data-testid=\"button-submit-booking\"\n                  >\n                    {bookingMutation.isPending ? (\n                      <>\n                        <i className=\"fas fa-spinner animate-spin mr-2\"></i>\n                        Sending...\n                      </>\n                    ) : (\n                      <>\n                        <i className=\"fas fa-paper-plane mr-2\"></i>\n                        Send Booking Inquiry\n                      </>\n                    )}\n                  </Button>\n                  <p className=\"text-sm text-muted-foreground mt-2 text-center\">\n                    We'll respond within 2 hours during business hours\n                  </p>\n                </div>\n              </form>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":12229},"client/src/components/BottomNavigation.tsx":{"content":"import { useState } from \"react\";\nimport { Home, Ship, Images, MapPin, User } from \"lucide-react\";\nimport { SiWhatsapp } from \"react-icons/si\";\n\nexport default function BottomNavigation() {\n  const [activeSection, setActiveSection] = useState<string>(\"\");\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n      setActiveSection(sectionId);\n    }\n  };\n\n  const openWhatsApp = () => {\n    window.open(\"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Heaven of Munroe services\", \"_blank\");\n  };\n\n  const navItems = [\n    {\n      id: \"home\",\n      label: \"Home\",\n      icon: Home,\n      action: () => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n        setActiveSection(\"home\");\n      }\n    },\n    {\n      id: \"services\",\n      label: \"Services\",\n      icon: Ship,\n      action: () => scrollToSection(\"services\")\n    },\n    {\n      id: \"about-us\",\n      label: \"About\",\n      icon: User,\n      action: () => scrollToSection(\"about-us\")\n    },\n    {\n      id: \"gallery\",\n      label: \"Gallery\",\n      icon: Images,\n      action: () => scrollToSection(\"gallery\")\n    },\n    {\n      id: \"contact\",\n      label: \"Contact\",\n      icon: MapPin,\n      action: () => scrollToSection(\"contact\")\n    },\n    {\n      id: \"book\",\n      label: \"Book Now\",\n      icon: SiWhatsapp,\n      action: openWhatsApp,\n      special: true\n    }\n  ];\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-md border-t border-gray-200 shadow-lg\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex justify-around items-center py-2\">\n          {navItems.map((item) => {\n            const IconComponent = item.icon;\n            return (\n              <button\n                key={item.id}\n                onClick={item.action}\n                className={`flex flex-col items-center justify-center p-2 rounded-lg transition-all duration-300 min-w-[60px] ${\n                  item.special\n                    ? \"bg-green-600 hover:bg-green-700 text-white transform hover:scale-110 hover:-translate-y-1\"\n                    : activeSection === item.id\n                    ? \"bg-blue-100 text-blue-600\"\n                    : \"text-gray-600 hover:text-blue-600 hover:bg-blue-50\"\n                }`}\n                data-testid={`bottom-nav-${item.id}`}\n              >\n                <IconComponent size={20} className={`mb-1 ${item.special ? 'animate-pulse' : ''}`} />\n                <span className=\"text-xs font-medium\">{item.label}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":2740},"client/src/components/ContactSection.tsx":{"content":"export default function ContactSection() {\n  const handleDirections = () => {\n    window.open(\"https://maps.google.com/?q=8.8932,76.7794\", \"_blank\");\n  };\n\n  const scrollToMap = () => {\n    const mapSection = document.querySelector('[data-testid=\"map-section\"]');\n    if (mapSection) {\n      mapSection.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-muted/30\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Find Your Way to Paradise\n          </h3>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Located in the heart of Munroe Island, we're here to welcome you to an unforgettable Kerala backwater experience\n          </p>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          <div>\n            <div className=\"bg-card rounded-2xl p-8 shadow-lg mb-8\">\n              <h4 className=\"font-serif text-2xl font-bold mb-6 flex items-center\">\n                <i className=\"fas fa-map-marker-alt text-primary mr-3\"></i>\n                Contact Information\n              </h4>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <i className=\"fas fa-home text-primary text-xl mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">Address</h5>\n                    <button \n                      onClick={scrollToMap}\n                      className=\"text-left text-muted-foreground hover:text-primary transition-colors cursor-pointer\"\n                      data-testid=\"address-click-to-map\"\n                    >\n                      Heaven of Munroe<br />\n                      Munroe Island, Kollam District<br />\n                      Kerala 691502, India\n                    </button>\n                    <p className=\"text-xs text-muted-foreground/60 mt-1\">\n                      <i className=\"fas fa-mouse-pointer mr-1\"></i>Click to view on map\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <i className=\"fas fa-phone text-secondary text-xl mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">Phone & WhatsApp</h5>\n                    <p className=\"text-muted-foreground\">\n                      <a href=\"tel:+919847012345\" className=\"hover:text-secondary transition-colors\">+91 98470 12345</a><br />\n                      <a href=\"tel:+919447067890\" className=\"hover:text-secondary transition-colors\">+91 94470 67890</a>\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <i className=\"fas fa-envelope text-accent text-xl mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">Email</h5>\n                    <p className=\"text-muted-foreground\">\n                      <a href=\"mailto:info@heavenofmunroe.com\" className=\"hover:text-accent transition-colors\">info@heavenofmunroe.com</a><br />\n                      <a href=\"mailto:bookings@heavenofmunroe.com\" className=\"hover:text-accent transition-colors\">bookings@heavenofmunroe.com</a>\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <i className=\"fas fa-clock text-primary text-xl mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">Operating Hours</h5>\n                    <p className=\"text-muted-foreground\">\n                      Daily: 6:00 AM - 8:00 PM<br />\n                      24/7 Guest Support Available\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-primary rounded-2xl p-8 text-primary-foreground\">\n              <h4 className=\"font-serif text-2xl font-bold mb-4 flex items-center\">\n                <i className=\"fas fa-route mr-3\"></i>\n                Getting to Munroe Island\n              </h4>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-start space-x-3\">\n                  <i className=\"fas fa-plane mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">By Air</h5>\n                    <p className=\"text-sm opacity-90\">Trivandrum Airport (90 km). Cochin Airport (160 km) also available.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-3\">\n                  <i className=\"fas fa-train mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">By Train</h5>\n                    <p className=\"text-sm opacity-90\">Kollam Railway Station (25 km) - Direct connections from major cities.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-3\">\n                  <i className=\"fas fa-car mt-1\"></i>\n                  <div>\n                    <h5 className=\"font-semibold mb-1\">By Road</h5>\n                    <p className=\"text-sm opacity-90\">Well-connected by NH66. Parking available on-site.</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-6 pt-6 border-t border-primary-foreground/20\">\n                <p className=\"text-sm opacity-90\">\n                  <i className=\"fas fa-info-circle mr-2\"></i>\n                  Need detailed directions? Call us and we'll guide you step by step to ensure a smooth journey.\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <div \n              className=\"bg-card rounded-2xl overflow-hidden shadow-lg h-[600px] flex items-center justify-center relative\"\n              data-testid=\"map-section\"\n            >\n              <img \n                src=\"https://images.unsplash.com/photo-1602216056096-3b40cc0c9944?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Aerial view of Munroe Island location\" \n                className=\"w-full h-full object-cover\"\n              />\n              \n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\n              \n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <div className=\"text-center text-white\">\n                  <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center mx-auto mb-4 animate-pulse\">\n                    <i className=\"fas fa-map-marker-alt text-2xl text-primary-foreground\"></i>\n                  </div>\n                  <h5 className=\"font-serif text-2xl font-bold mb-2\">Heaven of Munroe</h5>\n                  <p className=\"text-lg opacity-90\">Munroe Island, Kerala</p>\n                  <button \n                    onClick={handleDirections}\n                    className=\"mt-4 bg-primary text-primary-foreground px-6 py-2 rounded-lg hover:bg-primary/90 transition-colors\"\n                    data-testid=\"button-get-directions\"\n                  >\n                    <i className=\"fas fa-directions mr-2\"></i>\n                    Get Directions\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7742},"client/src/components/DiningSection.tsx":{"content":"export default function DiningSection() {\n  const menuCategories = [\n    {\n      title: \"Fresh Seafood Specialties\",\n      icon: \"fas fa-fish\",\n      color: \"primary\",\n      items: [\n        {\n          name: \"Karimeen Fish Curry\",\n          description: \"Pearl spot fish in coconut curry with traditional spices\",\n          price: \"₹450\"\n        },\n        {\n          name: \"Prawn Roast\",\n          description: \"Local prawns with curry leaves and coconut oil\",\n          price: \"₹380\"\n        },\n        {\n          name: \"Fish Molee\",\n          description: \"Light curry with coconut milk and ginger\",\n          price: \"₹420\"\n        }\n      ]\n    },\n    {\n      title: \"Traditional Vegetarian\",\n      icon: \"fas fa-leaf\",\n      color: \"secondary\",\n      items: [\n        {\n          name: \"Sadhya Feast\",\n          description: \"Complete traditional Kerala meal on banana leaf\",\n          price: \"₹350\"\n        },\n        {\n          name: \"Avial & Thoran\",\n          description: \"Mixed vegetables with coconut and local greens\",\n          price: \"₹280\"\n        },\n        {\n          name: \"Kappa & Meen Curry\",\n          description: \"Tapioca with fish curry - island favorite\",\n          price: \"₹320\"\n        }\n      ]\n    }\n  ];\n\n  return (\n    <section id=\"dining\" className=\"py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Authentic Munroe Island Cuisine\n          </h3>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Savor traditional Kerala flavors prepared with fresh, local ingredients and family recipes passed down through generations\n          </p>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n          <div>\n            <div className=\"relative rounded-3xl overflow-hidden shadow-2xl\">\n              <img \n                src=\"https://images.unsplash.com/photo-1585937421612-70a008356fbe?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\" \n                alt=\"Traditional Kerala cuisine preparation\" \n                className=\"w-full h-[500px] object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\"></div>\n              <div className=\"absolute bottom-6 left-6 text-white\">\n                <h4 className=\"font-serif text-2xl font-bold mb-2\">Fresh. Local. Authentic.</h4>\n                <p className=\"text-lg opacity-90\">Ingredients sourced from our island gardens</p>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <div className=\"space-y-8\">\n              {menuCategories.map((category, index) => (\n                <div key={index} className=\"bg-card rounded-2xl p-6 shadow-lg\">\n                  <h4 className=\"font-serif text-2xl font-bold text-foreground mb-4 flex items-center\">\n                    <i className={`${category.icon} text-${category.color} mr-3`}></i>\n                    {category.title}\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {category.items.map((item, itemIndex) => (\n                      <div key={itemIndex} className=\"flex justify-between items-center border-b border-border pb-2 last:border-b-0\">\n                        <div>\n                          <h5 className=\"font-semibold text-foreground\">{item.name}</h5>\n                          <p className=\"text-sm text-muted-foreground\">{item.description}</p>\n                        </div>\n                        <span className={`font-bold text-${category.color}`}>{item.price}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              \n              <div className=\"bg-accent/10 rounded-2xl p-6 border border-accent/20\">\n                <h4 className=\"font-serif text-xl font-bold text-foreground mb-3 flex items-center\">\n                  <i className=\"fas fa-star text-accent mr-3\"></i>\n                  Chef's Dining Experience\n                </h4>\n                <p className=\"text-muted-foreground mb-4\">\n                  Join our family for a complete culinary journey. Watch traditional cooking methods, learn family recipes, and enjoy a feast together.\n                </p>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-2xl font-bold text-accent\">₹800/person</span>\n                  <button \n                    className=\"bg-accent text-accent-foreground px-6 py-2 rounded-lg hover:bg-accent/90 transition-colors\"\n                    onClick={() => {\n                      const element = document.getElementById(\"booking\");\n                      if (element) {\n                        element.scrollIntoView({ behavior: \"smooth\" });\n                      }\n                    }}\n                    data-testid=\"button-reserve-experience\"\n                  >\n                    Reserve Experience\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5254},"client/src/components/Footer.tsx":{"content":"export default function Footer() {\n  const socialLinks = [\n    { icon: \"fab fa-facebook-f\", color: \"[#1877F2]\", href: \"https://www.facebook.com/profile.php?id=100066795641064\" },\n    { icon: \"fab fa-instagram\", color: \"[#E4405F]\", href: \"https://www.instagram.com/heaven_of_munroe\" },\n    { icon: \"fab fa-whatsapp\", color: \"[#25D366]\", href: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Heaven of Munroe services\" },\n    { icon: \"fab fa-youtube\", color: \"[#FF0000]\", href: \"#\" }\n  ];\n\n  const essentialLinks = [\n    { label: \"Services\", href: \"#services\" },\n    { label: \"Gallery\", href: \"#gallery\" },\n    { label: \"About Us\", href: \"#about-us\" },\n    { label: \"Contact\", href: \"#contact\" }\n  ];\n\n  const scrollToSection = (href: string) => {\n    if (href.startsWith(\"#\")) {\n      const element = document.getElementById(href.substring(1));\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\" });\n      }\n    }\n  };\n\n  return (\n    <footer className=\"bg-foreground text-background py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-3 gap-8\">\n          <div className=\"md:col-span-2\">\n            <div className=\"flex items-center space-x-3 mb-6\">\n              <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center\">\n                <i className=\"fas fa-mountain text-primary-foreground text-xl\"></i>\n              </div>\n              <div>\n                <h4 className=\"font-serif font-bold text-2xl\">Heaven of Munroe</h4>\n                <p className=\"text-sm opacity-70\">Authentic Kerala Backwater Experience</p>\n              </div>\n            </div>\n            \n            <p className=\"text-background/70 mb-6 leading-relaxed\">\n              Experience authentic Kerala backwaters at Munroe Island.\n            </p>\n            \n            <div className=\"flex space-x-4\">\n              {socialLinks.map((link, index) => (\n                <a \n                  key={index}\n                  href={link.href}\n                  target={link.href.startsWith('https://') ? '_blank' : '_self'}\n                  rel={link.href.startsWith('https://') ? 'noopener noreferrer' : undefined}\n                  className=\"w-10 h-10 rounded-lg flex items-center justify-center hover:opacity-80 transition-all\"\n                  style={{ backgroundColor: link.color.replace(/[\\[\\]]/g, '') }}\n                  data-testid={`social-link-${index}`}\n                >\n                  <i className={`${link.icon} text-white`}></i>\n                </a>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <h5 className=\"font-semibold text-lg mb-4\">Essential Links</h5>\n            <ul className=\"space-y-2\">\n              {essentialLinks.map((link, index) => (\n                <li key={index}>\n                  <button \n                    onClick={() => scrollToSection(link.href)}\n                    className=\"text-background/70 hover:text-background transition-colors text-left\"\n                    data-testid={`essential-link-${index}`}\n                  >\n                    {link.label}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-background/20 mt-8 pt-6 text-center\">\n          <p className=\"text-background/60 text-sm\">\n            © 2024 Heaven of Munroe. All rights reserved.\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3539},"client/src/components/Header.tsx":{"content":"import { useLocation } from \"wouter\";\n\nexport default function Header() {\n  const [, setLocation] = useLocation();\n\n\n  const openInquiryForm = () => {\n    setLocation(\"/inquiry#booking-form\");\n  };\n\n  const navigateToHome = () => {\n    setLocation(\"/\");\n  };\n\n  return (\n    <header className=\"bg-orange-100/95 backdrop-blur-md shadow-sm sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <button \n            onClick={navigateToHome}\n            className=\"flex items-center space-x-3 hover:opacity-80 transition-all duration-300 transform hover:scale-105\"\n            data-testid=\"button-logo-home\"\n          >\n            <img \n              src=\"/images/logo.png\" \n              alt=\"Heaven of Munroe Logo\" \n              className=\"h-16 w-auto object-contain\"\n            />\n          </button>\n          \n          <div className=\"flex items-center space-x-3\">\n            <button \n              onClick={openInquiryForm}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-all duration-300 transform hover:scale-105 font-medium text-sm\"\n              data-testid=\"button-inquiry-header\"\n            >\n              <i className=\"fas fa-calendar-plus mr-1\"></i>\n              Book Now\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":1416},"client/src/components/Hero.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport type { HeroContent } from \"@shared/schema\";\n\nexport default function Hero() {\n  const [, setLocation] = useLocation();\n  \n  // Fetch hero content from database\n  const { data: heroContent, isLoading } = useQuery<HeroContent | null>({\n    queryKey: ['/api/hero-content'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n    retry: 1\n  });\n\n  const scrollToServices = () => {\n    const element = document.getElementById(\"services\");\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const openInquiryForm = () => {\n    setLocation(\"/inquiry\");\n  };\n\n  // Default values as fallback\n  const title = heroContent?.title || \"Heaven of Munroe\";\n  const subtitle = heroContent?.subtitle || \"Room Stay & Food Boating Service\";  \n  const description = heroContent?.description || \"Experience Authentic Kerala Backwaters\";\n  const backgroundImage = heroContent?.backgroundImage || \"/images/backwater-boat-silhouette.jpg\";\n  const primaryButtonText = heroContent?.primaryButtonText || \"Discover Paradise\";\n  const secondaryButtonText = heroContent?.secondaryButtonText || \"Book Your Journey\";\n  const scrollHintText = heroContent?.scrollHintText || \"✨ Scroll down to explore our services\";\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden floating-particles\">\n      {/* Light overlay for text readability while keeping background visible */}\n      <div className=\"absolute inset-0 bg-black/20\"></div>\n      \n      <div className=\"relative z-10 container mx-auto px-4 text-center\">\n        <div className=\"animate-fade-in-up\">\n          {/* Enhanced typography with better contrast and animations */}\n          <div className=\"text-reveal mb-6\">\n            <h1 className=\"text-reveal-inner font-serif text-4xl md:text-6xl lg:text-8xl font-bold leading-tight gradient-shift drop-shadow-2xl\">\n              {title}\n            </h1>\n          </div>\n          \n          {/* Better contrast for subtitle text */}\n          <div className=\"text-reveal\">\n            <p className=\"text-reveal-inner text-xl md:text-2xl mb-3 font-medium text-white drop-shadow-lg animate-slide-in-left delay-200\">\n              {subtitle}\n            </p>\n          </div>\n          \n          <div className=\"text-reveal\">\n            <p className=\"text-reveal-inner text-lg md:text-xl mb-12 text-gray-100 drop-shadow-md animate-slide-in-right delay-300\">\n              {description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Enhanced buttons with sophisticated animations */}\n        <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center animate-zoom-in delay-400\">\n          <button \n            onClick={scrollToServices}\n            className=\"water-ripple morphing-shadow cursor-glow breathing-scale bg-gradient-to-r from-orange-500 to-amber-600 hover:from-orange-600 hover:to-amber-700 text-white px-10 py-5 rounded-2xl text-lg font-bold transition-all duration-700 transform hover:scale-110 hover:-translate-y-3 active:scale-95 min-w-[220px] shadow-2xl\"\n            data-testid=\"button-discover-services\"\n          >\n            <i className=\"fas fa-compass mr-3 animate-rotate-slow text-xl\"></i>\n            {primaryButtonText}\n          </button>\n          \n          <button \n            onClick={openInquiryForm}\n            className=\"water-ripple morphing-shadow cursor-glow card-3d bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white px-10 py-5 rounded-2xl text-lg font-bold transition-all duration-700 transform hover:scale-110 hover:-translate-y-3 active:scale-95 min-w-[220px] shadow-2xl\"\n            data-testid=\"button-book-inquiry\"\n          >\n            <i className=\"fas fa-calendar-plus mr-3 animate-bounce-gentle text-xl\"></i>\n            {secondaryButtonText}\n          </button>\n        </div>\n        \n        {/* Enhanced floating action hint */}\n        <div className=\"mt-16 animate-fade-in-up delay-500\">\n          <p className=\"text-white/80 text-sm mb-4 drop-shadow-md\">\n            {scrollHintText}\n          </p>\n        </div>\n      </div>\n      \n      {/* Enhanced scroll indicator */}\n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 cursor-glow\">\n        <button \n          onClick={scrollToServices} \n          className=\"text-white/70 hover:text-white transition-all duration-500 hover:scale-125 animate-bounce\"\n        >\n          <div className=\"flex flex-col items-center space-y-2\">\n            <div className=\"w-6 h-10 border-2 border-white/40 rounded-full flex justify-center\">\n              <div className=\"w-1 h-3 bg-white/60 rounded-full mt-2 animate-bounce\"></div>\n            </div>\n            <i className=\"fas fa-chevron-down text-xl animate-bounce-gentle\"></i>\n          </div>\n        </button>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5014},"client/src/components/InquiryForm.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst inquirySchema = z.object({\n  fullName: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().min(10, \"Please enter a valid phone number\"),\n  numberOfGuests: z.number().min(1, \"At least 1 guest required\").max(20, \"Maximum 20 guests allowed\"),\n  selectedPackage: z.string().min(1, \"Please select a package\"),\n  preferredDate: z.string().min(1, \"Please select a date\"),\n  preferredTime: z.string().min(1, \"Please select a time\"),\n  specialRequests: z.string().optional(),\n});\n\ntype InquiryFormData = z.infer<typeof inquirySchema>;\n\ninterface InquiryFormProps {\n  selectedPackage?: string;\n  onClose?: () => void;\n  onSuccess?: (inquiryId: string) => void;\n}\n\nexport default function InquiryForm({ selectedPackage, onClose, onSuccess }: InquiryFormProps) {\n  const [showPaymentOption, setShowPaymentOption] = useState(false);\n  const [inquiryId, setInquiryId] = useState<string>(\"\");\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const packages = [\n    { id: \"sunrise-special\", name: \"Sunrise Special - ₹800\", price: 800 },\n    { id: \"family-adventure\", name: \"Family Adventure - ₹1200\", price: 1200 },\n    { id: \"romantic-sunset\", name: \"Romantic Sunset - ₹1500\", price: 1500 },\n    { id: \"full-day-explorer\", name: \"Full Day Explorer - ₹2500\", price: 2500 },\n    { id: \"canal-boating\", name: \"Canal Boating - ₹600/hour\", price: 600 },\n    { id: \"mini-houseboat\", name: \"Mini House Boat - ₹1200/day\", price: 1200 },\n    { id: \"homestay-rooms\", name: \"Home Stay Rooms - ₹1800/night\", price: 1800 },\n    { id: \"lake-foods\", name: \"Lake Foods - ₹600/meal\", price: 600 }\n  ];\n\n  const timeSlots = [\n    \"6:00 AM - 8:00 AM\",\n    \"8:00 AM - 10:00 AM\", \n    \"10:00 AM - 12:00 PM\",\n    \"12:00 PM - 2:00 PM\",\n    \"2:00 PM - 4:00 PM\",\n    \"4:00 PM - 6:00 PM\",\n    \"6:00 PM - 8:00 PM\"\n  ];\n\n  const form = useForm<InquiryFormData>({\n    resolver: zodResolver(inquirySchema),\n    defaultValues: {\n      fullName: \"\",\n      email: \"\",\n      phone: \"\",\n      numberOfGuests: 1,\n      selectedPackage: selectedPackage || \"\",\n      preferredDate: \"\",\n      preferredTime: \"\",\n      specialRequests: \"\",\n    },\n  });\n\n  // Auto-focus the first field for better user experience\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const firstInput = document.querySelector('[data-testid=\"input-full-name\"]') as HTMLInputElement;\n      if (firstInput) {\n        firstInput.focus();\n      }\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  const createInquiry = useMutation({\n    mutationFn: async (data: InquiryFormData) => {\n      const response = await apiRequest(\"POST\", \"/api/booking-inquiry\", data);\n      return await response.json();\n    },\n    onSuccess: (data: any) => {\n      const newInquiryId = data.id || \"temp-id\";\n      setInquiryId(newInquiryId);\n      setShowPaymentOption(true);\n      queryClient.invalidateQueries({ queryKey: [\"/api/booking-inquiries\"] });\n      toast({\n        title: \"Inquiry Submitted Successfully!\",\n        description: \"Thank you for your interest. You can now proceed with payment to confirm your booking.\",\n      });\n      if (onSuccess) {\n        onSuccess(newInquiryId);\n      }\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Submission Failed\",\n        description: error.message || \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: InquiryFormData) => {\n    createInquiry.mutate(data);\n  };\n\n  const handlePayment = () => {\n    const selectedPkg = packages.find(pkg => pkg.id === form.getValues(\"selectedPackage\"));\n    const totalAmount = selectedPkg ? selectedPkg.price * form.getValues(\"numberOfGuests\") : 0;\n    \n    // This will be replaced with PhonePe integration\n    toast({\n      title: \"Payment Integration Coming Soon\",\n      description: `Total amount: ₹${totalAmount}. PhonePe payment gateway will be integrated soon.`,\n    });\n  };\n\n  if (showPaymentOption) {\n    const selectedPkg = packages.find(pkg => pkg.id === form.getValues(\"selectedPackage\"));\n    const totalAmount = selectedPkg ? selectedPkg.price * form.getValues(\"numberOfGuests\") : 0;\n\n    return (\n      <Card className=\"w-full max-w-md mx-auto animate-fade-in-up\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-serif text-green-600\">\n            <i className=\"fas fa-check-circle mr-2\"></i>\n            Inquiry Submitted!\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"text-center\">\n            <p className=\"text-gray-600 mb-4\">\n              Your booking inquiry has been received. Complete your payment to confirm your reservation.\n            </p>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg mb-6\">\n              <h3 className=\"font-semibold text-gray-800 mb-2\">Booking Summary</h3>\n              <p className=\"text-sm text-gray-600\">Package: {selectedPkg?.name}</p>\n              <p className=\"text-sm text-gray-600\">Guests: {form.getValues(\"numberOfGuests\")}</p>\n              <p className=\"text-sm text-gray-600\">Date: {form.getValues(\"preferredDate\")}</p>\n              <p className=\"text-sm text-gray-600\">Time: {form.getValues(\"preferredTime\")}</p>\n              <div className=\"border-t pt-2 mt-2\">\n                <p className=\"font-bold text-lg text-green-600\">\n                  Total: ₹{totalAmount}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col space-y-3\">\n            <Button \n              onClick={handlePayment}\n              className=\"w-full bg-green-600 hover:bg-green-700 text-white\"\n              data-testid=\"button-proceed-payment\"\n            >\n              <i className=\"fas fa-credit-card mr-2\"></i>\n              Proceed to Payment\n            </Button>\n            \n            <Button \n              variant=\"outline\" \n              onClick={() => setShowPaymentOption(false)}\n              className=\"w-full\"\n              data-testid=\"button-modify-booking\"\n            >\n              <i className=\"fas fa-edit mr-2\"></i>\n              Modify Booking\n            </Button>\n            \n            {onClose && (\n              <Button \n                variant=\"ghost\" \n                onClick={onClose}\n                className=\"w-full\"\n                data-testid=\"button-close-form\"\n              >\n                Close\n              </Button>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto animate-fade-in-up shadow-xl border-0 bg-white\">\n      <CardHeader className=\"bg-gradient-to-r from-blue-50 to-green-50 rounded-t-lg\">\n        <CardTitle className=\"text-2xl font-serif text-center text-blue-600\">\n          <i className=\"fas fa-ship mr-2\"></i>\n          Book Your Experience\n        </CardTitle>\n        <p className=\"text-center text-gray-600\">\n          Fill in your details to make a booking inquiry\n        </p>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"fullName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Full Name *</FormLabel>\n                    <FormControl>\n                      <Input \n                        placeholder=\"Enter your full name\" \n                        {...field} \n                        data-testid=\"input-full-name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"phone\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Phone Number *</FormLabel>\n                    <FormControl>\n                      <Input \n                        placeholder=\"Enter your phone number\" \n                        {...field} \n                        data-testid=\"input-phone\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email Address *</FormLabel>\n                  <FormControl>\n                    <Input \n                      type=\"email\"\n                      placeholder=\"Enter your email address\" \n                      {...field} \n                      data-testid=\"input-email\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"selectedPackage\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Select Package *</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger data-testid=\"select-package\">\n                          <SelectValue placeholder=\"Choose a package\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {packages.map((pkg) => (\n                          <SelectItem key={pkg.id} value={pkg.id}>\n                            {pkg.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"numberOfGuests\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Number of Guests *</FormLabel>\n                    <FormControl>\n                      <Input \n                        type=\"number\"\n                        min=\"1\"\n                        max=\"20\"\n                        placeholder=\"Number of guests\" \n                        {...field}\n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}\n                        data-testid=\"input-guests\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"preferredDate\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Preferred Date *</FormLabel>\n                    <FormControl>\n                      <Input \n                        type=\"date\"\n                        min={new Date().toISOString().split('T')[0]}\n                        {...field} \n                        data-testid=\"input-date\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"preferredTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Preferred Time *</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger data-testid=\"select-time\">\n                          <SelectValue placeholder=\"Choose time slot\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {timeSlots.map((time) => (\n                          <SelectItem key={time} value={time}>\n                            {time}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"specialRequests\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Special Requests (Optional)</FormLabel>\n                  <FormControl>\n                    <Textarea \n                      placeholder=\"Any special requirements or requests...\"\n                      rows={3}\n                      {...field} \n                      data-testid=\"input-special-requests\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n              <Button \n                type=\"submit\" \n                className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white\"\n                disabled={createInquiry.isPending}\n                data-testid=\"button-submit-inquiry\"\n              >\n                {createInquiry.isPending ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin mr-2\"></i>\n                    Submitting...\n                  </>\n                ) : (\n                  <>\n                    <i className=\"fas fa-paper-plane mr-2\"></i>\n                    Submit Inquiry\n                  </>\n                )}\n              </Button>\n              \n              {onClose && (\n                <Button \n                  type=\"button\"\n                  variant=\"outline\" \n                  onClick={onClose}\n                  className=\"sm:w-auto\"\n                  data-testid=\"button-cancel\"\n                >\n                  Cancel\n                </Button>\n              )}\n            </div>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":15337},"client/src/components/PhotoGallery.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport { Images, ChevronUp, X, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport type { GalleryImage } from \"@shared/schema\";\n\nexport default function PhotoGallery() {\n  const [showAllImages, setShowAllImages] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\");\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [lightboxImages, setLightboxImages] = useState<GalleryImage[]>([]);\n\n  const { data: galleryImages = [], isLoading, isError } = useQuery<GalleryImage[]>({\n    queryKey: ['/api/gallery-images'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  // Generate gallery images from all photos in the pics folder\n  const generateLocalImages = (): GalleryImage[] => {\n    const localImages: GalleryImage[] = [];\n    \n    // Categories and descriptions for diverse content (culture and wildlife categories removed)\n    const imageData = [\n      { category: \"kayaking\", title: \"Traditional Kayak Adventure\", description: \"Gliding through serene backwaters in traditional wooden kayaks\" },\n      { category: \"nature\", title: \"Coconut Palm Reflections\", description: \"Towering coconut palms mirrored in crystal-clear waters\" },\n      { category: \"nature\", title: \"Kingfisher Spotting\", description: \"Colorful kingfishers perched along the waterways\" },\n      { category: \"kayaking\", title: \"Peaceful Morning Paddle\", description: \"Early morning kayaking through misty backwater channels\" },\n      { category: \"landscape\", title: \"Backwater Sunset\", description: \"Golden hour painting the sky over tranquil waters\" },\n      { category: \"landscape\", title: \"Local Fishing Boats\", description: \"Traditional fishing boats anchored in village waters\" },\n      { category: \"nature\", title: \"Mangrove Exploration\", description: \"Navigating through dense mangrove forests\" },\n      { category: \"kayaking\", title: \"Group Kayaking Fun\", description: \"Friends enjoying a guided kayaking expedition\" },\n      { category: \"nature\", title: \"Heron in Shallow Waters\", description: \"Graceful herons hunting in the shallow backwaters\" },\n      { category: \"landscape\", title: \"Village Waterfront\", description: \"Charming village homes along the water's edge\" },\n      { category: \"landscape\", title: \"Coir Making Tradition\", description: \"Local artisans crafting coir products from coconut fiber\" },\n      { category: \"nature\", title: \"Lotus Blooms\", description: \"Beautiful lotus flowers floating on calm waters\" },\n      { category: \"kayaking\", title: \"Solo Kayak Journey\", description: \"Peaceful solo paddling through narrow channels\" },\n      { category: \"nature\", title: \"Monitor Lizard Basking\", description: \"Large monitor lizards sunbathing on fallen logs\" },\n      { category: \"landscape\", title: \"Aerial Backwater View\", description: \"Bird's eye view of the intricate waterway network\" },\n      { category: \"landscape\", title: \"Traditional House Boat\", description: \"Authentic Kerala houseboats moored in backwaters\" },\n      { category: \"nature\", title: \"Bamboo Grove Passage\", description: \"Kayaking through tunnels of overhanging bamboo\" },\n      { category: \"kayaking\", title: \"Family Kayaking Trip\", description: \"Multi-generational family enjoying water adventures\" },\n      { category: \"nature\", title: \"Cormorant Fishing\", description: \"Cormorants diving for fish in the clear waters\" },\n      { category: \"landscape\", title: \"Monsoon Backwaters\", description: \"Lush green landscape during the monsoon season\" },\n      { category: \"landscape\", title: \"Spice Garden Visit\", description: \"Exploring aromatic spice gardens near the waterways\" },\n      { category: \"nature\", title: \"Water Hyacinth Blooms\", description: \"Purple water hyacinth flowers carpeting the surface\" },\n      { category: \"kayaking\", title: \"Sunset Kayak Tour\", description: \"Evening kayaking as the sun sets over the horizon\" },\n      { category: \"nature\", title: \"Otter Family Play\", description: \"Playful otters swimming alongside kayaks\" },\n      { category: \"landscape\", title: \"Narrow Channel Navigation\", description: \"Maneuvering through tight waterway passages\" },\n      { category: \"landscape\", title: \"Coconut Harvesting\", description: \"Local workers harvesting coconuts from tall palms\" },\n      { category: \"nature\", title: \"Butterfly Garden\", description: \"Colorful butterflies fluttering around flowering plants\" },\n      { category: \"kayaking\", title: \"Beginner's First Paddle\", description: \"First-time kayakers learning the basics\" },\n      { category: \"nature\", title: \"Eagle Soaring Above\", description: \"Majestic eagles circling over the backwater ecosystem\" },\n      { category: \"landscape\", title: \"Tidal Creek Exploration\", description: \"Discovering hidden tidal creeks and inlets\" },\n      { category: \"landscape\", title: \"Village Market Scene\", description: \"Bustling local market near the waterfront\" },\n      { category: \"nature\", title: \"Fern Covered Banks\", description: \"Lush ferns creating green walls along the water\" },\n      { category: \"kayaking\", title: \"Advanced Paddling Techniques\", description: \"Experienced kayakers demonstrating proper form\" },\n      { category: \"nature\", title: \"Turtle Sanctuary Visit\", description: \"Protected turtles in their natural habitat\" },\n      { category: \"landscape\", title: \"Estuary Meeting Point\", description: \"Where freshwater meets the Arabian Sea\" },\n      { category: \"landscape\", title: \"Traditional Fishing Nets\", description: \"Chinese fishing nets silhouetted against the sky\" },\n      { category: \"nature\", title: \"Medicinal Plant Garden\", description: \"Ayurvedic herbs growing along the waterways\" },\n      { category: \"kayaking\", title: \"Night Kayaking Adventure\", description: \"Moonlit paddling under starry skies\" },\n      { category: \"nature\", title: \"Migratory Bird Watching\", description: \"Seasonal visitors resting in the wetlands\" },\n      { category: \"landscape\", title: \"Backwater Island Hopping\", description: \"Exploring small islands scattered throughout\" },\n      { category: \"landscape\", title: \"Toddy Tapping Tradition\", description: \"Traditional palm wine collection methods\" },\n      { category: \"nature\", title: \"Monsoon Forest Trail\", description: \"Hiking trails through rain-soaked forests\" },\n      { category: \"kayaking\", title: \"Photography Kayak Tour\", description: \"Capturing perfect shots from water level\" },\n      { category: \"nature\", title: \"Mudskipper Colonies\", description: \"Unique fish that live both in water and on land\" },\n      { category: \"landscape\", title: \"Backwater Confluence\", description: \"Multiple waterways converging into larger channels\" },\n      { category: \"landscape\", title: \"Boat Building Craft\", description: \"Skilled craftsmen constructing traditional boats\" },\n      { category: \"nature\", title: \"Seasonal Flower Blooms\", description: \"Spectacular flowering trees reflecting in water\" },\n      { category: \"kayaking\", title: \"Eco-Tourism Experience\", description: \"Sustainable tourism practices in action\" },\n      { category: \"nature\", title: \"Prawn Farming Ponds\", description: \"Sustainable aquaculture in backwater regions\" },\n      { category: \"landscape\", title: \"Backwater Sunrise\", description: \"Dawn breaking over the peaceful waterscape\" },\n      { category: \"landscape\", title: \"Local Guide Stories\", description: \"Experienced guides sharing local knowledge\" },\n      { category: \"nature\", title: \"Pristine Ecosystem\", description: \"Untouched natural beauty of Munroe Island\" },\n      { category: \"kayaking\", title: \"Perfect Paddle Day\", description: \"Ideal conditions for an unforgettable kayaking experience\" },\n      { category: \"nature\", title: \"Backwater Biodiversity\", description: \"Rich variety of flora and fauna in harmony\" },\n      { category: \"landscape\", title: \"Munroe Island Paradise\", description: \"The ultimate backwater destination in Kerala\" },\n      { category: \"landscape\", title: \"Community Tourism\", description: \"Local communities welcoming visitors with warmth\" }\n    ];\n    \n    // Sunset images data (images 36-39) - keep descriptions for these\n    const sunsetImages = {\n      36: { category: \"sunsets\", title: \"Golden Hour Backwaters\", description: \"Spectacular golden sunset reflecting on calm backwater channels\" },\n      37: { category: \"sunsets\", title: \"Evening Glow Paradise\", description: \"Warm evening light painting the sky in vibrant orange and pink hues\" },\n      38: { category: \"sunsets\", title: \"Sunset Kayak Silhouette\", description: \"Kayakers silhouetted against the dramatic sunset sky\" },\n      39: { category: \"sunsets\", title: \"Twilight Serenity\", description: \"Peaceful twilight moments as day transitions to night\" }\n    };\n\n    // Generate 55 unique images with diverse content (skip deleted image 16)\n    for (let i = 1; i <= 55; i++) {\n      // Skip image 16 as it has been permanently deleted\n      if (i === 16) continue;\n      \n      const data = imageData[i - 1] || imageData[i % imageData.length];\n      \n      // Check if this is a sunset image (36-39) to keep description\n      const isSunsetImage = sunsetImages[i as keyof typeof sunsetImages];\n      const imageData_final = isSunsetImage || data;\n      \n      localImages.push({\n        id: `local-${i}`,\n        title: \"\",\n        description: \"\",\n        imageUrl: `/images/1 (${i}).jpg`,\n        altText: \"\",\n        category: imageData_final.category,\n        sortOrder: i,\n        isActive: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      });\n    }\n    \n    return localImages;\n  };\n\n  const defaultImages = generateLocalImages();\n\n  // Combine database images with local images\n  const displayImages = [...(Array.isArray(galleryImages) ? galleryImages : []), ...defaultImages];\n\n\n  // Get unique categories for filtering\n  const categories = [\"all\", ...Array.from(new Set(displayImages.map(img => img.category || \"general\")))];\n\n  // Filter images by category\n  const filteredImages = selectedCategory === \"all\" \n    ? displayImages \n    : displayImages.filter(img => img.category === selectedCategory);\n\n  // Show limited images initially, or all if \"View All\" is clicked\n  const imagesToShow = showAllImages ? filteredImages : filteredImages.slice(0, 6);\n\n  // Handle opening lightbox\n  const openLightbox = (imageIndex: number) => {\n    // Always use all filtered images for navigation (not just displayed subset)\n    setLightboxImages(filteredImages);\n    \n    // Find the clicked image from the displayed subset\n    const clickedImage = imagesToShow[imageIndex];\n    // Find its index in the full filtered set\n    const fullSetIndex = filteredImages.findIndex(img => img.id === clickedImage.id);\n    \n    // Defensive fallback if image not found (should not happen but safety first)\n    setCurrentImageIndex(fullSetIndex !== -1 ? fullSetIndex : imageIndex);\n    setLightboxOpen(true);\n  };\n\n  // Handle closing lightbox\n  const closeLightbox = () => {\n    setLightboxOpen(false);\n  };\n\n  // Navigate to next image\n  const nextImage = () => {\n    setCurrentImageIndex((prevIndex) => \n      prevIndex === lightboxImages.length - 1 ? 0 : prevIndex + 1\n    );\n  };\n\n  // Navigate to previous image\n  const prevImage = () => {\n    setCurrentImageIndex((prevIndex) => \n      prevIndex === 0 ? lightboxImages.length - 1 : prevIndex - 1\n    );\n  };\n\n  // Handle keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (!lightboxOpen) return;\n      \n      if (event.key === 'Escape') {\n        closeLightbox();\n      } else if (event.key === 'ArrowRight') {\n        nextImage();\n      } else if (event.key === 'ArrowLeft') {\n        prevImage();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [lightboxOpen, lightboxImages.length]);\n\n  return (\n    <section id=\"gallery\" className=\"py-16 bg-white/70 backdrop-blur-sm\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"font-serif text-3xl md:text-4xl font-bold text-gray-800 mb-4\">\n            Gallery\n          </h2>\n          <p className=\"text-lg text-gray-600\">\n            Discover Munroe Island through beautiful moments\n          </p>\n        </div>\n        \n        {/* Category Filter */}\n        <div className=\"flex flex-wrap justify-center gap-2 mb-8\">\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => {\n                setSelectedCategory(category);\n                setShowAllImages(false); // Reset view all state when changing category\n              }}\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-all duration-300 ${\n                selectedCategory === category\n                  ? \"bg-blue-600 text-white shadow-lg\"\n                  : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n              }`}\n              data-testid={`category-filter-${category}`}\n            >\n              {category === \"all\" ? \"All\" : category.charAt(0).toUpperCase() + category.slice(1)}\n            </button>\n          ))}\n        </div>\n\n\n\n        {/* Loading State */}\n        {isLoading ? (\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n            {Array.from({ length: 6 }).map((_, index) => (\n              <div\n                key={index}\n                className=\"aspect-square bg-gray-200 rounded-xl animate-pulse\"\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n            {imagesToShow.map((image, index) => (\n              <div \n                key={image.id}\n                className=\"aspect-square rounded-xl overflow-hidden shadow-lg transition-all duration-300 cursor-pointer hover:scale-105\"\n                onClick={() => openLightbox(index)}\n                data-testid={`gallery-image-${image.id}`}\n              >\n                <img \n                  src={image.imageUrl} \n                  alt={image.altText} \n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <div className=\"text-center mt-12\">\n          {!showAllImages && filteredImages.length > 6 && (\n            <button \n              onClick={() => setShowAllImages(true)}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg flex items-center gap-2\"\n              data-testid=\"button-view-all-gallery\"\n            >\n              <Images size={20} />\n              View All Gallery ({filteredImages.length} photos)\n            </button>\n          )}\n          {showAllImages && (\n            <button \n              onClick={() => setShowAllImages(false)}\n              className=\"bg-gray-600 hover:bg-gray-700 text-white px-8 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-lg flex items-center gap-2\"\n              data-testid=\"button-show-less-gallery\"\n            >\n              <ChevronUp size={20} />\n              Show Less\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Lightbox Modal */}\n      {lightboxOpen && lightboxImages.length > 0 && (\n        <div \n          className=\"fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center\"\n          onClick={closeLightbox}\n          data-testid=\"lightbox-overlay\"\n        >\n          <div \n            className=\"relative max-w-full max-h-full\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Close Button */}\n            <button\n              onClick={closeLightbox}\n              className=\"absolute top-4 right-4 z-10 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-all\"\n              data-testid=\"lightbox-close\"\n            >\n              <X size={24} />\n            </button>\n\n            {/* Navigation Buttons */}\n            {lightboxImages.length > 1 && (\n              <>\n                <button\n                  onClick={prevImage}\n                  className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-75 transition-all\"\n                  data-testid=\"lightbox-prev\"\n                >\n                  <ChevronLeft size={32} />\n                </button>\n                <button\n                  onClick={nextImage}\n                  className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-3 rounded-full hover:bg-opacity-75 transition-all\"\n                  data-testid=\"lightbox-next\"\n                >\n                  <ChevronRight size={32} />\n                </button>\n              </>\n            )}\n\n            {/* Main Image */}\n            <img\n              src={lightboxImages[currentImageIndex]?.imageUrl}\n              alt={lightboxImages[currentImageIndex]?.altText}\n              className=\"max-w-full max-h-screen object-contain\"\n              data-testid=\"lightbox-image\"\n            />\n\n            {/* Image Counter Only */}\n            {lightboxImages.length > 1 && (\n              <div className=\"absolute bottom-4 left-4 right-4 text-center text-white bg-black bg-opacity-50 p-2 rounded-lg\">\n                <p className=\"text-xs opacity-75\">\n                  {currentImageIndex + 1} of {lightboxImages.length}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n    </section>\n  );\n}\n","size_bytes":17845},"client/src/components/Services.tsx":{"content":"import { useLocation } from \"wouter\";\n\nexport default function Services() {\n  const [, setLocation] = useLocation();\n\n  const openDirectBooking = (serviceId: string) => {\n    setLocation(`/inquiry?package=${serviceId}`);\n  };\n\n  // All services removed as requested\n  const services: Array<{\n    id: string;\n    title: string;\n    description: string;\n    price: string;\n    icon: string;\n    whatsapp: string;\n    image: string;\n  }> = [];\n\n  return (\n    <section id=\"services\" className=\"py-16 bg-white/70 backdrop-blur-sm\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12 animate-fade-in-up\">\n          <div className=\"text-reveal mb-4\">\n            <h2 className=\"text-reveal-inner font-serif text-3xl md:text-4xl font-bold gradient-shift\">\n              Munroe Island Experiences\n            </h2>\n          </div>\n          <div className=\"text-reveal\">\n            <p className=\"text-reveal-inner text-lg text-gray-600 max-w-2xl mx-auto\">\n              Immerse yourself in authentic Kerala backwater adventures\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {services.map((service, index) => (\n            <div \n              key={service.id} \n              className=\"relative bg-white rounded-3xl overflow-hidden morphing-shadow card-3d water-ripple group fade-in-stagger cursor-pointer transform-gpu\"\n              style={{ \n                animationDelay: `${index * 200}ms`,\n                perspective: '1000px',\n                transformStyle: 'preserve-3d',\n                willChange: 'transform'\n              }}\n            >\n              {/* Premium image section with multi-layer animations */}\n              <div className=\"relative overflow-hidden h-56\">\n                {/* Main background image */}\n                <div \n                  className=\"absolute inset-0 bg-cover bg-center transition-all duration-1000 group-hover:scale-110\"\n                  style={{\n                    backgroundImage: `url(${service.image})`,\n                    filter: 'brightness(1.1) contrast(1.3)',\n                  }}\n                ></div>\n                \n                {/* Light bottom gradient for text readability only */}\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent\"></div>\n                \n                {/* Dynamic gradient overlay with shimmer effect - only on hover */}\n                <div className=\"absolute inset-0 bg-gradient-to-br from-blue-600/5 via-transparent to-green-600/5 opacity-0 group-hover:opacity-100 transition-all duration-700\"></div>\n                \n                {/* Floating icon with premium animation */}\n                <div className=\"absolute top-6 right-6 transform transition-all duration-700 group-hover:scale-125 group-hover:-rotate-12 group-hover:-translate-y-2\">\n                  <div className=\"bg-white/95 backdrop-blur-md rounded-2xl w-14 h-14 flex items-center justify-center shadow-xl cursor-glow\">\n                    <i className={`${service.icon} text-blue-600 text-2xl animate-float`}></i>\n                  </div>\n                </div>\n                \n                {/* Reveal content overlay */}\n                <div className=\"absolute inset-0 flex flex-col justify-end p-6 opacity-0 group-hover:opacity-100 transition-all duration-700 transform translate-y-4 group-hover:translate-y-0\">\n                  <h4 className=\"text-white font-bold text-lg mb-2 drop-shadow-lg\">\n                    {service.title}\n                  </h4>\n                  <p className=\"text-white/90 text-sm leading-relaxed drop-shadow-md\">\n                    {service.description}\n                  </p>\n                </div>\n                \n                {/* Shimmer effect overlay */}\n                <div className=\"absolute inset-0 opacity-0 group-hover:opacity-30 transition-opacity duration-1000\">\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000\"></div>\n                </div>\n              </div>\n              \n              {/* Enhanced content section */}\n              <div className=\"p-6 relative\">\n                {/* Background pattern */}\n                <div className=\"absolute inset-0 opacity-5 group-hover:opacity-10 transition-opacity duration-500\">\n                  <div className=\"absolute inset-0\" style={{\n                    backgroundImage: 'radial-gradient(circle at 25px 25px, #3b82f6 2px, transparent 2px)',\n                    backgroundSize: '50px 50px'\n                  }}></div>\n                </div>\n                \n                <div className=\"relative z-10\">\n                  <h3 className=\"font-serif text-xl font-bold text-gray-800 mb-3 group-hover:text-blue-600 transition-all duration-500 transform group-hover:scale-105\">\n                    {service.title}\n                  </h3>\n                  \n                  <p className=\"text-gray-600 text-sm mb-6 leading-relaxed opacity-100 group-hover:opacity-0 transition-all duration-500\">\n                    {service.description}\n                  </p>\n                  \n                  {/* Enhanced pricing section */}\n                  <div className=\"flex justify-center mb-6\">\n                    <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 text-white px-6 py-2 rounded-2xl font-bold text-lg shadow-lg transform group-hover:scale-110 group-hover:-rotate-1 transition-all duration-500 cursor-glow\">\n                      {service.price}\n                    </div>\n                  </div>\n                  \n                  {/* Premium booking buttons */}\n                  <div className=\"flex space-x-3 opacity-0 group-hover:opacity-100 transform translate-y-4 group-hover:translate-y-0 transition-all duration-700 delay-200\">\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        openDirectBooking(service.id);\n                      }}\n                      className=\"flex-1 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white px-4 py-3 rounded-xl text-sm font-bold transition-all duration-500 transform hover:scale-105 hover:shadow-2xl hover:-translate-y-1 active:scale-95 water-ripple cursor-glow\"\n                      data-testid={`button-book-direct-${service.id}`}\n                    >\n                      <i className=\"fas fa-calendar-plus mr-2 animate-bounce-gentle\"></i>\n                      Book Direct\n                    </button>\n                    <button \n                      onClick={(e) => {\n                        e.stopPropagation();\n                        window.open(service.whatsapp, '_blank');\n                      }}\n                      className=\"flex-1 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white px-4 py-3 rounded-xl text-sm font-bold transition-all duration-500 transform hover:scale-105 hover:shadow-2xl hover:-translate-y-1 active:scale-95 water-ripple cursor-glow\"\n                      data-testid={`button-whatsapp-${service.id}`}\n                    >\n                      <i className=\"fab fa-whatsapp mr-2 animate-wiggle\"></i>\n                      WhatsApp\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Border glow effect */}\n              <div className=\"absolute inset-0 rounded-3xl border-2 border-transparent bg-gradient-to-r from-blue-400 via-green-400 to-blue-400 opacity-0 group-hover:opacity-20 transition-opacity duration-500 -z-10\"></div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-16 animate-fade-in-up delay-500\">\n          <div className=\"bg-white/80 backdrop-blur-md rounded-3xl p-8 shadow-2xl max-w-2xl mx-auto water-ripple morphing-shadow\">\n            <div className=\"mb-6\">\n              <h3 className=\"font-serif text-2xl font-bold gradient-shift mb-3\">\n                Need Personalized Guidance?\n              </h3>\n              <p className=\"text-gray-600\">\n                Let our local experts help you choose the perfect experience for your Kerala adventure\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button \n                onClick={() => window.open(\"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I need help choosing the right package for my Kerala backwater experience\", '_blank')}\n                className=\"bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white px-8 py-4 rounded-2xl font-bold transition-all duration-700 transform hover:scale-110 hover:shadow-2xl hover:-translate-y-2 active:scale-95 water-ripple cursor-glow breathing-scale\"\n                data-testid=\"button-get-help\"\n              >\n                <i className=\"fas fa-user-friends mr-3 animate-bounce-gentle\"></i>\n                Get Expert Advice\n              </button>\n              \n              <button \n                onClick={() => window.open(\"tel:+919633836839\", '_self')}\n                className=\"bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white px-8 py-4 rounded-2xl font-bold transition-all duration-700 transform hover:scale-110 hover:shadow-2xl hover:-translate-y-2 active:scale-95 water-ripple cursor-glow breathing-scale\"\n                data-testid=\"button-call-now\"\n              >\n                <i className=\"fas fa-phone mr-3 animate-wiggle\"></i>\n                Call Now\n              </button>\n            </div>\n            \n            <div className=\"mt-6 flex justify-center items-center space-x-6 text-sm text-gray-500\">\n              <div className=\"flex items-center space-x-2\">\n                <i className=\"fas fa-clock text-blue-500\"></i>\n                <span>24/7 Support</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <i className=\"fas fa-map-marker-alt text-green-500\"></i>\n                <span>Local Experts</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <i className=\"fas fa-star text-yellow-500\"></i>\n                <span>5.0 Rating</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":10638},"client/src/components/TouristInfo.tsx":{"content":"export default function TouristInfo() {\n  const attractions = [\n    {\n      title: \"Secret Canals\",\n      description: \"Navigate through narrow waterways known only to locals, perfect for peaceful kayaking and bird watching.\",\n      icon: \"fas fa-water\",\n      color: \"primary\",\n      tag: \"45 mins by kayak\",\n      image: \"https://images.unsplash.com/photo-1544735716-392fe2489ffa?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    },\n    {\n      title: \"Fishing Villages\",\n      description: \"Visit authentic fishing communities and learn traditional methods passed down through generations.\",\n      icon: \"fas fa-anchor\",\n      color: \"secondary\",\n      tag: \"Cultural Experience\",\n      image: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    },\n    {\n      title: \"Coconut Groves\",\n      description: \"Walk through lush coconut plantations and learn about traditional farming methods unique to the region.\",\n      icon: \"fas fa-tree\",\n      color: \"accent\",\n      tag: \"Nature Walk\",\n      image: \"https://pixabay.com/get/gf45824251118aac69be8e65f65737209326ec96b398fa944c68e66d24692a5143f40555ab9acb8dc227d98080fc8162ec916972f5e91a45b622bfb0ae56ad37e_1280.jpg\"\n    },\n    {\n      title: \"Sunset Points\",\n      description: \"Discover the most beautiful sunset viewing spots across the island's pristine waterways.\",\n      icon: \"fas fa-sun\",\n      color: \"accent\",\n      tag: \"Photography Spot\",\n      image: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\"\n    }\n  ];\n\n  const travelTips = [\n    {\n      icon: \"fas fa-plane\",\n      color: \"primary\",\n      title: \"Getting Here\",\n      description: \"Nearest airport: Trivandrum (1.5 hrs drive). We provide pickup services from major transport hubs.\"\n    },\n    {\n      icon: \"fas fa-calendar\",\n      color: \"secondary\",\n      title: \"Best Time to Visit\",\n      description: \"October to March for pleasant weather. Monsoon season (June-September) offers unique beauty but limited water activities.\"\n    },\n    {\n      icon: \"fas fa-luggage-cart\",\n      color: \"accent\",\n      title: \"What to Pack\",\n      description: \"Light cotton clothes, sunscreen, hat, mosquito repellent, waterproof bag for kayaking, and comfortable walking shoes.\"\n    },\n    {\n      icon: \"fas fa-language\",\n      color: \"primary\",\n      title: \"Languages\",\n      description: \"Malayalam (local), English widely spoken. Our team is multilingual and happy to assist international guests.\"\n    },\n    {\n      icon: \"fas fa-wifi\",\n      color: \"secondary\",\n      title: \"Connectivity\",\n      description: \"Good mobile network coverage. WiFi available at homestay. Perfect opportunity for a digital detox!\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-muted/30\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h3 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Explore Munroe Island\n          </h3>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Discover hidden gems, local attractions, and insider tips for an unforgettable Kerala backwater experience\n          </p>\n        </div>\n        \n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-2\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {attractions.map((attraction, index) => (\n                <div key={index} className=\"bg-card rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all\">\n                  <div \n                    className=\"h-48\"\n                    style={{\n                      backgroundImage: `url(${attraction.image})`,\n                      backgroundSize: 'cover',\n                      backgroundPosition: 'center'\n                    }}\n                  ></div>\n                  <div className=\"p-6\">\n                    <h4 className=\"font-serif text-xl font-bold mb-2 flex items-center\">\n                      <i className={`${attraction.icon} text-${attraction.color} mr-2`}></i>\n                      {attraction.title}\n                    </h4>\n                    <p className=\"text-muted-foreground mb-3\">\n                      {attraction.description}\n                    </p>\n                    <span className={`inline-block bg-${attraction.color}/10 text-${attraction.color} px-3 py-1 rounded-full text-sm font-medium`}>\n                      {attraction.tag}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <div>\n            <div className=\"bg-card rounded-2xl p-6 shadow-lg\">\n              <h4 className=\"font-serif text-2xl font-bold mb-6 flex items-center\">\n                <i className=\"fas fa-info-circle text-primary mr-3\"></i>\n                Travel Tips\n              </h4>\n              \n              <div className=\"space-y-6\">\n                {travelTips.map((tip, index) => (\n                  <div key={index} className=\"flex items-start space-x-3\">\n                    <i className={`${tip.icon} text-${tip.color} mt-1`}></i>\n                    <div>\n                      <h5 className=\"font-semibold mb-1\">{tip.title}</h5>\n                      <p className=\"text-sm text-muted-foreground\">{tip.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"mt-8 p-4 bg-accent/10 rounded-xl border border-accent/20\">\n                <h5 className=\"font-semibold text-accent mb-2 flex items-center\">\n                  <i className=\"fas fa-phone mr-2\"></i>\n                  24/7 Guest Support\n                </h5>\n                <p className=\"text-sm text-muted-foreground\">\n                  Our local team is always available to help with any questions or emergencies during your stay.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":6103},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/home.tsx":{"content":"import SimpleHeader from \"../components/SimpleHeader\";\nimport Hero from \"../components/Hero\";\nimport MunroeIslandDescription from \"../components/MunroeIslandDescription\";\nimport AboutUs from \"../components/AboutUs\";\nimport Services from \"../components/Services\";\nimport BoatingPackages from \"../components/BoatingPackages\";\nimport Testimonials from \"../components/Testimonials\";\nimport PhotoGallery from \"../components/PhotoGallery\";\nimport ContactSection from \"../components/ContactSection\";\nimport Footer from \"../components/Footer\";\nimport BottomNavigation from \"../components/BottomNavigation\";\n\nexport default function Home() {\n  return (\n    <div \n      className=\"min-h-screen bg-gray-50 pb-20\" \n      style={{\n        backgroundImage: 'url(/images/homebg.jpg)',\n        backgroundSize: 'cover',\n        backgroundPosition: 'top',\n        backgroundRepeat: 'no-repeat',\n        backgroundAttachment: 'fixed'\n      }}\n    >\n      <SimpleHeader />\n      <Hero />\n      <MunroeIslandDescription />\n      <Services />\n      <BoatingPackages />\n      <Testimonials />\n      <PhotoGallery />\n      <AboutUs />\n      <ContactSection />\n      <Footer />\n      <BottomNavigation />\n    </div>\n  );\n}\n","size_bytes":1198},"client/src/pages/inquiry.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport InquiryForm from \"../components/InquiryForm\";\nimport SimpleHeader from \"../components/SimpleHeader\";\nimport Footer from \"../components/Footer\";\n\nexport default function InquiryPage() {\n  const [selectedPackage, setSelectedPackage] = useState<string>(\"\");\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const packageParam = params.get(\"package\") || \"\";\n    setSelectedPackage(packageParam);\n\n    // Ensure the booking form is immediately visible when page loads\n    const scrollToForm = () => {\n      const formElement = document.getElementById('booking-form');\n      if (formElement) {\n        formElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      } else {\n        // Fallback to scroll to top if form not found yet\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    };\n\n    // Small delay to ensure DOM is ready\n    const timeoutId = setTimeout(scrollToForm, 100);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50\">\n      <SimpleHeader />\n      \n      {/* Hero Section for Booking */}\n      <section className=\"bg-blue-600 text-white py-12\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h1 className=\"font-serif text-3xl md:text-4xl font-bold mb-4\">\n            Book Your Heaven of Munroe Experience\n          </h1>\n          <p className=\"text-lg text-blue-100 max-w-2xl mx-auto\">\n            Fill out the form below to begin your booking process. We'll get back to you quickly to confirm your reservation.\n          </p>\n        </div>\n      </section>\n      \n      <main className=\"container mx-auto px-4 py-8 -mt-6\" id=\"booking-form\">\n        <InquiryForm \n          selectedPackage={selectedPackage}\n          onSuccess={(inquiryId) => {\n            // Inquiry submitted successfully\n          }}\n        />\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":2029},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1406},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10468},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":316},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3835},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4107},"client/src/components/ui/hover-card.tsx":{"content":"\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1238},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8592},"client/src/components/ui/mobile-menu.tsx":{"content":"import { Sheet, SheetContent, SheetHeader, SheetTitle } from \"@/components/ui/sheet\";\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onNavigate: (sectionId: string) => void;\n}\n\nexport default function MobileMenu({ isOpen, onClose, onNavigate }: MobileMenuProps) {\n  const menuItems = [\n    { id: \"services\", label: \"Services\" },\n    { id: \"dining\", label: \"Dining\" },\n    { id: \"gallery\", label: \"Gallery\" },\n    { id: \"contact\", label: \"Contact\" },\n    { id: \"booking\", label: \"Book Now\" },\n  ];\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onClose}>\n      <SheetContent side=\"right\" className=\"w-80\">\n        <SheetHeader>\n          <SheetTitle className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n              <i className=\"fas fa-mountain text-primary-foreground text-sm\"></i>\n            </div>\n            <span>Heaven of Munroe</span>\n          </SheetTitle>\n        </SheetHeader>\n        \n        <nav className=\"mt-8 space-y-4\">\n          {menuItems.map((item) => (\n            <button\n              key={item.id}\n              onClick={() => onNavigate(item.id)}\n              className=\"block w-full text-left px-4 py-3 text-foreground hover:text-primary hover:bg-muted/50 rounded-lg transition-colors\"\n              data-testid={`mobile-nav-${item.id}`}\n            >\n              {item.label}\n            </button>\n          ))}\n        </nav>\n      </SheetContent>\n    </Sheet>\n  );\n}\n","size_bytes":1515},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":778},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1710},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5729},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4268},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1740},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1195},"server/db.ts":{"content":"import { neon } from \"@neondatabase/serverless\";\nimport { drizzle } from \"drizzle-orm/neon-http\";\nimport * as schema from \"../shared/schema\";\n\n// Database connection\nconst databaseUrl = process.env.DATABASE_URL;\n\nif (!databaseUrl) {\n  throw new Error(\"DATABASE_URL environment variable is required\");\n}\n\nconst sql = neon(databaseUrl);\nexport const db = drizzle(sql, { schema });\n\nexport type Database = typeof db;","size_bytes":413},"client/src/components/Testimonials.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport type { Testimonial } from \"@shared/schema\";\n\nexport default function Testimonials() {\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n\n  // Fetch testimonials from database\n  const { data: testimonials, isLoading } = useQuery<Testimonial[]>({\n    queryKey: ['/api/testimonials'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n    retry: 1\n  });\n\n  const staticTestimonials = [\n    {\n      id: 1,\n      name: \"Sarah Johnson\",\n      platform: \"Google Maps\",\n      rating: 5,\n      review: \"Absolutely magical experience! The sunrise boat tour was breathtaking. The traditional breakfast on the boat was delicious and the hospitality was exceptional. Highly recommended!\",\n      reviewDate: \"2 weeks ago\"\n    },\n    {\n      id: 2,\n      name: \"Rajesh Kumar\",\n      platform: \"TripAdvisor\",\n      rating: 5,\n      review: \"Best boating experience in Kerala! The family adventure package was perfect for our group. Kids loved the fishing experience and the traditional lunch was amazing.\",\n      reviewDate: \"1 month ago\"\n    },\n    {\n      id: 3,\n      name: \"Emily Chen\",\n      platform: \"Google Reviews\",\n      rating: 5,\n      review: \"The romantic sunset cruise exceeded all expectations! The candlelight dinner on the boat was incredibly romantic. Perfect for our anniversary celebration.\",\n      reviewDate: \"3 weeks ago\"\n    },\n    {\n      id: 4,\n      name: \"David Wilson\",\n      platform: \"TripAdvisor\",\n      rating: 5,\n      review: \"Authentic Kerala experience! The homestay was comfortable and the hosts were incredibly welcoming. The traditional food was the highlight of our trip.\",\n      reviewDate: \"2 months ago\"\n    },\n    {\n      id: 5,\n      name: \"Priya Sharma\",\n      platform: \"Google Maps\",\n      rating: 5,\n      review: \"Heaven of Munroe truly lives up to its name! The full-day explorer package was incredible. Every moment was well-planned and the guides were knowledgeable.\",\n      reviewDate: \"1 week ago\"\n    },\n    {\n      id: 6,\n      name: \"Michael Brown\",\n      platform: \"TripAdvisor\",\n      rating: 5,\n      review: \"Outstanding service and unforgettable memories! The canal boating through the backwaters was peaceful and rejuvenating. Will definitely return!\",\n      reviewDate: \"3 weeks ago\"\n    }\n  ];\n\n  // Combine database testimonials with static testimonials as fallback\n  const testimonialsData = testimonials && testimonials.length > 0 ? testimonials : staticTestimonials;\n\n  useEffect(() => {\n    if (testimonialsData.length > 0) {\n      const interval = setInterval(() => {\n        setCurrentTestimonial((prev) => (prev + 1) % testimonialsData.length);\n      }, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [testimonialsData.length]);\n\n  const handleTestimonialChange = (index: number) => {\n    setCurrentTestimonial(index);\n  };\n\n  const getPlatformIcon = (platform: string) => {\n    switch (platform.toLowerCase()) {\n      case 'google maps':\n      case 'google reviews':\n        return 'fab fa-google';\n      case 'tripadvisor':\n        return 'fab fa-tripadvisor';\n      default:\n        return 'fas fa-star';\n    }\n  };\n\n  const getPlatformColor = (platform: string) => {\n    switch (platform.toLowerCase()) {\n      case 'google maps':\n      case 'google reviews':\n        return 'text-red-500';\n      case 'tripadvisor':\n        return 'text-green-600';\n      default:\n        return 'text-yellow-500';\n    }\n  };\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white/70 backdrop-blur-sm relative overflow-hidden\">\n        <div className=\"container mx-auto px-4 relative z-10\">\n          <div className=\"text-center\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-8 bg-gray-300 rounded w-1/2 mx-auto mb-4\"></div>\n              <div className=\"h-4 bg-gray-300 rounded w-3/4 mx-auto\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  // Empty state\n  if (testimonialsData.length === 0) {\n    return (\n      <section className=\"py-20 bg-gradient-to-b from-slate-50 via-blue-50 to-green-50 relative overflow-hidden\">\n        <div className=\"container mx-auto px-4 relative z-10\">\n          <div className=\"text-center\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold gradient-shift mb-4\">\n              What Our Guests Say\n            </h2>\n            <p className=\"text-lg text-gray-600\">No testimonials available at the moment.</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-white/70 backdrop-blur-sm relative overflow-hidden\">\n      {/* Background decorations */}\n      <div className=\"absolute inset-0 opacity-5\">\n        <div className=\"absolute top-20 left-10 w-32 h-32 bg-blue-400 rounded-full blur-3xl animate-float\"></div>\n        <div className=\"absolute bottom-20 right-10 w-40 h-40 bg-green-400 rounded-full blur-3xl animate-float delay-500\"></div>\n        <div className=\"absolute top-1/2 left-1/2 w-28 h-28 bg-orange-400 rounded-full blur-3xl animate-float delay-300\"></div>\n      </div>\n\n      <div className=\"container mx-auto px-4 relative z-10\">\n        {/* Section Header */}\n        <div className=\"text-center mb-16 animate-fade-in-up\">\n          <div className=\"text-reveal mb-4\">\n            <h2 className=\"text-reveal-inner font-serif text-4xl md:text-5xl font-bold gradient-shift\">\n              What Our Guests Say\n            </h2>\n          </div>\n          <div className=\"text-reveal\">\n            <p className=\"text-reveal-inner text-lg text-gray-600 max-w-2xl mx-auto\">\n              Real experiences from travelers who discovered the magic of Munroe Island with us\n            </p>\n          </div>\n          \n          {/* Platform badges */}\n          <div className=\"flex justify-center items-center space-x-6 mt-8 animate-scale-in delay-300\">\n            <div className=\"flex items-center space-x-2 bg-white/80 backdrop-blur-md rounded-full px-4 py-2 shadow-lg hover-bounce\">\n              <i className=\"fab fa-google text-red-500 text-lg\"></i>\n              <span className=\"text-sm font-medium text-gray-700\">Google Reviews</span>\n            </div>\n            <div className=\"flex items-center space-x-2 bg-white/80 backdrop-blur-md rounded-full px-4 py-2 shadow-lg hover-bounce delay-100\">\n              <i className=\"fab fa-tripadvisor text-green-600 text-lg\"></i>\n              <span className=\"text-sm font-medium text-gray-700\">TripAdvisor</span>\n            </div>\n            <div className=\"flex items-center space-x-2 bg-white/80 backdrop-blur-md rounded-full px-4 py-2 shadow-lg hover-bounce delay-200\">\n              <i className=\"fas fa-star text-yellow-500 text-lg\"></i>\n              <span className=\"text-sm font-medium text-gray-700\">5.0 Rating</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Testimonial Display */}\n        <div className=\"max-w-4xl mx-auto mb-12\">\n          <div className=\"bg-white/80 backdrop-blur-md rounded-3xl shadow-2xl p-8 md:p-12 card-3d morphing-shadow water-ripple hover-lift transition-all duration-700 transform\">\n            <div className=\"text-center\">\n              {/* Star Rating */}\n              <div className=\"flex justify-center space-x-1 mb-6\">\n                {[...Array(testimonialsData[currentTestimonial]?.rating || 5)].map((_, i) => (\n                  <i \n                    key={i} \n                    className=\"fas fa-star text-yellow-400 text-xl animate-scale-in cursor-glow\" \n                    style={{ animationDelay: `${i * 100}ms` }}\n                  ></i>\n                ))}\n              </div>\n\n              {/* Review Text */}\n              <blockquote className=\"text-xl md:text-2xl text-gray-700 font-medium leading-relaxed mb-8 animate-fade-in-up\">\n                \"{testimonialsData[currentTestimonial]?.review || 'No testimonials available'}\"\n              </blockquote>\n\n              {/* Reviewer Info */}\n              <div className=\"text-center animate-slide-up\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <div className=\"bg-blue-100 rounded-full p-2 mr-2\">\n                    <i className={`${getPlatformIcon(testimonialsData[currentTestimonial]?.platform || 'default')} ${getPlatformColor(testimonialsData[currentTestimonial]?.platform || 'default')} text-lg`}></i>\n                  </div>\n                </div>\n                \n                <div>\n                  <p className=\"font-bold text-gray-800 text-lg\">{testimonialsData[currentTestimonial]?.name || 'Anonymous'}</p>\n                  <p className=\"text-gray-600 text-sm flex items-center justify-center space-x-2\">\n                    <span>via {testimonialsData[currentTestimonial]?.platform || 'Review Platform'}</span>\n                    <span>•</span>\n                    <span>{testimonialsData[currentTestimonial]?.reviewDate || 'Recently'}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Testimonial Navigation */}\n        <div className=\"flex justify-center space-x-3 mb-8\">\n          {testimonialsData.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => handleTestimonialChange(index)}\n              className={`w-3 h-3 rounded-full transition-all duration-500 hover-bounce ${\n                index === currentTestimonial \n                  ? 'bg-blue-600 w-8' \n                  : 'bg-gray-300 hover:bg-gray-400'\n              }`}\n              data-testid={`testimonial-dot-${index}`}\n            />\n          ))}\n        </div>\n\n        {/* Grid of All Testimonials (smaller cards) */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6 animate-fade-in-stagger\">\n          {testimonialsData.map((testimonial, index) => (\n            <div \n              key={testimonial.id}\n              className={`bg-white/60 backdrop-blur-sm rounded-2xl p-6 shadow-lg hover:shadow-2xl transition-all duration-700 transform hover-lift cursor-pointer water-ripple morphing-shadow hover:scale-105 ${\n                index === currentTestimonial ? 'ring-2 ring-blue-400 scale-105' : ''\n              }`}\n              onClick={() => handleTestimonialChange(index)}\n              data-testid={`testimonial-card-${testimonial.id}`}\n              style={{ animationDelay: `${index * 100}ms` }}\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className=\"flex-1\">\n                  <p className=\"font-semibold text-gray-800\">{testimonial.name}</p>\n                  <div className=\"flex items-center space-x-1\">\n                    <i className={`${getPlatformIcon(testimonial.platform)} ${getPlatformColor(testimonial.platform)} text-sm`}></i>\n                    <span className=\"text-xs text-gray-600\">{testimonial.platform}</span>\n                  </div>\n                </div>\n                <div className=\"flex space-x-1\">\n                  {[...Array(testimonial.rating)].map((_, i) => (\n                    <i key={i} className=\"fas fa-star text-yellow-400 text-xs\"></i>\n                  ))}\n                </div>\n              </div>\n              \n              <p className=\"text-gray-700 text-sm leading-relaxed line-clamp-3\">\n                \"{testimonial.review}\"\n              </p>\n              \n              <p className=\"text-xs text-gray-500 mt-3\">{testimonial.reviewDate}</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Add Your Review CTA */}\n        <div className=\"text-center mt-16 animate-fade-in-up delay-500\">\n          <div className=\"bg-white/80 backdrop-blur-md rounded-2xl p-8 shadow-xl max-w-2xl mx-auto water-ripple\">\n            <h3 className=\"font-serif text-2xl font-bold text-gray-800 mb-4\">\n              Share Your Experience\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Had an amazing time with us? We'd love to hear about your experience!\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button \n                onClick={() => window.open(\"https://maps.google.com\", '_blank')}\n                className=\"bg-red-500 hover:bg-red-600 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 hover-glow\"\n                data-testid=\"button-google-review\"\n              >\n                <i className=\"fab fa-google mr-2\"></i>\n                Review on Google\n              </button>\n              <button \n                onClick={() => window.open(\"https://tripadvisor.com\", '_blank')}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105 hover-glow\"\n                data-testid=\"button-tripadvisor-review\"\n              >\n                <i className=\"fab fa-tripadvisor mr-2\"></i>\n                Review on TripAdvisor\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":13243},"client/src/components/AboutUs.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport { Users, MapPin, Award, Heart, Clock, Anchor, Globe, Star } from \"lucide-react\";\nimport type { AboutContent, ContentSection } from \"@shared/schema\";\n\nexport default function AboutUs() {\n  const [activeTab, setActiveTab] = useState<'story' | 'location' | 'team' | 'mission'>('story');\n  \n  // Fetch about content from database\n  const { data: aboutContent, isLoading } = useQuery<AboutContent | null>({\n    queryKey: ['/api/about-content'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n    retry: 1\n  });\n  \n  // Fetch additional content sections for comprehensive about us\n  const { data: storyContent } = useQuery<ContentSection | null>({\n    queryKey: ['/api/content-sections', 'about-story'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n  \n  const { data: locationContent } = useQuery<ContentSection | null>({\n    queryKey: ['/api/content-sections', 'about-location'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n  \n  const { data: missionContent } = useQuery<ContentSection | null>({\n    queryKey: ['/api/content-sections', 'about-mission'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'story':\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4\">Our Heritage Story</h3>\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <div className=\"space-y-4\">\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                  {storyContent?.content || \"Heaven of Munroe began as a vision to share the untouched beauty of Munroe Island with the world while preserving its pristine natural environment and cultural heritage. Founded by local families who have called these waters home for generations, our business represents a perfect blend of traditional Kerala hospitality and sustainable tourism practices.\"}\n                </p>\n              </div>\n              <div className=\"space-y-4\">\n                <div className=\"bg-gradient-to-br from-blue-50 to-teal-50 p-6 rounded-xl\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <Clock className=\"text-blue-600\" size={24} />\n                    <h4 className=\"font-semibold text-lg\">Since 2015</h4>\n                  </div>\n                  <p className=\"text-muted-foreground\">\n                    Over 8 years of creating unforgettable backwater experiences while supporting \n                    local families and preserving traditional ways of life.\n                  </p>\n                </div>\n                <div className=\"bg-gradient-to-br from-green-50 to-blue-50 p-6 rounded-xl\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <Award className=\"text-green-600\" size={24} />\n                    <h4 className=\"font-semibold text-lg\">Recognition</h4>\n                  </div>\n                  <p className=\"text-muted-foreground\">\n                    Kerala Tourism Board certified and recognized for sustainable tourism practices \n                    and authentic cultural experiences.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'location':\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4\">Our Paradise Location</h3>\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              <div className=\"lg:col-span-2 space-y-4\">\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                  {locationContent?.content || \"Nestled in the heart of Kerala's Kollam district, Munroe Island is a collection of eight small islands where the Kallada River gracefully meets Ashtamudi Lake. This unique geographical position creates an extraordinary ecosystem that supports diverse wildlife, traditional fishing communities, and centuries-old cultural practices. Our location offers the perfect escape from urban chaos. Here, time moves differently—synchronized with the gentle rhythm of tides, the morning calls of kingfishers, and the evening glow reflecting off tranquil waters.\"}\n                </p>\n                <div className=\"bg-white p-6 rounded-xl shadow-lg border\">\n                  <h4 className=\"font-semibold text-lg mb-4 flex items-center\">\n                    <MapPin className=\"text-blue-600 mr-2\" size={20} />\n                    Location Highlights\n                  </h4>\n                  <div className=\"grid md:grid-cols-2 gap-4 text-sm\">\n                    <div className=\"space-y-2\">\n                      <p><strong>Coordinates:</strong> 8.8932°N, 76.7794°E</p>\n                      <p><strong>District:</strong> Kollam, Kerala</p>\n                      <p><strong>Nearest Airport:</strong> Trivandrum (90km)</p>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <p><strong>Railway Station:</strong> Kollam (25km)</p>\n                      <p><strong>Water Bodies:</strong> Ashtamudi Lake & Kallada River</p>\n                      <p><strong>Ecosystem:</strong> Tropical backwater delta</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"space-y-4\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\"\n                  alt=\"Munroe Island aerial view\"\n                  className=\"w-full h-48 object-cover rounded-xl shadow-lg\"\n                  loading=\"lazy\"\n                />\n                <img \n                  src=\"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\"\n                  alt=\"Traditional Kerala boat\"\n                  className=\"w-full h-48 object-cover rounded-xl shadow-lg\"\n                  loading=\"lazy\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'team':\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4\">Meet Our Family</h3>\n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <img \n                    src={aboutContent?.hostImage || \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&q=80\"}\n                    alt=\"Evan - Lead Host and Guide\"\n                    className=\"w-24 h-24 rounded-full object-cover shadow-lg\"\n                    loading=\"lazy\"\n                  />\n                  <div>\n                    <h4 className=\"font-serif text-xl font-bold\">Evan - Lead Host & Guide</h4>\n                    <p className=\"text-muted-foreground mb-2\">Founder & Cultural Ambassador</p>\n                    <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                      Born and raised on Munroe Island, Evan brings over 20 years of local expertise. \n                      His deep knowledge of the ecosystem, cultural traditions, and multilingual abilities \n                      make every journey both educational and memorable.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-24 h-24 bg-gradient-to-br from-blue-100 to-teal-100 rounded-full flex items-center justify-center\">\n                    <Users className=\"text-blue-600\" size={32} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-serif text-xl font-bold\">Local Guides Team</h4>\n                    <p className=\"text-muted-foreground mb-2\">Native Island Experts</p>\n                    <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                      Our team of local guides includes fishermen, coir artisans, and village elders \n                      who share authentic stories and traditional knowledge passed down through generations.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-6 rounded-xl\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <Globe className=\"text-blue-600\" size={24} />\n                    <h4 className=\"font-semibold\">Languages Spoken</h4>\n                  </div>\n                  <p className=\"text-muted-foreground\">\n                    {aboutContent?.languages || \"English, Hindi, Malayalam, Tamil\"}\n                  </p>\n                </div>\n                \n                <div className=\"bg-green-50 p-6 rounded-xl\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <Award className=\"text-green-600\" size={24} />\n                    <h4 className=\"font-semibold\">Certifications</h4>\n                  </div>\n                  <p className=\"text-muted-foreground\">\n                    {aboutContent?.certifications || \"Kerala Tourism Board Approved, First Aid Certified, Eco-Tourism Trained\"}\n                  </p>\n                </div>\n                \n                <div className=\"bg-yellow-50 p-6 rounded-xl\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    <Star className=\"text-yellow-600\" size={24} />\n                    <h4 className=\"font-semibold\">Experience</h4>\n                  </div>\n                  <p className=\"text-muted-foreground\">\n                    8+ years in sustainable tourism, 500+ happy families served, 98% guest satisfaction rate\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n        \n      case 'mission':\n        return (\n          <div className=\"space-y-6\">\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4\">Our Mission & Values</h3>\n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              <div className=\"space-y-6\">\n                <div className=\"bg-gradient-to-br from-blue-600 to-teal-600 text-white p-6 rounded-xl\">\n                  <h4 className=\"font-serif text-xl font-bold mb-4 flex items-center\">\n                    <Heart className=\"mr-2\" size={24} />\n                    Our Mission\n                  </h4>\n                  <p className=\"leading-relaxed\">\n                    {missionContent?.content || \"To create authentic, sustainable connections between travelers and the natural beauty of Munroe Island while preserving our cultural heritage and supporting local communities.\"}\n                  </p>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <h4 className=\"font-serif text-xl font-bold\">What We Stand For</h4>\n                  <div className=\"grid gap-4\">\n                    <div className=\"flex items-start space-x-3 p-4 bg-white rounded-lg shadow-sm border\">\n                      <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mt-1\">\n                        <span className=\"text-green-600 font-bold text-sm\">1</span>\n                      </div>\n                      <div>\n                        <h5 className=\"font-semibold\">Environmental Conservation</h5>\n                        <p className=\"text-sm text-muted-foreground\">Protecting the delicate ecosystem while sharing its wonders responsibly.</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start space-x-3 p-4 bg-white rounded-lg shadow-sm border\">\n                      <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mt-1\">\n                        <span className=\"text-blue-600 font-bold text-sm\">2</span>\n                      </div>\n                      <div>\n                        <h5 className=\"font-semibold\">Cultural Preservation</h5>\n                        <p className=\"text-sm text-muted-foreground\">Maintaining traditional practices and supporting local artisans and families.</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start space-x-3 p-4 bg-white rounded-lg shadow-sm border\">\n                      <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center mt-1\">\n                        <span className=\"text-yellow-600 font-bold text-sm\">3</span>\n                      </div>\n                      <div>\n                        <h5 className=\"font-semibold\">Authentic Experiences</h5>\n                        <p className=\"text-sm text-muted-foreground\">Creating genuine connections with nature and local culture, not staged performances.</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1602216056096-3b40cc0c9944?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&q=80\"\n                  alt=\"Sustainable tourism at Munroe Island\"\n                  className=\"w-full h-64 object-cover rounded-xl shadow-lg\"\n                  loading=\"lazy\"\n                />\n                \n                <div className=\"bg-green-50 p-6 rounded-xl\">\n                  <h4 className=\"font-serif text-lg font-bold mb-4\">Community Impact</h4>\n                  <div className=\"space-y-3 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Local families supported:</span>\n                      <strong>25+ families</strong>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Traditional crafts promoted:</span>\n                      <strong>Coir, fishing, cuisine</strong>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Mangroves protected:</span>\n                      <strong>15 hectares</strong>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Local employment:</span>\n                      <strong>15+ people</strong>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-blue-50 p-6 rounded-xl\">\n                  <h4 className=\"font-serif text-lg font-bold mb-4\">Awards & Recognition</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <p>🏆 Kerala Responsible Tourism Award 2022</p>\n                    <p>🌱 Sustainable Tourism Excellence 2021</p>\n                    <p>⭐ TripAdvisor Certificate of Excellence</p>\n                    <p>📋 Kerala Tourism Board Certification</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <section id=\"about-us\" className=\"py-20 bg-white/70 backdrop-blur-sm\" data-testid=\"section-about-us\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-6\" data-testid=\"heading-about-us\">\n            About Heaven of Munroe\n          </h2>\n          <div className=\"w-24 h-1 bg-gradient-to-r from-blue-600 to-teal-600 mx-auto mb-8\"></div>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Discover the story behind Kerala's most authentic backwater experience and the passionate \n            team dedicated to sharing Munroe Island's natural wonders with the world.\n          </p>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"max-w-4xl mx-auto mb-12\">\n          <div className=\"flex flex-wrap justify-center gap-2 mb-8\">\n            {[\n              { key: 'story', label: 'Our Story', icon: Anchor },\n              { key: 'location', label: 'Location', icon: MapPin },\n              { key: 'team', label: 'Our Team', icon: Users },\n              { key: 'mission', label: 'Mission', icon: Heart }\n            ].map(({ key, label, icon: Icon }) => (\n              <button\n                key={key}\n                onClick={() => setActiveTab(key as any)}\n                className={`px-6 py-3 rounded-full font-semibold transition-all duration-300 flex items-center space-x-2 ${\n                  activeTab === key\n                    ? 'bg-blue-600 text-white shadow-lg'\n                    : 'bg-white text-muted-foreground hover:bg-blue-50 hover:text-blue-600'\n                }`}\n                data-testid={`tab-${key}`}\n              >\n                <Icon size={18} />\n                <span>{label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Tab Content */}\n          <div className=\"bg-white rounded-2xl shadow-xl p-8 md:p-12 min-h-[600px]\">\n            {isLoading ? (\n              <div className=\"flex items-center justify-center h-64\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n              </div>\n            ) : (\n              renderTabContent()\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":17838},"client/src/components/MunroeIslandDescription.tsx":{"content":"import { Leaf, Home, Ship, CheckCircle, Droplet } from \"lucide-react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport type { ContentSection } from \"@shared/schema\";\n\nexport default function MunroeIslandDescription() {\n  // Fetch content sections from database\n  const { data: mainContent } = useQuery<ContentSection | null>({\n    queryKey: ['/api/content-sections', 'munroe-island-main'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n  \n  const { data: featuresContent } = useQuery<ContentSection | null>({\n    queryKey: ['/api/content-sections', 'munroe-island-features'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  // Use database content with fallbacks\n  const title = mainContent?.title || \"Discover Munroe Island\";\n  const subtitle = mainContent?.content || \"A cluster of eight pristine islands where the Kallada River meets Ashtamudi Lake — Kerala's hidden gem\";\n  const heroImage = mainContent?.imageUrl || \"https://images.unsplash.com/photo-1602216056096-3b40cc0c9944?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80\";\n  return (\n    <section className=\"py-20 bg-white/80 backdrop-blur-sm\" data-testid=\"section-munroe-description\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-serif text-4xl md:text-5xl font-bold text-foreground mb-6\" data-testid=\"heading-munroe-discover\">\n              {title}\n            </h2>\n            <div className=\"w-24 h-1 bg-gradient-to-r from-blue-600 to-teal-600 mx-auto mb-8\"></div>\n            <p className=\"text-xl text-muted-foreground leading-relaxed\">\n              {subtitle}\n            </p>\n          </div>\n          \n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n            <div className=\"space-y-6\">\n              <h3 className=\"font-serif text-2xl font-bold text-foreground\">\n                A Paradise Shaped by Nature\n              </h3>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                Munroe Island is a breathtaking cluster of eight small islands formed where the \n                Kallada River meets Ashtamudi Lake. This pristine delta, \n                located in Kollam district, Kerala, remains one of South India's best-kept secrets.\n              </p>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                Named after Colonel John Munroe, the former British Resident of Travancore, \n                this ecological wonderland spans across narrow canals, lush coconut groves, \n                and traditional fishing villages that have remained unchanged for centuries.\n              </p>\n            </div>\n            <div className=\"relative\">\n              <img \n                src={heroImage}\n                alt=\"Aerial view of Munroe Island's intricate waterways\"\n                className=\"rounded-2xl shadow-2xl w-full h-[400px] object-cover\"\n                loading=\"lazy\"\n                data-testid=\"munroe-island-hero-image\"\n              />\n              <div className=\"absolute -bottom-6 -left-6 bg-white p-6 rounded-xl shadow-lg max-w-xs\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                    <Droplet className=\"text-blue-600\" size={24} />\n                  </div>\n                  <div>\n                    <p className=\"font-semibold text-sm\">8 Island Cluster</p>\n                    <p className=\"text-xs text-muted-foreground\">Ashtamudi Lake</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            <div className=\"text-center p-8 bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"ecosystem-feature-card\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Leaf className=\"text-green-600\" size={32} />\n              </div>\n              <h4 className=\"font-serif text-xl font-bold mb-3\">Pristine Ecosystem</h4>\n              <p className=\"text-muted-foreground\">\n                Home to rare migratory birds, mangrove forests, and diverse marine life in crystal-clear backwaters.\n              </p>\n            </div>\n\n            <div className=\"text-center p-8 bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"villages-feature-card\">\n              <div className=\"w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Home className=\"text-orange-600\" size={32} />\n              </div>\n              <h4 className=\"font-serif text-xl font-bold mb-3\">Traditional Villages</h4>\n              <p className=\"text-muted-foreground\">\n                Experience authentic Kerala village life with traditional fishing, coir making, and local hospitality.\n              </p>\n            </div>\n\n            <div className=\"text-center p-8 bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300\" data-testid=\"canoe-feature-card\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Ship className=\"text-blue-600\" size={32} />\n              </div>\n              <h4 className=\"font-serif text-xl font-bold mb-3\">Canoe Adventures</h4>\n              <p className=\"text-muted-foreground\">\n                Navigate through narrow canals lined with coconut palms and discover hidden lagoons.\n              </p>\n            </div>\n          </div>\n\n          <div className=\"bg-gradient-to-r from-blue-600 to-teal-600 rounded-2xl p-8 md:p-12 text-white\">\n            <div className=\"max-w-3xl mx-auto text-center\">\n              <h3 className=\"font-serif text-2xl md:text-3xl font-bold mb-6\">\n                Why Munroe Island is Special\n              </h3>\n              <div className=\"grid md:grid-cols-2 gap-8 text-left\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Untouched by mass tourism - peaceful and serene</p>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Rich biodiversity with over 100 species of birds</p>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Ancient spice trade routes and historical significance</p>\n                  </div>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Traditional Kerala cuisine with fresh seafood</p>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Authentic cultural experiences and local crafts</p>\n                  </div>\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"text-yellow-400 mt-1\" size={20} />\n                    <p>Perfect blend of adventure and relaxation</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":7872},"api/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\n\n// Import routes for Vercel serverless deployment  \nlet registerRoutes: any;\n\ntry {\n  // Try to import from server directory\n  const routesModule = require(\"../server/routes\");\n  registerRoutes = routesModule.registerRoutes;\n} catch (error) {\n  console.log(\"Failed to import server routes:\", error);\n  // Fallback route registration for Vercel\n  registerRoutes = (app: express.Express) => {\n    app.get(\"/api/health\", (req, res) => {\n      res.json({ status: \"ok\", message: \"API is running\" });\n    });\n    \n    app.all(\"/api/*\", (req, res) => {\n      res.status(503).json({ \n        message: \"Service temporarily unavailable - routes not loaded properly\" \n      });\n    });\n  };\n}\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      console.log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Initialize routes\nregisterRoutes(app);\n\napp.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n  const status = err.status || err.statusCode || 500;\n  const message = err.message || \"Internal Server Error\";\n  res.status(status).json({ message });\n});\n\n// Export handler for Vercel\nexport default app;\n","size_bytes":1958},"client/public/sw.js":{"content":"const CACHE_NAME = 'heaven-of-munroe-v2';\nconst STATIC_CACHE = 'static-v2';\nconst IMAGE_CACHE = 'images-v2';\nconst API_CACHE = 'api-v2';\n\nconst urlsToCache = [\n  '/',\n  '/inquiry',\n  '/manifest.json',\n  '/images/logoon.png'\n];\n\n// Install event - cache resources\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => {\n        console.log('Opened cache');\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\n// Fetch event - serve from cache when offline with improved strategies\nself.addEventListener('fetch', (event) => {\n  const { request } = event;\n  const url = new URL(request.url);\n\n  // Handle API requests with network-first strategy\n  if (url.pathname.startsWith('/api/')) {\n    event.respondWith(\n      fetch(request)\n        .then(response => {\n          if (response.ok) {\n            const responseClone = response.clone();\n            caches.open(API_CACHE).then(cache => {\n              cache.put(request, responseClone);\n            });\n          }\n          return response;\n        })\n        .catch(() => {\n          return caches.match(request);\n        })\n    );\n    return;\n  }\n\n  // Handle images with cache-first strategy\n  if (request.destination === 'image' || url.pathname.includes('/images/')) {\n    event.respondWith(\n      caches.open(IMAGE_CACHE).then(cache => {\n        return cache.match(request).then(response => {\n          if (response) {\n            return response;\n          }\n          return fetch(request).then(fetchResponse => {\n            if (fetchResponse.ok) {\n              cache.put(request, fetchResponse.clone());\n            }\n            return fetchResponse;\n          });\n        });\n      })\n    );\n    return;\n  }\n\n  // Handle other requests with cache-first strategy\n  event.respondWith(\n    caches.match(request)\n      .then((response) => {\n        if (response) {\n          return response;\n        }\n        return fetch(request).then(fetchResponse => {\n          if (fetchResponse.ok && request.method === 'GET') {\n            const responseClone = fetchResponse.clone();\n            caches.open(STATIC_CACHE).then(cache => {\n              cache.put(request, responseClone);\n            });\n          }\n          return fetchResponse;\n        });\n      })\n  );\n});\n\n// Activate event - clean up old caches\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheName !== CACHE_NAME) {\n            console.log('Deleting old cache:', cacheName);\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});\n\n// Background sync for offline form submissions\nself.addEventListener('sync', (event) => {\n  if (event.tag === 'background-sync') {\n    event.waitUntil(doBackgroundSync());\n  }\n});\n\nfunction doBackgroundSync() {\n  // Handle offline form submissions when back online\n  return new Promise((resolve) => {\n    // Implementation for syncing offline data\n    console.log('Background sync triggered');\n    resolve();\n  });\n}\n\n// Push notification handling\nself.addEventListener('push', (event) => {\n  const options = {\n    body: event.data ? event.data.text() : 'New update from Heaven of Munroe!',\n    icon: '/images/logoon.png',\n    badge: '/images/logoon.png',\n    vibrate: [100, 50, 100],\n    data: {\n      dateOfArrival: Date.now(),\n      primaryKey: 1\n    },\n    actions: [\n      {\n        action: 'explore',\n        title: 'Explore',\n        icon: '/images/logoon.png'\n      },\n      {\n        action: 'close',\n        title: 'Close',\n        icon: '/images/logoon.png'\n      }\n    ]\n  };\n\n  event.waitUntil(\n    self.registration.showNotification('Heaven of Munroe', options)\n  );\n});\n\n// Notification click handling\nself.addEventListener('notificationclick', (event) => {\n  event.notification.close();\n\n  if (event.action === 'explore') {\n    event.waitUntil(\n      clients.openWindow('/')\n    );\n  }\n});","size_bytes":4014},"client/src/components/AdminGallery.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { getQueryFn } from \"@/lib/queryClient\";\nimport { Plus, Upload, X, Edit, Trash2 } from \"lucide-react\";\nimport type { GalleryImage } from \"@shared/schema\";\n\ninterface ImageFormData {\n  title: string;\n  description: string;\n  imageUrl: string;\n  altText: string;\n  category: string;\n  sortOrder: number;\n}\n\nexport default function AdminGallery() {\n  const [showForm, setShowForm] = useState(false);\n  const [editingImage, setEditingImage] = useState<GalleryImage | null>(null);\n  const [formData, setFormData] = useState<ImageFormData>({\n    title: \"\",\n    description: \"\",\n    imageUrl: \"\",\n    altText: \"\",\n    category: \"boating\",\n    sortOrder: 0\n  });\n\n  const queryClient = useQueryClient();\n\n  // Fetch gallery images\n  const { data: galleryImages = [], isLoading } = useQuery<GalleryImage[]>({\n    queryKey: ['/api/gallery-images'],\n    queryFn: getQueryFn({ on401: \"returnNull\" }),\n  });\n\n  // Add new image mutation\n  const addImageMutation = useMutation({\n    mutationFn: async (imageData: ImageFormData) => {\n      const response = await fetch('/api/gallery-images', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(imageData),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add image');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/gallery-images'] });\n      resetForm();\n      setShowForm(false);\n    },\n  });\n\n  // Update image mutation\n  const updateImageMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: Partial<ImageFormData> }) => {\n      const response = await fetch(`/api/gallery-images/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update image');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/gallery-images'] });\n      resetForm();\n      setEditingImage(null);\n    },\n  });\n\n  // Delete image mutation\n  const deleteImageMutation = useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`/api/gallery-images/${id}`, {\n        method: 'DELETE',\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete image');\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/gallery-images'] });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      title: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      altText: \"\",\n      category: \"boating\",\n      sortOrder: 0\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (editingImage) {\n      updateImageMutation.mutate({ id: editingImage.id, data: formData });\n    } else {\n      addImageMutation.mutate(formData);\n    }\n  };\n\n  const handleEdit = (image: GalleryImage) => {\n    setEditingImage(image);\n    setFormData({\n      title: image.title,\n      description: image.description || \"\",\n      imageUrl: image.imageUrl,\n      altText: image.altText,\n      category: image.category || \"boating\",\n      sortOrder: image.sortOrder\n    });\n    setShowForm(true);\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm('Are you sure you want to delete this image?')) {\n      deleteImageMutation.mutate(id);\n    }\n  };\n\n  const categories = [\"boating\", \"homestay\", \"food\", \"nature\", \"activities\", \"sunsets\", \"general\"];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-800\">Gallery Management</h1>\n            <button\n              onClick={() => {\n                setShowForm(!showForm);\n                setEditingImage(null);\n                resetForm();\n              }}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors\"\n            >\n              {showForm ? <X size={20} /> : <Plus size={20} />}\n              {showForm ? 'Cancel' : 'Add New Image'}\n            </button>\n          </div>\n\n          {/* Add/Edit Form */}\n          {showForm && (\n            <div className=\"bg-gray-50 rounded-lg p-6 mb-8\">\n              <h2 className=\"text-xl font-semibold mb-4\">\n                {editingImage ? 'Edit Image' : 'Add New Image'}\n              </h2>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Title *\n                    </label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={formData.title}\n                      onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter image title\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category *\n                    </label>\n                    <select\n                      required\n                      value={formData.category}\n                      onChange={(e) => setFormData({ ...formData, category: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                      {categories.map((cat) => (\n                        <option key={cat} value={cat}>\n                          {cat.charAt(0).toUpperCase() + cat.slice(1)}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Image URL *\n                  </label>\n                  <input\n                    type=\"url\"\n                    required\n                    value={formData.imageUrl}\n                    onChange={(e) => setFormData({ ...formData, imageUrl: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"https://example.com/image.jpg\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Alt Text *\n                  </label>\n                  <input\n                    type=\"text\"\n                    required\n                    value={formData.altText}\n                    onChange={(e) => setFormData({ ...formData, altText: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Describe the image for accessibility\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Description\n                  </label>\n                  <textarea\n                    value={formData.description}\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    rows={3}\n                    placeholder=\"Optional description for the image\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Sort Order\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={formData.sortOrder}\n                    onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"0\"\n                  />\n                </div>\n\n                {/* Image Preview */}\n                {formData.imageUrl && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Preview\n                    </label>\n                    <img\n                      src={formData.imageUrl}\n                      alt=\"Preview\"\n                      className=\"w-32 h-32 object-cover rounded-lg border\"\n                      onError={(e) => {\n                        e.currentTarget.style.display = 'none';\n                      }}\n                    />\n                  </div>\n                )}\n\n                <div className=\"flex gap-4\">\n                  <button\n                    type=\"submit\"\n                    disabled={addImageMutation.isPending || updateImageMutation.isPending}\n                    className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg flex items-center gap-2 transition-colors disabled:opacity-50\"\n                  >\n                    <Upload size={20} />\n                    {editingImage ? 'Update Image' : 'Add Image'}\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowForm(false);\n                      setEditingImage(null);\n                      resetForm();\n                    }}\n                    className=\"bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-lg transition-colors\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          {/* Gallery Images List */}\n          <div>\n            <h2 className=\"text-xl font-semibold mb-4\">Current Gallery Images ({galleryImages.length})</h2>\n            {isLoading ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {Array.from({ length: 6 }).map((_, index) => (\n                  <div key={index} className=\"bg-gray-200 rounded-lg h-64 animate-pulse\" />\n                ))}\n              </div>\n            ) : galleryImages.length === 0 ? (\n              <div className=\"text-center py-8 text-gray-500\">\n                <Upload size={48} className=\"mx-auto mb-4 opacity-50\" />\n                <p>No images in gallery yet. Add your first image!</p>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {galleryImages.map((image) => (\n                  <div key={image.id} className=\"bg-white border rounded-lg overflow-hidden shadow-sm\">\n                    <img\n                      src={image.imageUrl}\n                      alt={image.altText}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                    <div className=\"p-4\">\n                      <h3 className=\"font-semibold text-gray-800 mb-1\">{image.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-2\">\n                        Category: {image.category || 'general'}\n                      </p>\n                      {image.description && (\n                        <p className=\"text-sm text-gray-500 mb-3 line-clamp-2\">\n                          {image.description}\n                        </p>\n                      )}\n                      <div className=\"flex gap-2\">\n                        <button\n                          onClick={() => handleEdit(image)}\n                          className=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-sm flex items-center gap-1 transition-colors\"\n                        >\n                          <Edit size={14} />\n                          Edit\n                        </button>\n                        <button\n                          onClick={() => handleDelete(image.id)}\n                          className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm flex items-center gap-1 transition-colors\"\n                        >\n                          <Trash2 size={14} />\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":13262},"client/src/components/PWAInstallPrompt.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { X, Download, Smartphone } from 'lucide-react';\nimport { useInstallBanner } from '@/contexts/InstallBannerContext';\n\n// PWA install prompt appears within 2 seconds when page loads\n// Respects user dismissal for current session only\n// To reset for immediate testing: sessionStorage.removeItem('pwa-install-dismissed')\n// To force show for testing: window.dispatchEvent(new Event('beforeinstallprompt'))\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed';\n    platform: string;\n  }>;\n  prompt(): Promise<void>;\n}\n\nexport default function PWAInstallPrompt() {\n  console.log('PWA Install Prompt: Component rendering');\n  const { setInstallBannerVisible } = useInstallBanner();\n  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);\n  const [showPrompt, setShowPrompt] = useState(false);\n  const [isInstalled, setIsInstalled] = useState(false);\n  const [sessionDismissed, setSessionDismissed] = useState(false);\n\n\n  useEffect(() => {\n    console.log('PWA Install Prompt: useEffect running');\n    \n    // Check if app is already installed\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n    const isInWebAppiOS = (window.navigator as any).standalone === true;\n    \n    console.log('PWA Install Prompt: isStandalone =', isStandalone, 'isInWebAppiOS =', isInWebAppiOS);\n    \n    if (isStandalone || isInWebAppiOS) {\n      console.log('PWA Install Prompt: App is already installed');\n      setIsInstalled(true);\n      return;\n    }\n\n    // Check if user has dismissed the prompt in current session only\n    const sessionDismissedFlag = sessionStorage.getItem('pwa-install-dismissed');\n    \n    console.log('PWA Install Prompt: sessionDismissedFlag =', sessionDismissedFlag);\n    \n    // Only block if dismissed in current session\n    if (sessionDismissedFlag) {\n      console.log('PWA Install Prompt: Blocked by session dismissal');\n      return;\n    }\n    \n    // Listen for the beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      \n      // Double-check dismiss status when event fires (session only)\n      const currentSessionDismissed = sessionStorage.getItem('pwa-install-dismissed');\n      \n      if (currentSessionDismissed) {\n        e.preventDefault();\n        return;\n      }\n      \n      e.preventDefault();\n      setDeferredPrompt(e as BeforeInstallPromptEvent);\n      setShowPrompt(true);\n\n    };\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n\n    // Detect browser and OS\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    const isChrome = /Chrome/.test(navigator.userAgent);\n    const isEdge = /Edg/.test(navigator.userAgent);\n    \n    // Show install prompt within 2 seconds if conditions are met\n    console.log('PWA Install Prompt: Setting up timers');\n    const showTimer = setTimeout(() => {\n      console.log('PWA Install Prompt: 2-second timer fired - conditions:', {\n        isInstalled,\n        sessionDismissedFlag,\n        showPrompt\n      });\n      if (!isInstalled && !sessionDismissedFlag) {\n        console.log('PWA Install Prompt: Showing prompt via 2-second timer');\n        setShowPrompt(true);\n        setInstallBannerVisible(true);\n      }\n    }, 2000);\n    \n    // Also listen for native beforeinstallprompt event with early fallback\n    const fallbackTimer = setTimeout(() => {\n      console.log('PWA Install Prompt: 1-second fallback timer fired - conditions:', {\n        deferredPrompt,\n        showPrompt,\n        isInstalled,\n        sessionDismissedFlag\n      });\n      if (!deferredPrompt && !showPrompt && !isInstalled && !sessionDismissedFlag) {\n        console.log('PWA Install Prompt: Showing prompt via fallback timer');\n        setShowPrompt(true);\n        setInstallBannerVisible(true);\n      }\n    }, 1000);\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      clearTimeout(showTimer);\n      clearTimeout(fallbackTimer);\n    };\n  }, [sessionDismissed]);\n\n  const handleInstallClick = async () => {\n    if (deferredPrompt) {\n      deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      \n      if (outcome === 'accepted') {\n        setShowPrompt(false);\n        setSessionDismissed(true);\n        setInstallBannerVisible(false);\n        sessionStorage.setItem('pwa-install-dismissed', 'true');\n      } else if (outcome === 'dismissed') {\n        setShowPrompt(false);\n        setSessionDismissed(true);\n        setInstallBannerVisible(false);\n        sessionStorage.setItem('pwa-install-dismissed', 'true');\n      }\n    } else {\n      // Show manual installation instructions\n      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n      const isChrome = /Chrome/.test(navigator.userAgent);\n      \n      let instructions = '';\n      if (isIOS) {\n        instructions = 'To install this app on iOS: Tap the Share button in Safari, then tap \"Add to Home Screen\"';\n      } else if (isChrome) {\n        instructions = 'To install this app: Click the three dots menu in Chrome, then select \"Install Heaven of Munroe\"';\n      } else {\n        instructions = 'To install this app: Look for an install option in your browser\\'s menu or address bar';\n      }\n      \n      alert(instructions);\n      setShowPrompt(false);\n      setSessionDismissed(true);\n      setInstallBannerVisible(false);\n      sessionStorage.setItem('pwa-install-dismissed', 'true');\n    }\n    \n    setDeferredPrompt(null);\n  };\n\n  const handleDismiss = () => {\n    setShowPrompt(false);\n    setSessionDismissed(true);\n    setInstallBannerVisible(false);\n    sessionStorage.setItem('pwa-install-dismissed', 'true');\n  };\n\n  // Don't show if dismissed, installed, or conditions not met\n  if (!showPrompt || isInstalled || sessionDismissed) {\n    return null;\n  }\n\n  return (\n    <div \n      className=\"fixed top-0 left-0 right-0 bg-red-600 text-white px-4 py-3 shadow-lg\"\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10000,\n        width: '100%'\n      }}\n      data-testid=\"pwa-install-banner\"\n    >\n      <div className=\"container mx-auto flex items-center justify-between max-w-screen-xl\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"bg-white/20 p-2 rounded-lg\">\n            <Smartphone className=\"w-5 h-5\" />\n          </div>\n          <div>\n            <p className=\"font-semibold text-sm\">\n              Install Heaven of Munroe App\n            </p>\n            <p className=\"text-xs text-blue-100\">\n              Get faster access and offline features\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleInstallClick}\n            className=\"bg-white text-blue-600 px-4 py-2 rounded-lg font-medium text-sm hover:bg-blue-50 transition-colors flex items-center space-x-2\"\n            data-testid=\"button-install-pwa\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>Install</span>\n          </button>\n          \n          <button\n            onClick={handleDismiss}\n            className=\"p-2 hover:bg-white/20 rounded-lg transition-colors\"\n            aria-label=\"Dismiss install prompt\"\n            data-testid=\"button-dismiss-pwa\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":7690},"seed.ts":{"content":"import { storage } from \"./server/storage\";\n\nasync function seed() {\n  console.log(\"Starting database seeding...\");\n\n  try {\n    // Seed Hero Content\n    const heroData = {\n      title: \"Heaven of Munroe\",\n      subtitle: \"Room Stay & Food Boating Service\",\n      description: \"Experience Authentic Kerala Backwaters\",\n      backgroundImage: \"/images/backwater-boat-silhouette.jpg\",\n      primaryButtonText: \"Discover Paradise\",\n      secondaryButtonText: \"Book Your Journey\",\n      scrollHintText: \"✨ Scroll down to explore our services\"\n    };\n    await storage.updateHeroContent(heroData);\n    console.log(\"✓ Hero content seeded\");\n\n    // Seed About Content\n    const aboutData = {\n      title: \"Meet Evan - Your Local Host\",\n      hostName: \"Evan\",\n      hostImage: \"/images/1 (15).jpg\",\n      introText: \"Born and raised on the pristine waters of Munroe Island, Evan has spent over two decades mastering the art of backwater navigation and hospitality.\",\n      description1: \"His deep connection with the local ecosystem and authentic Kerala culture makes every journey a unique experience filled with stories, local wisdom, and genuine warmth.\",\n      description2: \"When you book with Heaven of Munroe, you're not just getting a service - you're becoming part of Evan's extended family.\",\n      expandedText1: \"Evan's expertise extends beyond boating - he's also a certified local guide, traditional chef, and cultural ambassador for Munroe Island. His multilingual abilities ensure comfortable communication with guests from around the world.\",\n      expandedText2: \"The business started as a family tradition, passed down through generations of fishermen and boat builders. Today, Evan combines this heritage with modern hospitality standards to create unforgettable experiences.\",\n      languages: \"English, Hindi, Malayalam\",\n      certifications: \"Tourism Board Approved\"\n    };\n    await storage.updateAboutContent(aboutData);\n    console.log(\"✓ About content seeded\");\n\n    // Seed Boating Packages\n    const packages = [\n      {\n        packageId: \"sunrise-special\",\n        title: \"Sunrise Special\",\n        duration: \"2 Hours\",\n        price: \"₹800\",\n        originalPrice: \"₹1000\",\n        description: \"Experience the magical sunrise over Munroe Island backwaters with traditional breakfast\",\n        features: [\n          \"Early morning boat ride (5:30 AM - 7:30 AM)\",\n          \"Traditional Kerala breakfast on boat\",\n          \"Bird watching opportunities\",\n          \"Photography sessions\",\n          \"Local guide and stories\"\n        ],\n        image: \"/images/1 (1).jpg\",\n        isPopular: true,\n        whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Sunrise Special package\",\n        isActive: true,\n        sortOrder: 1\n      },\n      {\n        packageId: \"family-adventure\",\n        title: \"Family Adventure\",\n        duration: \"4 Hours\",\n        price: \"₹1,500\",\n        originalPrice: \"₹1,800\",\n        description: \"Perfect family experience with fishing, traditional lunch, and backwater exploration\",\n        features: [\n          \"Family-friendly boat tour (9:00 AM - 1:00 PM)\",\n          \"Traditional fishing experience\",\n          \"Authentic Kerala lunch on boat\",\n          \"Wildlife spotting\",\n          \"Kids-friendly activities\"\n        ],\n        image: \"/images/1 (2).jpg\",\n        isPopular: false,\n        whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Family Adventure package\",\n        isActive: true,\n        sortOrder: 2\n      },\n      {\n        packageId: \"sunset-romance\",\n        title: \"Romantic Sunset\",\n        duration: \"3 Hours\",\n        price: \"₹1,200\",\n        originalPrice: \"₹1,500\",\n        description: \"Intimate sunset cruise with candlelight dinner for couples\",\n        features: [\n          \"Private sunset cruise (4:30 PM - 7:30 PM)\",\n          \"Candlelight dinner setup\",\n          \"Romantic ambiance with music\",\n          \"Photography session\",\n          \"Complimentary welcome drink\"\n        ],\n        image: \"/images/1 (3).jpg\",\n        isPopular: true,\n        whatsappLink: \"https://api.whatsapp.com/send?phone=919633836839&text=Hi! I want to book Romantic Sunset package\",\n        isActive: true,\n        sortOrder: 3\n      }\n    ];\n\n    for (const pkg of packages) {\n      await storage.createBoatingPackage(pkg);\n    }\n    console.log(\"✓ Boating packages seeded\");\n\n    // Seed Testimonials\n    const testimonials = [\n      {\n        name: \"Sarah Johnson\",\n        platform: \"Google Maps\",\n        rating: 5,\n        review: \"Absolutely magical experience! The sunrise boat tour was breathtaking. The traditional breakfast on the boat was delicious and the hospitality was exceptional. Highly recommended!\",\n        userImage: \"/images/1 (10).jpg\",\n        reviewDate: \"2024-08-15\",\n        isActive: true,\n        sortOrder: 1\n      },\n      {\n        name: \"Rajesh Kumar\",\n        platform: \"TripAdvisor\",\n        rating: 5,\n        review: \"Best boating experience in Kerala! The family adventure package was perfect for our group. Kids loved the fishing experience and the traditional lunch was amazing.\",\n        userImage: \"/images/1 (11).jpg\",\n        reviewDate: \"2024-08-01\",\n        isActive: true,\n        sortOrder: 2\n      },\n      {\n        name: \"Emily Chen\",\n        platform: \"Google Reviews\",\n        rating: 5,\n        review: \"The romantic sunset cruise exceeded all expectations! The candlelight dinner on the boat was incredibly romantic. Perfect for our anniversary celebration.\",\n        userImage: \"/images/1 (12).jpg\",\n        reviewDate: \"2024-08-10\",\n        isActive: true,\n        sortOrder: 3\n      }\n    ];\n\n    for (const testimonial of testimonials) {\n      await storage.createTestimonial(testimonial);\n    }\n    console.log(\"✓ Testimonials seeded\");\n\n    // Seed Gallery Images\n    const galleryImages = [\n      {\n        title: \"Golden Hour Backwaters\",\n        description: \"Spectacular golden sunset reflecting on calm backwater channels\",\n        imageUrl: \"/images/1 (20).jpg\",\n        altText: \"Golden sunset over backwaters\",\n        category: \"sunsets\",\n        isActive: true,\n        sortOrder: 1\n      },\n      {\n        title: \"Traditional Boat Tour\",\n        description: \"Authentic Kerala boat experience through narrow canals\",\n        imageUrl: \"/images/1 (21).jpg\",\n        altText: \"Traditional boat in backwaters\",\n        category: \"boats\",\n        isActive: true,\n        sortOrder: 2\n      },\n      {\n        title: \"Local Wildlife\",\n        description: \"Discover diverse bird species and marine life\",\n        imageUrl: \"/images/1 (22).jpg\",\n        altText: \"Birds and wildlife in backwaters\",\n        category: \"wildlife\",\n        isActive: true,\n        sortOrder: 3\n      }\n    ];\n\n    for (const image of galleryImages) {\n      await storage.createGalleryImage(image);\n    }\n    console.log(\"✓ Gallery images seeded\");\n\n    // Seed Contact Info\n    const contactInfo = {\n      businessName: \"Heaven of Munroe\",\n      email: \"info@heavenofmunroe.com\",\n      phone: \"+91 96338 36839\",\n      whatsappNumber: \"+919633836839\",\n      address: \"Munroe Island, Kollam, Kerala, India\",\n      description: \"Your gateway to authentic Kerala backwater experiences\",\n      facebook: \"https://facebook.com/heavenofmunroe\",\n      instagram: \"https://instagram.com/heavenofmunroe\",\n      googleMaps: \"https://maps.google.com/?q=Munroe+Island+Kerala\",\n      businessHours: \"6:00 AM - 8:00 PM (Daily)\",\n      isActive: true\n    };\n    await storage.updateContactInfo(contactInfo);\n    console.log(\"✓ Contact info seeded\");\n\n    // Seed Content Sections\n    const contentSections = [\n      {\n        sectionKey: \"munroe-island-main\",\n        title: \"Discover Munroe Island\",\n        content: \"Experience the untouched beauty of Munroe Island, where emerald backwaters meet azure skies in perfect harmony.\",\n        imageUrl: \"/images/canal.jpg\",\n        isActive: true\n      },\n      {\n        sectionKey: \"munroe-island-features\",\n        title: \"Island Features\",\n        content: \"Pristine canals, traditional fishing villages, coconut groves, and authentic Kerala hospitality await you.\",\n        imageUrl: \"/images/boathouse.jpg\",\n        isActive: true\n      }\n    ];\n\n    for (const section of contentSections) {\n      await storage.updateContentSection(section.sectionKey, section);\n    }\n    console.log(\"✓ Content sections seeded\");\n\n    console.log(\"🎉 Database seeding completed successfully!\");\n\n  } catch (error) {\n    console.error(\"❌ Seeding failed:\", error);\n    throw error;\n  }\n}\n\n// Run the seed function\nseed().then(() => {\n  console.log(\"Seeding finished. Exiting...\");\n  process.exit(0);\n}).catch((error) => {\n  console.error(\"Seeding failed:\", error);\n  process.exit(1);\n});","size_bytes":8838},"README.md":{"content":"# 🚣‍♂️ Munroe Island Kayaking & Tourism Website\n\nA modern, responsive Progressive Web App (PWA) for promoting authentic backwater experiences at Munroe Island, Kerala. Features kayaking adventures, traditional homestay accommodations, canal boating, houseboat rides, and local cuisine experiences.\n\n![Munroe Island](client/public/images/backwater-boat-silhouette.jpg)\n\n## ✨ Features\n\n### 🌐 Progressive Web App (PWA)\n- **Installable** on mobile and desktop devices\n- **Offline functionality** with service worker\n- **App-like experience** with automatic install prompts\n- **Fast loading** with optimized caching strategies\n\n### 🎨 Modern Design\n- **Responsive design** optimized for all device sizes\n- **Dark/Light mode** support with system preference detection\n- **Smooth animations** and transitions\n- **Accessibility-first** design with proper ARIA labels\n\n### 🏞️ Content Management\n- **Dynamic content** powered by NEON PostgreSQL database\n- **Image gallery** showcasing 55+ local photos\n- **Service packages** with detailed descriptions and pricing\n- **Customer testimonials** and reviews\n- **Interactive contact forms** with validation\n\n### 📱 User Experience\n- **WhatsApp integration** for direct booking inquiries\n- **Real-time form validation** with user-friendly error messages\n- **Fast navigation** with client-side routing\n- **SEO optimized** for better search engine visibility\n\n## 🚀 Quick Start\n\n### Prerequisites\n- Node.js 18+ \n- npm or yarn package manager\n\n### Installation\n\n1. **Clone and install dependencies:**\n   ```bash\n   git clone <your-repo-url>\n   cd munroe-island-kayaking\n   npm install\n   ```\n\n2. **Set up environment variables:**\n   ```bash\n   # Required: Database connection\n   DATABASE_URL=your_neon_database_url\n   \n   # Optional: Add SendGrid for email functionality\n   SENDGRID_API_KEY=your_sendgrid_key\n   FROM_EMAIL=your_email@domain.com\n   ```\n\n3. **Initialize the database:**\n   ```bash\n   npm run db:push\n   tsx seed.ts\n   ```\n\n4. **Start development server:**\n   ```bash\n   npm run dev\n   ```\n\n5. **Open in browser:**\n   Visit `http://localhost:5000`\n\n## 🖼️ Customizing Images\n\nAll images are stored locally in `client/public/images/` for optimal performance. Here's how to customize key images:\n\n### 🎯 Main Images to Change\n\n| Image Purpose | Location | Current File | Description |\n|---------------|----------|--------------|-------------|\n| **Hero Background** | `seed.ts` → `heroContent.backgroundImage` | `/images/backwater-boat-silhouette.jpg` | Main header background |\n| **Munroe Island Photo** | `seed.ts` → `munroe-island-main.imageUrl` | `/images/canal.jpg` | Primary island showcase |\n| **About Host Photo** | `seed.ts` → `aboutContent.hostImage` | `/images/1 (15).jpg` | Host profile picture |\n\n### 📁 Image Directory Structure\n```\nclient/public/images/\n├── backwater-boat-silhouette.jpg  # Hero background\n├── canal.jpg                      # Main Munroe Island photo  \n├── boathouse.jpg                  # Additional content\n├── 1 (1).jpg through 1 (55).jpg  # Gallery and package photos\n```\n\n### 🔄 How to Change Images\n\n1. **Replace files directly:**\n   - Add your new images to `client/public/images/`\n   - Keep the same filenames for automatic updates\n\n2. **Update database records:**\n   - Edit `seed.ts` to change image paths\n   - Run `tsx seed.ts` to update the database\n   - Or edit directly in the database interface\n\n3. **Add new images:**\n   - Place files in `client/public/images/`\n   - Update the corresponding entries in `seed.ts`\n   - Reference as `/images/your-image.jpg`\n\n## 🗄️ Database Management\n\n### NEON PostgreSQL Integration\n- **Automatic connection** to NEON serverless database\n- **Schema management** with Drizzle ORM\n- **Type-safe operations** with full TypeScript support\n\n### Managing Content\n\n#### Through Database Interface\n1. Access your NEON database dashboard\n2. Edit tables directly: `hero_content`, `about_content`, `gallery_images`, etc.\n3. Changes appear immediately in the app\n\n#### Through Code\n1. Edit `seed.ts` for default content\n2. Run `tsx seed.ts` to update database\n3. Use `npm run db:push` to sync schema changes\n\n### Content Tables\n- `hero_content` - Homepage hero section\n- `about_content` - About page information\n- `boating_packages` - Service packages and pricing\n- `gallery_images` - Photo gallery with descriptions\n- `testimonials` - Customer reviews\n- `content_sections` - Flexible content blocks\n- `booking_inquiries` - Customer inquiry forms\n\n## 📱 PWA Installation\n\n### Mobile Devices\n1. Open the website in mobile browser\n2. Look for \"Add to Home Screen\" prompt\n3. Or tap browser menu → \"Add to Home Screen\"\n4. App icon appears on home screen\n\n### Desktop/PC\n1. Visit the website in Chrome/Edge\n2. Look for install icon in address bar\n3. Click install button when prompted\n4. App opens in standalone window\n\n### Features When Installed\n- ✅ App-like experience with native feel\n- ✅ Offline browsing capability\n- ✅ Push notifications ready (can be enabled)\n- ✅ Faster loading with cached resources\n\n## 🛠️ Development\n\n### Project Structure\n```\nmunroe-island-kayaking/\n├── client/              # React frontend application\n│   ├── src/            # Source code\n│   │   ├── components/ # Reusable UI components\n│   │   ├── pages/      # Page components\n│   │   └── lib/        # Utilities and configurations\n│   └── public/         # Static assets\n│       └── images/     # Local image storage\n├── server/             # Express backend API\n│   ├── routes.ts       # API endpoints\n│   └── storage.ts      # Database interface\n├── shared/             # Shared types and schemas\n│   └── schema.ts       # Database schema definitions\n└── seed.ts             # Database seeding script\n```\n\n### Available Scripts\n```bash\nnpm run dev          # Start development server\nnpm run build        # Build for production\ntsx seed.ts          # Seed database with content\nnpm run db:push      # Sync database schema\nnpm run check        # Type checking\n```\n\n### Technology Stack\n- **Frontend:** React 18, TypeScript, Tailwind CSS, Vite\n- **Backend:** Express.js, Node.js\n- **Database:** PostgreSQL (NEON), Drizzle ORM\n- **UI Library:** shadcn/ui, Radix UI\n- **Forms:** React Hook Form, Zod validation\n- **Icons:** Lucide React\n- **Deployment:** Vercel, Railway ready\n\n## 🚀 Deployment\n\nReady-to-deploy configurations included for multiple platforms:\n\n### Quick Deploy Options\n\n#### Vercel (Recommended)\n```bash\nnpm install -g vercel\nvercel login\nnpm run deploy:vercel\n```\n\n#### Railway\n```bash\nnpm install -g @railway/cli\nrailway login\nnpm run deploy:railway\n```\n\n#### GitHub Actions\nPush to GitHub with proper environment variables set up.\n\n### Environment Setup\n- Database connection automatically configured\n- Environment variables managed securely\n- Static assets optimized for production\n\n**For detailed deployment instructions, see [DEPLOYMENT.md](./DEPLOYMENT.md)**\n\n## 📞 Support & Customization\n\n### Common Customizations\n1. **Change color scheme:** Edit `client/src/index.css`\n2. **Update contact information:** Edit content in database or `seed.ts`\n3. **Add new services:** Create entries in `boating_packages` table\n4. **Modify layout:** Edit React components in `client/src/components/`\n\n### Getting Help\n- Check logs: `npm run dev` and check browser console\n- Database issues: Verify NEON connection and schema\n- Image problems: Ensure files are in `client/public/images/`\n- PWA issues: Check service worker registration in DevTools\n\n## 📄 License\n\nThis project is ready for commercial use. Customize and deploy for your tourism business.\n\n---\n\n**🌴 Ready to showcase the beauty of Munroe Island to the world! 🚣‍♂️**\n\n*Built with modern web technologies for optimal performance and user experience.*","size_bytes":7918},"client/src/components/ErrorBoundary.tsx":{"content":"import React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false\n  };\n\n  public static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n          <div className=\"max-w-md w-full bg-white shadow-lg rounded-lg p-6\">\n            <h2 className=\"text-xl font-bold text-red-600 mb-4\">Something went wrong</h2>\n            <p className=\"text-gray-600 mb-4\">\n              An error occurred while rendering this component.\n            </p>\n            <details className=\"mb-4\">\n              <summary className=\"cursor-pointer text-sm text-gray-500\">Error details</summary>\n              <pre className=\"mt-2 text-xs bg-gray-100 p-2 rounded overflow-auto\">\n                {this.state.error?.toString()}\n              </pre>\n            </details>\n            <button\n              onClick={() => this.setState({ hasError: false, error: undefined })}\n              className=\"w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","size_bytes":1648},"client/src/components/SimpleHeader.tsx":{"content":"import React from \"react\";\nimport { useInstallBanner } from \"@/contexts/InstallBannerContext\";\n\nexport default function SimpleHeader() {\n  const { isInstallBannerVisible } = useInstallBanner();\n  const navigateToHome = () => {\n    window.location.href = \"/\";\n  };\n\n  const openInquiryForm = () => {\n    window.location.href = \"/inquiry#booking-form\";\n  };\n\n  return (\n    <header \n      className=\"bg-white shadow-sm sticky z-40\" \n      style={{ \n        top: isInstallBannerVisible ? '80px' : '0',\n        transition: 'top 0.3s ease-in-out'\n      }}\n    >\n      <div className=\"container mx-auto px-4 py-3\">\n        <div className=\"flex items-center justify-between\">\n          <button \n            onClick={navigateToHome}\n            className=\"flex items-center space-x-3 hover:opacity-80 transition-all duration-300 transform hover:scale-105\"\n            data-testid=\"button-logo-home\"\n          >\n            <img \n              src=\"/images/logo.png\" \n              alt=\"Heaven of Munroe Logo\" \n              className=\"h-16 w-auto object-contain\"\n            />\n          </button>\n          \n          <button\n            onClick={openInquiryForm}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n            data-testid=\"button-book-now\"\n          >\n            Book Now\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n}","size_bytes":1478},"client/src/contexts/InstallBannerContext.tsx":{"content":"import React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface InstallBannerContextType {\n  isInstallBannerVisible: boolean;\n  setInstallBannerVisible: (visible: boolean) => void;\n}\n\nconst InstallBannerContext = createContext<InstallBannerContextType | undefined>(undefined);\n\nexport const useInstallBanner = () => {\n  const context = useContext(InstallBannerContext);\n  if (!context) {\n    throw new Error('useInstallBanner must be used within an InstallBannerProvider');\n  }\n  return context;\n};\n\ninterface InstallBannerProviderProps {\n  children: ReactNode;\n}\n\nexport const InstallBannerProvider: React.FC<InstallBannerProviderProps> = ({ children }) => {\n  const [isInstallBannerVisible, setInstallBannerVisible] = useState(false);\n\n  return (\n    <InstallBannerContext.Provider value={{ isInstallBannerVisible, setInstallBannerVisible }}>\n      {children}\n    </InstallBannerContext.Provider>\n  );\n};","size_bytes":932},"server/email.ts":{"content":"import sgMail from '@sendgrid/mail';\n\nif (process.env.SENDGRID_API_KEY) {\n  sgMail.setApiKey(process.env.SENDGRID_API_KEY);\n}\n\ninterface EmailParams {\n  to: string;\n  from: string;\n  subject: string;\n  text?: string;\n  html?: string;\n}\n\nexport async function sendEmail(params: EmailParams): Promise<boolean> {\n  // If SendGrid is not configured, log the message instead of sending\n  if (!process.env.SENDGRID_API_KEY || !process.env.SENDGRID_FROM_EMAIL) {\n    console.log('Email would be sent:', {\n      to: params.to,\n      from: params.from,\n      subject: params.subject,\n      text: params.text\n    });\n    return true;\n  }\n\n  try {\n    const emailData: any = {\n      to: params.to,\n      from: params.from,\n      subject: params.subject,\n    };\n    \n    if (params.text) emailData.text = params.text;\n    if (params.html) emailData.html = params.html;\n    \n    await sgMail.send(emailData);\n    console.log('Email sent successfully to:', params.to);\n    return true;\n  } catch (error) {\n    console.error('SendGrid email error:', error);\n    return false;\n  }\n}\n\nexport function formatBookingNotification(data: any) {\n  const subject = `New Booking Inquiry - ${data.name}`;\n  const text = `\nNew booking inquiry received:\n\nName: ${data.name}\nEmail: ${data.email}\nPhone: ${data.phone || 'Not provided'}\nCheck-in Date: ${data.checkInDate || 'Not specified'}\nCheck-out Date: ${data.checkOutDate || 'Not specified'}\nGuests: ${data.numberOfGuests || 'Not specified'}\nPackage Type: ${data.packageType || 'Not specified'}\n\nSpecial Requests:\n${data.specialRequests || 'None'}\n\nSubmitted at: ${new Date().toLocaleString()}\n  `;\n\n  const html = `\n    <h2>New Booking Inquiry</h2>\n    <p><strong>Name:</strong> ${data.name}</p>\n    <p><strong>Email:</strong> ${data.email}</p>\n    <p><strong>Phone:</strong> ${data.phone || 'Not provided'}</p>\n    <p><strong>Check-in Date:</strong> ${data.checkInDate || 'Not specified'}</p>\n    <p><strong>Check-out Date:</strong> ${data.checkOutDate || 'Not specified'}</p>\n    <p><strong>Number of Guests:</strong> ${data.numberOfGuests || 'Not specified'}</p>\n    <p><strong>Package Type:</strong> ${data.packageType || 'Not specified'}</p>\n    <p><strong>Special Requests:</strong></p>\n    <p>${data.specialRequests || 'None'}</p>\n    <p><strong>Submitted at:</strong> ${new Date().toLocaleString()}</p>\n  `;\n\n  return { subject, text, html };\n}\n\nexport function formatContactNotification(data: any) {\n  const subject = `New Contact Message - ${data.name}`;\n  const text = `\nNew contact message received:\n\nName: ${data.name}\nEmail: ${data.email}\nPhone: ${data.phone || 'Not provided'}\n\nMessage:\n${data.message}\n\nSubmitted at: ${new Date().toLocaleString()}\n  `;\n\n  const html = `\n    <h2>New Contact Message</h2>\n    <p><strong>Name:</strong> ${data.name}</p>\n    <p><strong>Email:</strong> ${data.email}</p>\n    <p><strong>Phone:</strong> ${data.phone || 'Not provided'}</p>\n    <p><strong>Message:</strong></p>\n    <p>${data.message}</p>\n    <p><strong>Submitted at:</strong> ${new Date().toLocaleString()}</p>\n  `;\n\n  return { subject, text, html };\n}","size_bytes":3086}},"version":1}